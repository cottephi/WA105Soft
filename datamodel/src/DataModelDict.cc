//
// File generated by rootcint at Wed Jul  5 18:31:35 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIDataModelDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "DataModelDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      namespace LArRawData {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::LArRawData::DataFragment< float > DataFragmentlEfloatgR;
      #else
      class DataFragmentlEfloatgR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DataFragmentlEfloatgR() throw() {};
         unsigned int fStart; //start of the data fragment sequence
         unsigned int fEnd; //end of the data fragment sequence
         vector< float > fData; //fragment data
      };
      #endif
      } 
      namespace LArRawData {

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::LArRawData::DataFragment< unsigned short > DataFragmentlEunsignedsPshortgR;
      #else
      class DataFragmentlEunsignedsPshortgR  :  public ::TObject {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~DataFragmentlEunsignedsPshortgR() throw() {};
         unsigned int fStart; //start of the data fragment sequence
         unsigned int fEnd; //end of the data fragment sequence
         vector< unsigned short > fData; //fragment data
      };
      #endif
      } 
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void RunHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RunHeader(void *p = 0);
   static void *newArray_RunHeader(Long_t size, void *p);
   static void delete_RunHeader(void *p);
   static void deleteArray_RunHeader(void *p);
   static void destruct_RunHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RunHeader*)
   {
      ::RunHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RunHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RunHeader", ::RunHeader::Class_Version(), "../include/RunHeader.h", 9,
                  typeid(::RunHeader), DefineBehavior(ptr, ptr),
                  &::RunHeader::Dictionary, isa_proxy, 4,
                  sizeof(::RunHeader) );
      instance.SetNew(&new_RunHeader);
      instance.SetNewArray(&newArray_RunHeader);
      instance.SetDelete(&delete_RunHeader);
      instance.SetDeleteArray(&deleteArray_RunHeader);
      instance.SetDestructor(&destruct_RunHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RunHeader*)
   {
      return GenerateInitInstanceLocal((::RunHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RunHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void EventHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_EventHeader(void *p = 0);
   static void *newArray_EventHeader(Long_t size, void *p);
   static void delete_EventHeader(void *p);
   static void deleteArray_EventHeader(void *p);
   static void destruct_EventHeader(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::EventHeader*)
   {
      ::EventHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::EventHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("EventHeader", ::EventHeader::Class_Version(), "../include/EventHeader.h", 15,
                  typeid(::EventHeader), DefineBehavior(ptr, ptr),
                  &::EventHeader::Dictionary, isa_proxy, 4,
                  sizeof(::EventHeader) );
      instance.SetNew(&new_EventHeader);
      instance.SetNewArray(&newArray_EventHeader);
      instance.SetDelete(&delete_EventHeader);
      instance.SetDeleteArray(&deleteArray_EventHeader);
      instance.SetDestructor(&destruct_EventHeader);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::EventHeader*)
   {
      return GenerateInitInstanceLocal((::EventHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::EventHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void BeamInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_BeamInfo(void *p = 0);
   static void *newArray_BeamInfo(Long_t size, void *p);
   static void delete_BeamInfo(void *p);
   static void deleteArray_BeamInfo(void *p);
   static void destruct_BeamInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::BeamInfo*)
   {
      ::BeamInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::BeamInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("BeamInfo", ::BeamInfo::Class_Version(), "../include/BeamInfo.h", 13,
                  typeid(::BeamInfo), DefineBehavior(ptr, ptr),
                  &::BeamInfo::Dictionary, isa_proxy, 4,
                  sizeof(::BeamInfo) );
      instance.SetNew(&new_BeamInfo);
      instance.SetNewArray(&newArray_BeamInfo);
      instance.SetDelete(&delete_BeamInfo);
      instance.SetDeleteArray(&deleteArray_BeamInfo);
      instance.SetDestructor(&destruct_BeamInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::BeamInfo*)
   {
      return GenerateInitInstanceLocal((::BeamInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::BeamInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void GeomConfig_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GeomConfig(void *p = 0);
   static void *newArray_GeomConfig(Long_t size, void *p);
   static void delete_GeomConfig(void *p);
   static void deleteArray_GeomConfig(void *p);
   static void destruct_GeomConfig(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GeomConfig*)
   {
      ::GeomConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GeomConfig >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GeomConfig", ::GeomConfig::Class_Version(), "../include/GeomConfig.h", 15,
                  typeid(::GeomConfig), DefineBehavior(ptr, ptr),
                  &::GeomConfig::Dictionary, isa_proxy, 4,
                  sizeof(::GeomConfig) );
      instance.SetNew(&new_GeomConfig);
      instance.SetNewArray(&newArray_GeomConfig);
      instance.SetDelete(&delete_GeomConfig);
      instance.SetDeleteArray(&deleteArray_GeomConfig);
      instance.SetDestructor(&destruct_GeomConfig);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GeomConfig*)
   {
      return GenerateInitInstanceLocal((::GeomConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GeomConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArRawDatacLcLDataChan_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArRawDatacLcLDataChan(void *p = 0);
   static void *newArray_LArRawDatacLcLDataChan(Long_t size, void *p);
   static void delete_LArRawDatacLcLDataChan(void *p);
   static void deleteArray_LArRawDatacLcLDataChan(void *p);
   static void destruct_LArRawDatacLcLDataChan(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArRawData::DataChan*)
   {
      ::LArRawData::DataChan *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArRawData::DataChan >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArRawData::DataChan", ::LArRawData::DataChan::Class_Version(), "../include/DataChan.h", 38,
                  typeid(::LArRawData::DataChan), DefineBehavior(ptr, ptr),
                  &::LArRawData::DataChan::Dictionary, isa_proxy, 4,
                  sizeof(::LArRawData::DataChan) );
      instance.SetNew(&new_LArRawDatacLcLDataChan);
      instance.SetNewArray(&newArray_LArRawDatacLcLDataChan);
      instance.SetDelete(&delete_LArRawDatacLcLDataChan);
      instance.SetDeleteArray(&deleteArray_LArRawDatacLcLDataChan);
      instance.SetDestructor(&destruct_LArRawDatacLcLDataChan);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArRawData::DataChan*)
   {
      return GenerateInitInstanceLocal((::LArRawData::DataChan*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArRawData::DataChan*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArRawDatacLcLDataCRM_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArRawDatacLcLDataCRM(void *p = 0);
   static void *newArray_LArRawDatacLcLDataCRM(Long_t size, void *p);
   static void delete_LArRawDatacLcLDataCRM(void *p);
   static void deleteArray_LArRawDatacLcLDataCRM(void *p);
   static void destruct_LArRawDatacLcLDataCRM(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArRawData::DataCRM*)
   {
      ::LArRawData::DataCRM *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArRawData::DataCRM >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArRawData::DataCRM", ::LArRawData::DataCRM::Class_Version(), "../include/DataCRM.h", 20,
                  typeid(::LArRawData::DataCRM), DefineBehavior(ptr, ptr),
                  &::LArRawData::DataCRM::Dictionary, isa_proxy, 4,
                  sizeof(::LArRawData::DataCRM) );
      instance.SetNew(&new_LArRawDatacLcLDataCRM);
      instance.SetNewArray(&newArray_LArRawDatacLcLDataCRM);
      instance.SetDelete(&delete_LArRawDatacLcLDataCRM);
      instance.SetDeleteArray(&deleteArray_LArRawDatacLcLDataCRM);
      instance.SetDestructor(&destruct_LArRawDatacLcLDataCRM);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArRawData::DataCRM*)
   {
      return GenerateInitInstanceLocal((::LArRawData::DataCRM*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArRawData::DataCRM*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArRawDatacLcLDataCRP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArRawDatacLcLDataCRP(void *p = 0);
   static void *newArray_LArRawDatacLcLDataCRP(Long_t size, void *p);
   static void delete_LArRawDatacLcLDataCRP(void *p);
   static void deleteArray_LArRawDatacLcLDataCRP(void *p);
   static void destruct_LArRawDatacLcLDataCRP(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArRawData::DataCRP*)
   {
      ::LArRawData::DataCRP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArRawData::DataCRP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArRawData::DataCRP", ::LArRawData::DataCRP::Class_Version(), "../include/DataCRP.h", 19,
                  typeid(::LArRawData::DataCRP), DefineBehavior(ptr, ptr),
                  &::LArRawData::DataCRP::Dictionary, isa_proxy, 4,
                  sizeof(::LArRawData::DataCRP) );
      instance.SetNew(&new_LArRawDatacLcLDataCRP);
      instance.SetNewArray(&newArray_LArRawDatacLcLDataCRP);
      instance.SetDelete(&delete_LArRawDatacLcLDataCRP);
      instance.SetDeleteArray(&deleteArray_LArRawDatacLcLDataCRP);
      instance.SetDestructor(&destruct_LArRawDatacLcLDataCRP);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArRawData::DataCRP*)
   {
      return GenerateInitInstanceLocal((::LArRawData::DataCRP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArRawData::DataCRP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArVoxelcLcLVoxelInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArVoxelcLcLVoxelInfo(void *p = 0);
   static void *newArray_LArVoxelcLcLVoxelInfo(Long_t size, void *p);
   static void delete_LArVoxelcLcLVoxelInfo(void *p);
   static void deleteArray_LArVoxelcLcLVoxelInfo(void *p);
   static void destruct_LArVoxelcLcLVoxelInfo(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArVoxel::VoxelInfo*)
   {
      ::LArVoxel::VoxelInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArVoxel::VoxelInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArVoxel::VoxelInfo", ::LArVoxel::VoxelInfo::Class_Version(), "../include/VoxelInfo.h", 15,
                  typeid(::LArVoxel::VoxelInfo), DefineBehavior(ptr, ptr),
                  &::LArVoxel::VoxelInfo::Dictionary, isa_proxy, 4,
                  sizeof(::LArVoxel::VoxelInfo) );
      instance.SetNew(&new_LArVoxelcLcLVoxelInfo);
      instance.SetNewArray(&newArray_LArVoxelcLcLVoxelInfo);
      instance.SetDelete(&delete_LArVoxelcLcLVoxelInfo);
      instance.SetDeleteArray(&deleteArray_LArVoxelcLcLVoxelInfo);
      instance.SetDestructor(&destruct_LArVoxelcLcLVoxelInfo);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArVoxel::VoxelInfo*)
   {
      return GenerateInitInstanceLocal((::LArVoxel::VoxelInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArVoxelcLcLVoxelInfoCRM_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArVoxelcLcLVoxelInfoCRM(void *p = 0);
   static void *newArray_LArVoxelcLcLVoxelInfoCRM(Long_t size, void *p);
   static void delete_LArVoxelcLcLVoxelInfoCRM(void *p);
   static void deleteArray_LArVoxelcLcLVoxelInfoCRM(void *p);
   static void destruct_LArVoxelcLcLVoxelInfoCRM(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArVoxel::VoxelInfoCRM*)
   {
      ::LArVoxel::VoxelInfoCRM *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArVoxel::VoxelInfoCRM >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArVoxel::VoxelInfoCRM", ::LArVoxel::VoxelInfoCRM::Class_Version(), "../include/VoxelInfoCRM.h", 13,
                  typeid(::LArVoxel::VoxelInfoCRM), DefineBehavior(ptr, ptr),
                  &::LArVoxel::VoxelInfoCRM::Dictionary, isa_proxy, 4,
                  sizeof(::LArVoxel::VoxelInfoCRM) );
      instance.SetNew(&new_LArVoxelcLcLVoxelInfoCRM);
      instance.SetNewArray(&newArray_LArVoxelcLcLVoxelInfoCRM);
      instance.SetDelete(&delete_LArVoxelcLcLVoxelInfoCRM);
      instance.SetDeleteArray(&deleteArray_LArVoxelcLcLVoxelInfoCRM);
      instance.SetDestructor(&destruct_LArVoxelcLcLVoxelInfoCRM);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArVoxel::VoxelInfoCRM*)
   {
      return GenerateInitInstanceLocal((::LArVoxel::VoxelInfoCRM*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfoCRM*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArVoxelcLcLVoxelInfoCRP_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArVoxelcLcLVoxelInfoCRP(void *p = 0);
   static void *newArray_LArVoxelcLcLVoxelInfoCRP(Long_t size, void *p);
   static void delete_LArVoxelcLcLVoxelInfoCRP(void *p);
   static void deleteArray_LArVoxelcLcLVoxelInfoCRP(void *p);
   static void destruct_LArVoxelcLcLVoxelInfoCRP(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArVoxel::VoxelInfoCRP*)
   {
      ::LArVoxel::VoxelInfoCRP *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArVoxel::VoxelInfoCRP >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArVoxel::VoxelInfoCRP", ::LArVoxel::VoxelInfoCRP::Class_Version(), "../include/VoxelInfoCRP.h", 19,
                  typeid(::LArVoxel::VoxelInfoCRP), DefineBehavior(ptr, ptr),
                  &::LArVoxel::VoxelInfoCRP::Dictionary, isa_proxy, 4,
                  sizeof(::LArVoxel::VoxelInfoCRP) );
      instance.SetNew(&new_LArVoxelcLcLVoxelInfoCRP);
      instance.SetNewArray(&newArray_LArVoxelcLcLVoxelInfoCRP);
      instance.SetDelete(&delete_LArVoxelcLcLVoxelInfoCRP);
      instance.SetDeleteArray(&deleteArray_LArVoxelcLcLVoxelInfoCRP);
      instance.SetDestructor(&destruct_LArVoxelcLcLVoxelInfoCRP);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArVoxel::VoxelInfoCRP*)
   {
      return GenerateInitInstanceLocal((::LArVoxel::VoxelInfoCRP*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfoCRP*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArRecocLcLRecoObjLink_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArRecocLcLRecoObjLink(void *p = 0);
   static void *newArray_LArRecocLcLRecoObjLink(Long_t size, void *p);
   static void delete_LArRecocLcLRecoObjLink(void *p);
   static void deleteArray_LArRecocLcLRecoObjLink(void *p);
   static void destruct_LArRecocLcLRecoObjLink(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArReco::RecoObjLink*)
   {
      ::LArReco::RecoObjLink *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArReco::RecoObjLink >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArReco::RecoObjLink", ::LArReco::RecoObjLink::Class_Version(), "../include/RecoObject.h", 55,
                  typeid(::LArReco::RecoObjLink), DefineBehavior(ptr, ptr),
                  &::LArReco::RecoObjLink::Dictionary, isa_proxy, 4,
                  sizeof(::LArReco::RecoObjLink) );
      instance.SetNew(&new_LArRecocLcLRecoObjLink);
      instance.SetNewArray(&newArray_LArRecocLcLRecoObjLink);
      instance.SetDelete(&delete_LArRecocLcLRecoObjLink);
      instance.SetDeleteArray(&deleteArray_LArRecocLcLRecoObjLink);
      instance.SetDestructor(&destruct_LArRecocLcLRecoObjLink);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArReco::RecoObjLink*)
   {
      return GenerateInitInstanceLocal((::LArReco::RecoObjLink*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArReco::RecoObjLink*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArRecocLcLRecoObject_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_LArRecocLcLRecoObject(void *p);
   static void deleteArray_LArRecocLcLRecoObject(void *p);
   static void destruct_LArRecocLcLRecoObject(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArReco::RecoObject*)
   {
      ::LArReco::RecoObject *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArReco::RecoObject >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArReco::RecoObject", ::LArReco::RecoObject::Class_Version(), "../include/RecoObject.h", 80,
                  typeid(::LArReco::RecoObject), DefineBehavior(ptr, ptr),
                  &::LArReco::RecoObject::Dictionary, isa_proxy, 4,
                  sizeof(::LArReco::RecoObject) );
      instance.SetDelete(&delete_LArRecocLcLRecoObject);
      instance.SetDeleteArray(&deleteArray_LArRecocLcLRecoObject);
      instance.SetDestructor(&destruct_LArRecocLcLRecoObject);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArReco::RecoObject*)
   {
      return GenerateInitInstanceLocal((::LArReco::RecoObject*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArReco::RecoObject*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArRecocLcLQHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArRecocLcLQHit(void *p = 0);
   static void *newArray_LArRecocLcLQHit(Long_t size, void *p);
   static void delete_LArRecocLcLQHit(void *p);
   static void deleteArray_LArRecocLcLQHit(void *p);
   static void destruct_LArRecocLcLQHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArReco::QHit*)
   {
      ::LArReco::QHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArReco::QHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArReco::QHit", ::LArReco::QHit::Class_Version(), "../include/QHit.h", 24,
                  typeid(::LArReco::QHit), DefineBehavior(ptr, ptr),
                  &::LArReco::QHit::Dictionary, isa_proxy, 4,
                  sizeof(::LArReco::QHit) );
      instance.SetNew(&new_LArRecocLcLQHit);
      instance.SetNewArray(&newArray_LArRecocLcLQHit);
      instance.SetDelete(&delete_LArRecocLcLQHit);
      instance.SetDeleteArray(&deleteArray_LArRecocLcLQHit);
      instance.SetDestructor(&destruct_LArRecocLcLQHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArReco::QHit*)
   {
      return GenerateInitInstanceLocal((::LArReco::QHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArReco::QHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArRecocLcLCluster2d_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArRecocLcLCluster2d(void *p = 0);
   static void *newArray_LArRecocLcLCluster2d(Long_t size, void *p);
   static void delete_LArRecocLcLCluster2d(void *p);
   static void deleteArray_LArRecocLcLCluster2d(void *p);
   static void destruct_LArRecocLcLCluster2d(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArReco::Cluster2d*)
   {
      ::LArReco::Cluster2d *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArReco::Cluster2d >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArReco::Cluster2d", ::LArReco::Cluster2d::Class_Version(), "../include/Cluster2d.h", 24,
                  typeid(::LArReco::Cluster2d), DefineBehavior(ptr, ptr),
                  &::LArReco::Cluster2d::Dictionary, isa_proxy, 4,
                  sizeof(::LArReco::Cluster2d) );
      instance.SetNew(&new_LArRecocLcLCluster2d);
      instance.SetNewArray(&newArray_LArRecocLcLCluster2d);
      instance.SetDelete(&delete_LArRecocLcLCluster2d);
      instance.SetDeleteArray(&deleteArray_LArRecocLcLCluster2d);
      instance.SetDestructor(&destruct_LArRecocLcLCluster2d);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArReco::Cluster2d*)
   {
      return GenerateInitInstanceLocal((::LArReco::Cluster2d*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArReco::Cluster2d*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArRecocLcLTrack2d_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArRecocLcLTrack2d(void *p = 0);
   static void *newArray_LArRecocLcLTrack2d(Long_t size, void *p);
   static void delete_LArRecocLcLTrack2d(void *p);
   static void deleteArray_LArRecocLcLTrack2d(void *p);
   static void destruct_LArRecocLcLTrack2d(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArReco::Track2d*)
   {
      ::LArReco::Track2d *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArReco::Track2d >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArReco::Track2d", ::LArReco::Track2d::Class_Version(), "../include/Track2d.h", 20,
                  typeid(::LArReco::Track2d), DefineBehavior(ptr, ptr),
                  &::LArReco::Track2d::Dictionary, isa_proxy, 4,
                  sizeof(::LArReco::Track2d) );
      instance.SetNew(&new_LArRecocLcLTrack2d);
      instance.SetNewArray(&newArray_LArRecocLcLTrack2d);
      instance.SetDelete(&delete_LArRecocLcLTrack2d);
      instance.SetDeleteArray(&deleteArray_LArRecocLcLTrack2d);
      instance.SetDestructor(&destruct_LArRecocLcLTrack2d);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArReco::Track2d*)
   {
      return GenerateInitInstanceLocal((::LArReco::Track2d*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArReco::Track2d*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void RecoConfig_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_RecoConfig(void *p = 0);
   static void *newArray_RecoConfig(Long_t size, void *p);
   static void delete_RecoConfig(void *p);
   static void deleteArray_RecoConfig(void *p);
   static void destruct_RecoConfig(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::RecoConfig*)
   {
      ::RecoConfig *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::RecoConfig >(0);
      static ::ROOT::TGenericClassInfo 
         instance("RecoConfig", ::RecoConfig::Class_Version(), "../include/RecoConfig.h", 19,
                  typeid(::RecoConfig), DefineBehavior(ptr, ptr),
                  &::RecoConfig::Dictionary, isa_proxy, 4,
                  sizeof(::RecoConfig) );
      instance.SetNew(&new_RecoConfig);
      instance.SetNewArray(&newArray_RecoConfig);
      instance.SetDelete(&delete_RecoConfig);
      instance.SetDeleteArray(&deleteArray_RecoConfig);
      instance.SetDestructor(&destruct_RecoConfig);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::RecoConfig*)
   {
      return GenerateInitInstanceLocal((::RecoConfig*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::RecoConfig*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HitReco_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HitReco(void *p = 0);
   static void *newArray_HitReco(Long_t size, void *p);
   static void delete_HitReco(void *p);
   static void deleteArray_HitReco(void *p);
   static void destruct_HitReco(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HitReco*)
   {
      ::HitReco *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HitReco >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HitReco", ::HitReco::Class_Version(), "../include/HitReco.h", 17,
                  typeid(::HitReco), DefineBehavior(ptr, ptr),
                  &::HitReco::Dictionary, isa_proxy, 4,
                  sizeof(::HitReco) );
      instance.SetNew(&new_HitReco);
      instance.SetNewArray(&newArray_HitReco);
      instance.SetDelete(&delete_HitReco);
      instance.SetDeleteArray(&deleteArray_HitReco);
      instance.SetDestructor(&destruct_HitReco);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HitReco*)
   {
      return GenerateInitInstanceLocal((::HitReco*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HitReco*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArRawDatacLcLDataLRO_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArRawDatacLcLDataLRO(void *p = 0);
   static void *newArray_LArRawDatacLcLDataLRO(Long_t size, void *p);
   static void delete_LArRawDatacLcLDataLRO(void *p);
   static void deleteArray_LArRawDatacLcLDataLRO(void *p);
   static void destruct_LArRawDatacLcLDataLRO(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArRawData::DataLRO*)
   {
      ::LArRawData::DataLRO *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArRawData::DataLRO >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArRawData::DataLRO", ::LArRawData::DataLRO::Class_Version(), "../include/DataLRO.h", 25,
                  typeid(::LArRawData::DataLRO), DefineBehavior(ptr, ptr),
                  &::LArRawData::DataLRO::Dictionary, isa_proxy, 4,
                  sizeof(::LArRawData::DataLRO) );
      instance.SetNew(&new_LArRawDatacLcLDataLRO);
      instance.SetNewArray(&newArray_LArRawDatacLcLDataLRO);
      instance.SetDelete(&delete_LArRawDatacLcLDataLRO);
      instance.SetDeleteArray(&deleteArray_LArRawDatacLcLDataLRO);
      instance.SetDestructor(&destruct_LArRawDatacLcLDataLRO);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArRawData::DataLRO*)
   {
      return GenerateInitInstanceLocal((::LArRawData::DataLRO*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArRawData::DataLRO*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArMCTruthcLcLChanTrueQ_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArMCTruthcLcLChanTrueQ(void *p = 0);
   static void *newArray_LArMCTruthcLcLChanTrueQ(Long_t size, void *p);
   static void delete_LArMCTruthcLcLChanTrueQ(void *p);
   static void deleteArray_LArMCTruthcLcLChanTrueQ(void *p);
   static void destruct_LArMCTruthcLcLChanTrueQ(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArMCTruth::ChanTrueQ*)
   {
      ::LArMCTruth::ChanTrueQ *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArMCTruth::ChanTrueQ >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArMCTruth::ChanTrueQ", ::LArMCTruth::ChanTrueQ::Class_Version(), "../include/ChanTrueQ.h", 21,
                  typeid(::LArMCTruth::ChanTrueQ), DefineBehavior(ptr, ptr),
                  &::LArMCTruth::ChanTrueQ::Dictionary, isa_proxy, 4,
                  sizeof(::LArMCTruth::ChanTrueQ) );
      instance.SetNew(&new_LArMCTruthcLcLChanTrueQ);
      instance.SetNewArray(&newArray_LArMCTruthcLcLChanTrueQ);
      instance.SetDelete(&delete_LArMCTruthcLcLChanTrueQ);
      instance.SetDeleteArray(&deleteArray_LArMCTruthcLcLChanTrueQ);
      instance.SetDestructor(&destruct_LArMCTruthcLcLChanTrueQ);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArMCTruth::ChanTrueQ*)
   {
      return GenerateInitInstanceLocal((::LArMCTruth::ChanTrueQ*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArMCTruth::ChanTrueQ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArMCTruthcLcLAnodeTrueQ_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_LArMCTruthcLcLAnodeTrueQ(void *p = 0);
   static void *newArray_LArMCTruthcLcLAnodeTrueQ(Long_t size, void *p);
   static void delete_LArMCTruthcLcLAnodeTrueQ(void *p);
   static void deleteArray_LArMCTruthcLcLAnodeTrueQ(void *p);
   static void destruct_LArMCTruthcLcLAnodeTrueQ(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArMCTruth::AnodeTrueQ*)
   {
      ::LArMCTruth::AnodeTrueQ *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArMCTruth::AnodeTrueQ >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArMCTruth::AnodeTrueQ", ::LArMCTruth::AnodeTrueQ::Class_Version(), "../include/AnodeTrueQ.h", 16,
                  typeid(::LArMCTruth::AnodeTrueQ), DefineBehavior(ptr, ptr),
                  &::LArMCTruth::AnodeTrueQ::Dictionary, isa_proxy, 4,
                  sizeof(::LArMCTruth::AnodeTrueQ) );
      instance.SetNew(&new_LArMCTruthcLcLAnodeTrueQ);
      instance.SetNewArray(&newArray_LArMCTruthcLcLAnodeTrueQ);
      instance.SetDelete(&delete_LArMCTruthcLcLAnodeTrueQ);
      instance.SetDeleteArray(&deleteArray_LArMCTruthcLcLAnodeTrueQ);
      instance.SetDestructor(&destruct_LArMCTruthcLcLAnodeTrueQ);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArMCTruth::AnodeTrueQ*)
   {
      return GenerateInitInstanceLocal((::LArMCTruth::AnodeTrueQ*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArMCTruth::AnodeTrueQ*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void LArRawDatacLcLDataFragmentlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void LArRawDatacLcLDataFragmentlEfloatgR_Dictionary();
   static void *new_LArRawDatacLcLDataFragmentlEfloatgR(void *p = 0);
   static void *newArray_LArRawDatacLcLDataFragmentlEfloatgR(Long_t size, void *p);
   static void delete_LArRawDatacLcLDataFragmentlEfloatgR(void *p);
   static void deleteArray_LArRawDatacLcLDataFragmentlEfloatgR(void *p);
   static void destruct_LArRawDatacLcLDataFragmentlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArRawData::DataFragment<float>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::LArRawData::DataFragment<float>) == sizeof(::ROOT::Shadow::LArRawData::DataFragmentlEfloatgR));
      ::LArRawData::DataFragment<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArRawData::DataFragment<float> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArRawData::DataFragment<float>", ::LArRawData::DataFragment<float>::Class_Version(), "../include/DataFragment.h", 18,
                  typeid(::LArRawData::DataFragment<float>), DefineBehavior(ptr, ptr),
                  &LArRawDatacLcLDataFragmentlEfloatgR_Dictionary, isa_proxy, 4,
                  sizeof(::LArRawData::DataFragment<float>) );
      instance.SetNew(&new_LArRawDatacLcLDataFragmentlEfloatgR);
      instance.SetNewArray(&newArray_LArRawDatacLcLDataFragmentlEfloatgR);
      instance.SetDelete(&delete_LArRawDatacLcLDataFragmentlEfloatgR);
      instance.SetDeleteArray(&deleteArray_LArRawDatacLcLDataFragmentlEfloatgR);
      instance.SetDestructor(&destruct_LArRawDatacLcLDataFragmentlEfloatgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArRawData::DataFragment<float>*)
   {
      return GenerateInitInstanceLocal((::LArRawData::DataFragment<float>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArRawData::DataFragment<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void LArRawDatacLcLDataFragmentlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void LArRawDatacLcLDataFragmentlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void LArRawDatacLcLDataFragmentlEunsignedsPshortgR_Dictionary();
   static void *new_LArRawDatacLcLDataFragmentlEunsignedsPshortgR(void *p = 0);
   static void *newArray_LArRawDatacLcLDataFragmentlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_LArRawDatacLcLDataFragmentlEunsignedsPshortgR(void *p);
   static void deleteArray_LArRawDatacLcLDataFragmentlEunsignedsPshortgR(void *p);
   static void destruct_LArRawDatacLcLDataFragmentlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::LArRawData::DataFragment<unsigned short>*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::LArRawData::DataFragment<unsigned short>) == sizeof(::ROOT::Shadow::LArRawData::DataFragmentlEunsignedsPshortgR));
      ::LArRawData::DataFragment<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::LArRawData::DataFragment<unsigned short> >(0);
      static ::ROOT::TGenericClassInfo 
         instance("LArRawData::DataFragment<unsigned short>", ::LArRawData::DataFragment<unsigned short>::Class_Version(), "../include/DataFragment.h", 18,
                  typeid(::LArRawData::DataFragment<unsigned short>), DefineBehavior(ptr, ptr),
                  &LArRawDatacLcLDataFragmentlEunsignedsPshortgR_Dictionary, isa_proxy, 4,
                  sizeof(::LArRawData::DataFragment<unsigned short>) );
      instance.SetNew(&new_LArRawDatacLcLDataFragmentlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_LArRawDatacLcLDataFragmentlEunsignedsPshortgR);
      instance.SetDelete(&delete_LArRawDatacLcLDataFragmentlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_LArRawDatacLcLDataFragmentlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_LArRawDatacLcLDataFragmentlEunsignedsPshortgR);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::LArRawData::DataFragment<unsigned short>*)
   {
      return GenerateInitInstanceLocal((::LArRawData::DataFragment<unsigned short>*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::LArRawData::DataFragment<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void LArRawDatacLcLDataFragmentlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr RunHeader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RunHeader::Class_Name()
{
   return "RunHeader";
}

//______________________________________________________________________________
const char *RunHeader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RunHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RunHeader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RunHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RunHeader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RunHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RunHeader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RunHeader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr EventHeader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *EventHeader::Class_Name()
{
   return "EventHeader";
}

//______________________________________________________________________________
const char *EventHeader::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int EventHeader::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::EventHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void EventHeader::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *EventHeader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::EventHeader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr BeamInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *BeamInfo::Class_Name()
{
   return "BeamInfo";
}

//______________________________________________________________________________
const char *BeamInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BeamInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int BeamInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::BeamInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void BeamInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BeamInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *BeamInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::BeamInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr GeomConfig::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GeomConfig::Class_Name()
{
   return "GeomConfig";
}

//______________________________________________________________________________
const char *GeomConfig::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GeomConfig*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GeomConfig::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GeomConfig*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GeomConfig::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GeomConfig*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GeomConfig::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GeomConfig*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace LArRawData {
//______________________________________________________________________________
atomic_TClass_ptr DataChan::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataChan::Class_Name()
{
   return "LArRawData::DataChan";
}

//______________________________________________________________________________
const char *DataChan::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataChan*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataChan::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataChan*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataChan::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataChan*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataChan::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataChan*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArRawData
      namespace LArRawData {
//______________________________________________________________________________
atomic_TClass_ptr DataCRM::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataCRM::Class_Name()
{
   return "LArRawData::DataCRM";
}

//______________________________________________________________________________
const char *DataCRM::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataCRM*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataCRM::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataCRM*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataCRM::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataCRM*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataCRM::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataCRM*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArRawData
      namespace LArRawData {
//______________________________________________________________________________
atomic_TClass_ptr DataCRP::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataCRP::Class_Name()
{
   return "LArRawData::DataCRP";
}

//______________________________________________________________________________
const char *DataCRP::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataCRP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataCRP::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataCRP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataCRP::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataCRP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataCRP::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataCRP*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArRawData
      namespace LArVoxel {
//______________________________________________________________________________
atomic_TClass_ptr VoxelInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *VoxelInfo::Class_Name()
{
   return "LArVoxel::VoxelInfo";
}

//______________________________________________________________________________
const char *VoxelInfo::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VoxelInfo::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VoxelInfo::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VoxelInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfo*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArVoxel
      namespace LArVoxel {
//______________________________________________________________________________
atomic_TClass_ptr VoxelInfoCRM::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *VoxelInfoCRM::Class_Name()
{
   return "LArVoxel::VoxelInfoCRM";
}

//______________________________________________________________________________
const char *VoxelInfoCRM::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfoCRM*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VoxelInfoCRM::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfoCRM*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VoxelInfoCRM::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfoCRM*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VoxelInfoCRM::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfoCRM*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArVoxel
      namespace LArVoxel {
//______________________________________________________________________________
atomic_TClass_ptr VoxelInfoCRP::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *VoxelInfoCRP::Class_Name()
{
   return "LArVoxel::VoxelInfoCRP";
}

//______________________________________________________________________________
const char *VoxelInfoCRP::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfoCRP*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int VoxelInfoCRP::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfoCRP*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void VoxelInfoCRP::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfoCRP*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *VoxelInfoCRP::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArVoxel::VoxelInfoCRP*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArVoxel
      namespace LArReco {
//______________________________________________________________________________
atomic_TClass_ptr RecoObjLink::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RecoObjLink::Class_Name()
{
   return "LArReco::RecoObjLink";
}

//______________________________________________________________________________
const char *RecoObjLink::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArReco::RecoObjLink*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecoObjLink::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArReco::RecoObjLink*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecoObjLink::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArReco::RecoObjLink*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecoObjLink::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArReco::RecoObjLink*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArReco
      namespace LArReco {
//______________________________________________________________________________
atomic_TClass_ptr RecoObject::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RecoObject::Class_Name()
{
   return "LArReco::RecoObject";
}

//______________________________________________________________________________
const char *RecoObject::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArReco::RecoObject*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecoObject::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArReco::RecoObject*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecoObject::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArReco::RecoObject*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecoObject::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArReco::RecoObject*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArReco
      namespace LArReco {
//______________________________________________________________________________
atomic_TClass_ptr QHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *QHit::Class_Name()
{
   return "LArReco::QHit";
}

//______________________________________________________________________________
const char *QHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArReco::QHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int QHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArReco::QHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void QHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArReco::QHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *QHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArReco::QHit*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArReco
      namespace LArReco {
//______________________________________________________________________________
atomic_TClass_ptr Cluster2d::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Cluster2d::Class_Name()
{
   return "LArReco::Cluster2d";
}

//______________________________________________________________________________
const char *Cluster2d::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArReco::Cluster2d*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Cluster2d::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArReco::Cluster2d*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Cluster2d::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArReco::Cluster2d*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Cluster2d::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArReco::Cluster2d*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArReco
      namespace LArReco {
//______________________________________________________________________________
atomic_TClass_ptr Track2d::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Track2d::Class_Name()
{
   return "LArReco::Track2d";
}

//______________________________________________________________________________
const char *Track2d::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArReco::Track2d*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Track2d::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArReco::Track2d*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Track2d::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArReco::Track2d*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Track2d::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArReco::Track2d*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArReco
//______________________________________________________________________________
atomic_TClass_ptr RecoConfig::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *RecoConfig::Class_Name()
{
   return "RecoConfig";
}

//______________________________________________________________________________
const char *RecoConfig::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecoConfig*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int RecoConfig::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::RecoConfig*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void RecoConfig::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecoConfig*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *RecoConfig::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::RecoConfig*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HitReco::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HitReco::Class_Name()
{
   return "HitReco";
}

//______________________________________________________________________________
const char *HitReco::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HitReco*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HitReco::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HitReco*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HitReco::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HitReco*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HitReco::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HitReco*)0x0)->GetClass();} }
   return fgIsA;
}

      namespace LArRawData {
//______________________________________________________________________________
atomic_TClass_ptr DataLRO::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *DataLRO::Class_Name()
{
   return "LArRawData::DataLRO";
}

//______________________________________________________________________________
const char *DataLRO::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataLRO*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int DataLRO::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataLRO*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void DataLRO::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataLRO*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *DataLRO::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataLRO*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArRawData
      namespace LArMCTruth {
//______________________________________________________________________________
atomic_TClass_ptr ChanTrueQ::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *ChanTrueQ::Class_Name()
{
   return "LArMCTruth::ChanTrueQ";
}

//______________________________________________________________________________
const char *ChanTrueQ::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArMCTruth::ChanTrueQ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int ChanTrueQ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArMCTruth::ChanTrueQ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void ChanTrueQ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArMCTruth::ChanTrueQ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *ChanTrueQ::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArMCTruth::ChanTrueQ*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArMCTruth
      namespace LArMCTruth {
//______________________________________________________________________________
atomic_TClass_ptr AnodeTrueQ::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *AnodeTrueQ::Class_Name()
{
   return "LArMCTruth::AnodeTrueQ";
}

//______________________________________________________________________________
const char *AnodeTrueQ::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArMCTruth::AnodeTrueQ*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int AnodeTrueQ::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArMCTruth::AnodeTrueQ*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void AnodeTrueQ::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArMCTruth::AnodeTrueQ*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *AnodeTrueQ::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArMCTruth::AnodeTrueQ*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArMCTruth
      namespace LArRawData {
//______________________________________________________________________________
template <> atomic_TClass_ptr DataFragment<float>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *DataFragment<float>::Class_Name()
{
   return "LArRawData::DataFragment<float>";
}

//______________________________________________________________________________
template <> const char *DataFragment<float>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<float>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int DataFragment<float>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<float>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void DataFragment<float>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<float>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *DataFragment<float>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<float>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArRawData
      namespace LArRawData {
//______________________________________________________________________________
template <> atomic_TClass_ptr DataFragment<unsigned short>::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
template <> const char *DataFragment<unsigned short>::Class_Name()
{
   return "LArRawData::DataFragment<unsigned short>";
}

//______________________________________________________________________________
template <> const char *DataFragment<unsigned short>::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<unsigned short>*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
template <> int DataFragment<unsigned short>::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<unsigned short>*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
template <> void DataFragment<unsigned short>::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<unsigned short>*)0x0)->GetClass();
}

//______________________________________________________________________________
template <> TClass *DataFragment<unsigned short>::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<unsigned short>*)0x0)->GetClass();} }
   return fgIsA;
}

} // namespace LArRawData
//______________________________________________________________________________
void RunHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class RunHeader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RunHeader::Class(),this);
   } else {
      R__b.WriteClassBuffer(RunHeader::Class(),this);
   }
}

//______________________________________________________________________________
void RunHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RunHeader.
      TClass *R__cl = ::RunHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_RunNumber", &RH_RunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_RunTime", &RH_RunTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_DataType", &RH_DataType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_Geometry", &RH_Geometry);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_BeamType", &RH_BeamType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_PBeam", &RH_PBeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_LifeTime", &RH_LifeTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_EFieldValue", &RH_EFieldValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_EFieldMap", &RH_EFieldMap);
      R__insp.InspectMember(RH_EFieldMap, "RH_EFieldMap.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_DiffusionL", &RH_DiffusionL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_DiffusionT", &RH_DiffusionT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_IsCompressed", &RH_IsCompressed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_VGrid", &RH_VGrid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_VLEMBottom", &RH_VLEMBottom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_VLEMTop", &RH_VLEMTop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_ConfigFile", &RH_ConfigFile);
      R__insp.InspectMember(RH_ConfigFile, "RH_ConfigFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_GENIEfn", &RH_GENIEfn);
      R__insp.InspectMember(RH_GENIEfn, "RH_GENIEfn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_IsReinteraction", &RH_IsReinteraction);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_LMapLAR", &RH_LMapLAR);
      R__insp.InspectMember(RH_LMapLAR, "RH_LMapLAR.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_LMapGAR", &RH_LMapGAR);
      R__insp.InspectMember(RH_LMapGAR, "RH_LMapGAR.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_LSTime", &RH_LSTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_PMTsQEff", &RH_PMTsQEff);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_TransportCode", &RH_TransportCode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_PhysicList", &RH_PhysicList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_StartSeed", &RH_StartSeed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_CRBeam", &RH_CRBeam);
      R__insp.InspectMember(RH_CRBeam, "RH_CRBeam.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_CRCRY", &RH_CRCRY);
      R__insp.InspectMember(RH_CRCRY, "RH_CRCRY.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_CRTO", &RH_CRTO);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_CRWIN", &RH_CRWIN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_CREVNT", &RH_CREVNT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_CRRATE", &RH_CRRATE);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RunHeader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RunHeader : new ::RunHeader;
   }
   static void *newArray_RunHeader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::RunHeader[nElements] : new ::RunHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_RunHeader(void *p) {
      delete ((::RunHeader*)p);
   }
   static void deleteArray_RunHeader(void *p) {
      delete [] ((::RunHeader*)p);
   }
   static void destruct_RunHeader(void *p) {
      typedef ::RunHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RunHeader

//______________________________________________________________________________
void EventHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class EventHeader.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(EventHeader::Class(),this);
   } else {
      R__b.WriteClassBuffer(EventHeader::Class(),this);
   }
}

//______________________________________________________________________________
void EventHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class EventHeader.
      TClass *R__cl = ::EventHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_EventNumber", &EH_EventNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_EventTime", &EH_EventTime);
      R__insp.InspectMember(EH_EventTime, "EH_EventTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_DQFlag", &EH_DQFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueP", &EH_TrueP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueMomentum[3]", EH_TrueMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueTheta", &EH_TrueTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TruePhi", &EH_TruePhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueProdX", &EH_TrueProdX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueProdY", &EH_TrueProdY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueProdZ", &EH_TrueProdZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueTotDepEne", &EH_TrueTotDepEne);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueTotDepEneQ", &EH_TrueTotDepEneQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueTotDepEEne", &EH_TrueTotDepEEne);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueTotDepEEneQ", &EH_TrueTotDepEEneQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueTotDepHEne", &EH_TrueTotDepHEne);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueTotDepHEneQ", &EH_TrueTotDepHEneQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueEneFromBeam", &EH_TrueEneFromBeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueEneFromCRBack", &EH_TrueEneFromCRBack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueEneLost", &EH_TrueEneLost);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueTotDepEneCRT1", &EH_TrueTotDepEneCRT1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_TrueTotDepEneCRT2", &EH_TrueTotDepEneCRT2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecP", &EH_RecP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecMomentum[3]", EH_RecMomentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecTheta", &EH_RecTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecPhi", &EH_RecPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecProdX", &EH_RecProdX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecProdY", &EH_RecProdY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecProdZ", &EH_RecProdZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecTotDepEne", &EH_RecTotDepEne);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecTotDepEneQ", &EH_RecTotDepEneQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecTotDepEEne", &EH_RecTotDepEEne);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecTotDepEEneQ", &EH_RecTotDepEEneQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecTotDepHEne", &EH_RecTotDepHEne);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_RecTotDepHEneQ", &EH_RecTotDepHEneQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_BCh1[2]", EH_BCh1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_BCh2[2]", EH_BCh2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_EvTof", &EH_EvTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_EvCherenkov[3]", EH_EvCherenkov);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_nhitv0[50]", EH_nhitv0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_nhitv1[50]", EH_nhitv1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_crptrks0", &EH_crptrks0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EH_crptrks1", &EH_crptrks1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EH_Primaries", &EH_Primaries);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_EventHeader(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventHeader : new ::EventHeader;
   }
   static void *newArray_EventHeader(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::EventHeader[nElements] : new ::EventHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_EventHeader(void *p) {
      delete ((::EventHeader*)p);
   }
   static void deleteArray_EventHeader(void *p) {
      delete [] ((::EventHeader*)p);
   }
   static void destruct_EventHeader(void *p) {
      typedef ::EventHeader current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::EventHeader

//______________________________________________________________________________
void BeamInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class BeamInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(BeamInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(BeamInfo::Class(),this);
   }
}

//______________________________________________________________________________
void BeamInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class BeamInfo.
      TClass *R__cl = ::BeamInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_PBeam", &RH_PBeam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_TargetType", &RH_TargetType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_Tof[2]", RH_Tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_CerenkovThre[3]", RH_CerenkovThre);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_Slit1[2]", RH_Slit1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RH_Slit2[2]", RH_Slit2);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_BeamInfo(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BeamInfo : new ::BeamInfo;
   }
   static void *newArray_BeamInfo(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::BeamInfo[nElements] : new ::BeamInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_BeamInfo(void *p) {
      delete ((::BeamInfo*)p);
   }
   static void deleteArray_BeamInfo(void *p) {
      delete [] ((::BeamInfo*)p);
   }
   static void destruct_BeamInfo(void *p) {
      typedef ::BeamInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::BeamInfo

//______________________________________________________________________________
void GeomConfig::Streamer(TBuffer &R__b)
{
   // Stream an object of class GeomConfig.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GeomConfig::Class(),this);
   } else {
      R__b.WriteClassBuffer(GeomConfig::Class(),this);
   }
}

//______________________________________________________________________________
void GeomConfig::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GeomConfig.
      TClass *R__cl = ::GeomConfig::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMnum", &GC_CRMnum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMxpos[50]", GC_CRMxpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMypos[50]", GC_CRMypos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMzpos[50]", GC_CRMzpos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMxdim[50]", GC_CRMxdim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMydim[50]", GC_CRMydim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMpitchX[50]", GC_CRMpitchX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMpitchY[50]", GC_CRMpitchY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMpitchT", &GC_CRMpitchT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMnchaX[50]", GC_CRMnchaX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMnchaY[50]", GC_CRMnchaY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMgain[50]", GC_CRMgain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_CRMnsample[50]", GC_CRMnsample);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_SRxdimension", &GC_SRxdimension);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_SRydimension", &GC_SRydimension);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_SRzdimension", &GC_SRzdimension);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_GeomType", (void*)&GC_GeomType);
      R__insp.InspectMember("string", (void*)&GC_GeomType, "GC_GeomType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_RDType", (void*)&GC_RDType);
      R__insp.InspectMember("string", (void*)&GC_RDType, "GC_RDType.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_ElecModel", (void*)&GC_ElecModel);
      R__insp.InspectMember("string", (void*)&GC_ElecModel, "GC_ElecModel.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_NoiseName", (void*)&GC_NoiseName);
      R__insp.InspectMember("string", (void*)&GC_NoiseName, "GC_NoiseName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_quanta", &GC_quanta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_ped", &GC_ped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_ped_rms", &GC_ped_rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_maxbit", &GC_maxbit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_samplingfreq", &GC_samplingfreq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_NoiseFreq", &GC_NoiseFreq);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_NoiseRMS", &GC_NoiseRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "GC_cohe", &GC_cohe);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GeomConfig(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::GeomConfig : new ::GeomConfig;
   }
   static void *newArray_GeomConfig(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::GeomConfig[nElements] : new ::GeomConfig[nElements];
   }
   // Wrapper around operator delete
   static void delete_GeomConfig(void *p) {
      delete ((::GeomConfig*)p);
   }
   static void deleteArray_GeomConfig(void *p) {
      delete [] ((::GeomConfig*)p);
   }
   static void destruct_GeomConfig(void *p) {
      typedef ::GeomConfig current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GeomConfig

//______________________________________________________________________________
void RecoConfig::Streamer(TBuffer &R__b)
{
   // Stream an object of class RecoConfig.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(RecoConfig::Class(),this);
   } else {
      R__b.WriteClassBuffer(RecoConfig::Class(),this);
   }
}

//______________________________________________________________________________
void RecoConfig::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class RecoConfig.
      TClass *R__cl = ::RecoConfig::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunTime", &fRunTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTaskName", (void*)&fTaskName);
      R__insp.InspectMember("string", (void*)&fTaskName, "fTaskName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlgoName", (void*)&fAlgoName);
      R__insp.InspectMember("string", (void*)&fAlgoName, "fAlgoName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fInFlName", (void*)&fInFlName);
      R__insp.InspectMember("string", (void*)&fInFlName, "fInFlName.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAlgoPara", (void*)&fAlgoPara);
      R__insp.InspectMember("map<std::string,std::vector<float> >", (void*)&fAlgoPara, "fAlgoPara.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_RecoConfig(void *p) {
      return  p ? new(p) ::RecoConfig : new ::RecoConfig;
   }
   static void *newArray_RecoConfig(Long_t nElements, void *p) {
      return p ? new(p) ::RecoConfig[nElements] : new ::RecoConfig[nElements];
   }
   // Wrapper around operator delete
   static void delete_RecoConfig(void *p) {
      delete ((::RecoConfig*)p);
   }
   static void deleteArray_RecoConfig(void *p) {
      delete [] ((::RecoConfig*)p);
   }
   static void destruct_RecoConfig(void *p) {
      typedef ::RecoConfig current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::RecoConfig

//______________________________________________________________________________
void HitReco::Streamer(TBuffer &R__b)
{
   // Stream an object of class HitReco.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HitReco::Class(),this);
   } else {
      R__b.WriteClassBuffer(HitReco::Class(),this);
   }
}

//______________________________________________________________________________
void HitReco::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HitReco.
      TClass *R__cl = ::HitReco::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HITRec_RunTime", &HITRec_RunTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HITRec_InFlname", &HITRec_InFlname);
      R__insp.InspectMember(HITRec_InFlname, "HITRec_InFlname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HITRec_Float", &HITRec_Float);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HITRec_Int", &HITRec_Int);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HITRec_String", &HITRec_String);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HITRec_PFloat[50]", HITRec_PFloat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HITRec_PInt[50]", HITRec_PInt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HITRec_PString[50]", HITRec_PString);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HitReco(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HitReco : new ::HitReco;
   }
   static void *newArray_HitReco(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HitReco[nElements] : new ::HitReco[nElements];
   }
   // Wrapper around operator delete
   static void delete_HitReco(void *p) {
      delete ((::HitReco*)p);
   }
   static void deleteArray_HitReco(void *p) {
      delete [] ((::HitReco*)p);
   }
   static void destruct_HitReco(void *p) {
      typedef ::HitReco current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HitReco

      namespace LArMCTruth {
//______________________________________________________________________________
void ChanTrueQ::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArMCTruth::ChanTrueQ.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArMCTruth::ChanTrueQ::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArMCTruth::ChanTrueQ::Class(),this);
   }
}

} // namespace LArMCTruth
//______________________________________________________________________________
      namespace LArMCTruth {
void ChanTrueQ::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArMCTruth::ChanTrueQ.
      TClass *R__cl = ::LArMCTruth::ChanTrueQ::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQtot", &fQtot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCh", &fCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStart", &fStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnd", &fEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData", (void*)&fData);
      R__insp.InspectMember("vector<Float_t>", (void*)&fData, "fData.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace LArMCTruth
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArMCTruthcLcLChanTrueQ(void *p) {
      return  p ? new(p) ::LArMCTruth::ChanTrueQ : new ::LArMCTruth::ChanTrueQ;
   }
   static void *newArray_LArMCTruthcLcLChanTrueQ(Long_t nElements, void *p) {
      return p ? new(p) ::LArMCTruth::ChanTrueQ[nElements] : new ::LArMCTruth::ChanTrueQ[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArMCTruthcLcLChanTrueQ(void *p) {
      delete ((::LArMCTruth::ChanTrueQ*)p);
   }
   static void deleteArray_LArMCTruthcLcLChanTrueQ(void *p) {
      delete [] ((::LArMCTruth::ChanTrueQ*)p);
   }
   static void destruct_LArMCTruthcLcLChanTrueQ(void *p) {
      typedef ::LArMCTruth::ChanTrueQ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArMCTruth::ChanTrueQ

      namespace LArMCTruth {
//______________________________________________________________________________
void AnodeTrueQ::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArMCTruth::AnodeTrueQ.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArMCTruth::AnodeTrueQ::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArMCTruth::AnodeTrueQ::Class(),this);
   }
}

} // namespace LArMCTruth
//______________________________________________________________________________
      namespace LArMCTruth {
void AnodeTrueQ::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArMCTruth::AnodeTrueQ.
      TClass *R__cl = ::LArMCTruth::AnodeTrueQ::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnodeQView0", (void*)&fAnodeQView0);
      R__insp.InspectMember("vector<LArMCTruth::ChanTrueQ*>", (void*)&fAnodeQView0, "fAnodeQView0.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnodeQView1", (void*)&fAnodeQView1);
      R__insp.InspectMember("vector<LArMCTruth::ChanTrueQ*>", (void*)&fAnodeQView1, "fAnodeQView1.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQView0", &fQView0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQView1", &fQView1);
      TObject::ShowMembers(R__insp);
}

} // namespace LArMCTruth
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArMCTruthcLcLAnodeTrueQ(void *p) {
      return  p ? new(p) ::LArMCTruth::AnodeTrueQ : new ::LArMCTruth::AnodeTrueQ;
   }
   static void *newArray_LArMCTruthcLcLAnodeTrueQ(Long_t nElements, void *p) {
      return p ? new(p) ::LArMCTruth::AnodeTrueQ[nElements] : new ::LArMCTruth::AnodeTrueQ[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArMCTruthcLcLAnodeTrueQ(void *p) {
      delete ((::LArMCTruth::AnodeTrueQ*)p);
   }
   static void deleteArray_LArMCTruthcLcLAnodeTrueQ(void *p) {
      delete [] ((::LArMCTruth::AnodeTrueQ*)p);
   }
   static void destruct_LArMCTruthcLcLAnodeTrueQ(void *p) {
      typedef ::LArMCTruth::AnodeTrueQ current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArMCTruth::AnodeTrueQ

      namespace LArVoxel {
//______________________________________________________________________________
void VoxelInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArVoxel::VoxelInfo.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArVoxel::VoxelInfo::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArVoxel::VoxelInfo::Class(),this);
   }
}

} // namespace LArVoxel
//______________________________________________________________________________
      namespace LArVoxel {
void VoxelInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArVoxel::VoxelInfo.
      TClass *R__cl = ::LArVoxel::VoxelInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Pid", &Pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Edep", &Edep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "EdepQ", &EdepQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xVox", &xVox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yVox", &yVox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zVox", &zVox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tVox", &tVox);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qCrp", &qCrp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xCrp", &xCrp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yCrp", &yCrp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tCrp", &tCrp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qSigmaL", &qSigmaL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "qSigmaT", &qSigmaT);
      TObject::ShowMembers(R__insp);
}

} // namespace LArVoxel
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArVoxelcLcLVoxelInfo(void *p) {
      return  p ? new(p) ::LArVoxel::VoxelInfo : new ::LArVoxel::VoxelInfo;
   }
   static void *newArray_LArVoxelcLcLVoxelInfo(Long_t nElements, void *p) {
      return p ? new(p) ::LArVoxel::VoxelInfo[nElements] : new ::LArVoxel::VoxelInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArVoxelcLcLVoxelInfo(void *p) {
      delete ((::LArVoxel::VoxelInfo*)p);
   }
   static void deleteArray_LArVoxelcLcLVoxelInfo(void *p) {
      delete [] ((::LArVoxel::VoxelInfo*)p);
   }
   static void destruct_LArVoxelcLcLVoxelInfo(void *p) {
      typedef ::LArVoxel::VoxelInfo current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArVoxel::VoxelInfo

      namespace LArVoxel {
//______________________________________________________________________________
void VoxelInfoCRM::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArVoxel::VoxelInfoCRM.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArVoxel::VoxelInfoCRM::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArVoxel::VoxelInfoCRM::Class(),this);
   }
}

} // namespace LArVoxel
//______________________________________________________________________________
      namespace LArVoxel {
void VoxelInfoCRM::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArVoxel::VoxelInfoCRM.
      TClass *R__cl = ::LArVoxel::VoxelInfoCRM::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CRMId", &CRMId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nVoxels", &nVoxels);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Voxels", &Voxels);
      TObject::ShowMembers(R__insp);
}

} // namespace LArVoxel
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArVoxelcLcLVoxelInfoCRM(void *p) {
      return  p ? new(p) ::LArVoxel::VoxelInfoCRM : new ::LArVoxel::VoxelInfoCRM;
   }
   static void *newArray_LArVoxelcLcLVoxelInfoCRM(Long_t nElements, void *p) {
      return p ? new(p) ::LArVoxel::VoxelInfoCRM[nElements] : new ::LArVoxel::VoxelInfoCRM[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArVoxelcLcLVoxelInfoCRM(void *p) {
      delete ((::LArVoxel::VoxelInfoCRM*)p);
   }
   static void deleteArray_LArVoxelcLcLVoxelInfoCRM(void *p) {
      delete [] ((::LArVoxel::VoxelInfoCRM*)p);
   }
   static void destruct_LArVoxelcLcLVoxelInfoCRM(void *p) {
      typedef ::LArVoxel::VoxelInfoCRM current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArVoxel::VoxelInfoCRM

      namespace LArVoxel {
//______________________________________________________________________________
void VoxelInfoCRP::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArVoxel::VoxelInfoCRP.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArVoxel::VoxelInfoCRP::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArVoxel::VoxelInfoCRP::Class(),this);
   }
}

} // namespace LArVoxel
//______________________________________________________________________________
      namespace LArVoxel {
void VoxelInfoCRP::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArVoxel::VoxelInfoCRP.
      TClass *R__cl = ::LArVoxel::VoxelInfoCRP::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumCRM", &NumCRM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*vCRM", &vCRM);
      TObject::ShowMembers(R__insp);
}

} // namespace LArVoxel
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArVoxelcLcLVoxelInfoCRP(void *p) {
      return  p ? new(p) ::LArVoxel::VoxelInfoCRP : new ::LArVoxel::VoxelInfoCRP;
   }
   static void *newArray_LArVoxelcLcLVoxelInfoCRP(Long_t nElements, void *p) {
      return p ? new(p) ::LArVoxel::VoxelInfoCRP[nElements] : new ::LArVoxel::VoxelInfoCRP[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArVoxelcLcLVoxelInfoCRP(void *p) {
      delete ((::LArVoxel::VoxelInfoCRP*)p);
   }
   static void deleteArray_LArVoxelcLcLVoxelInfoCRP(void *p) {
      delete [] ((::LArVoxel::VoxelInfoCRP*)p);
   }
   static void destruct_LArVoxelcLcLVoxelInfoCRP(void *p) {
      typedef ::LArVoxel::VoxelInfoCRP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArVoxel::VoxelInfoCRP

      namespace LArRawData {
//______________________________________________________________________________
template <> void DataFragment<float>::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArRawData::DataFragment<float>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArRawData::DataFragment<float>::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArRawData::DataFragment<float>::Class(),this);
   }
}

} // namespace LArRawData
//______________________________________________________________________________
namespace ROOT {
   void LArRawDatacLcLDataFragmentlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class LArRawData::DataFragment<float>.
      typedef ::ROOT::Shadow::LArRawData::DataFragmentlEfloatgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<float>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStart", &sobj->fStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnd", &sobj->fEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData", (void*)&sobj->fData);
      R__insp.InspectMember("vector<float>", (void*)&sobj->fData, "fData.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

      namespace LArRawData {
template <> void DataFragment<float>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOT::LArRawDatacLcLDataFragmentlEfloatgR_ShowMembers(this, R__insp);
}

} // namespace LArRawData
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArRawDatacLcLDataFragmentlEfloatgR(void *p) {
      return  p ? new(p) ::LArRawData::DataFragment<float> : new ::LArRawData::DataFragment<float>;
   }
   static void *newArray_LArRawDatacLcLDataFragmentlEfloatgR(Long_t nElements, void *p) {
      return p ? new(p) ::LArRawData::DataFragment<float>[nElements] : new ::LArRawData::DataFragment<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArRawDatacLcLDataFragmentlEfloatgR(void *p) {
      delete ((::LArRawData::DataFragment<float>*)p);
   }
   static void deleteArray_LArRawDatacLcLDataFragmentlEfloatgR(void *p) {
      delete [] ((::LArRawData::DataFragment<float>*)p);
   }
   static void destruct_LArRawDatacLcLDataFragmentlEfloatgR(void *p) {
      typedef ::LArRawData::DataFragment<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArRawData::DataFragment<float>

      namespace LArRawData {
//______________________________________________________________________________
template <> void DataFragment<unsigned short>::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArRawData::DataFragment<unsigned short>.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArRawData::DataFragment<unsigned short>::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArRawData::DataFragment<unsigned short>::Class(),this);
   }
}

} // namespace LArRawData
//______________________________________________________________________________
namespace ROOT {
   void LArRawDatacLcLDataFragmentlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class LArRawData::DataFragment<unsigned short>.
      typedef ::ROOT::Shadow::LArRawData::DataFragmentlEunsignedsPshortgR ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::LArRawData::DataFragment<unsigned short>*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStart", &sobj->fStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnd", &sobj->fEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData", (void*)&sobj->fData);
      R__insp.InspectMember("vector<unsigned short>", (void*)&sobj->fData, "fData.", false);
      sobj->TObject::ShowMembers(R__insp);
   }

}

      namespace LArRawData {
template <> void DataFragment<unsigned short>::ShowMembers(TMemberInspector &R__insp)
{
   ::ROOT::LArRawDatacLcLDataFragmentlEunsignedsPshortgR_ShowMembers(this, R__insp);
}

} // namespace LArRawData
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArRawDatacLcLDataFragmentlEunsignedsPshortgR(void *p) {
      return  p ? new(p) ::LArRawData::DataFragment<unsigned short> : new ::LArRawData::DataFragment<unsigned short>;
   }
   static void *newArray_LArRawDatacLcLDataFragmentlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? new(p) ::LArRawData::DataFragment<unsigned short>[nElements] : new ::LArRawData::DataFragment<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArRawDatacLcLDataFragmentlEunsignedsPshortgR(void *p) {
      delete ((::LArRawData::DataFragment<unsigned short>*)p);
   }
   static void deleteArray_LArRawDatacLcLDataFragmentlEunsignedsPshortgR(void *p) {
      delete [] ((::LArRawData::DataFragment<unsigned short>*)p);
   }
   static void destruct_LArRawDatacLcLDataFragmentlEunsignedsPshortgR(void *p) {
      typedef ::LArRawData::DataFragment<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArRawData::DataFragment<unsigned short>

      namespace LArRawData {
//______________________________________________________________________________
void DataChan::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArRawData::DataChan.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArRawData::DataChan::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArRawData::DataChan::Class(),this);
   }
}

} // namespace LArRawData
//______________________________________________________________________________
      namespace LArRawData {
void DataChan::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArRawData::DataChan.
      TClass *R__cl = ::LArRawData::DataChan::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChanId", &ChanId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PedVal", &PedVal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PedRMS", &PedRMS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NFrags", &NFrags);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChanStatus", &ChanStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "DataType", &DataType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DataFrags", &DataFrags);
      TObject::ShowMembers(R__insp);
}

} // namespace LArRawData
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArRawDatacLcLDataChan(void *p) {
      return  p ? new(p) ::LArRawData::DataChan : new ::LArRawData::DataChan;
   }
   static void *newArray_LArRawDatacLcLDataChan(Long_t nElements, void *p) {
      return p ? new(p) ::LArRawData::DataChan[nElements] : new ::LArRawData::DataChan[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArRawDatacLcLDataChan(void *p) {
      delete ((::LArRawData::DataChan*)p);
   }
   static void deleteArray_LArRawDatacLcLDataChan(void *p) {
      delete [] ((::LArRawData::DataChan*)p);
   }
   static void destruct_LArRawDatacLcLDataChan(void *p) {
      typedef ::LArRawData::DataChan current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArRawData::DataChan

      namespace LArRawData {
//______________________________________________________________________________
void DataCRM::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArRawData::DataCRM.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArRawData::DataCRM::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArRawData::DataCRM::Class(),this);
   }
}

} // namespace LArRawData
//______________________________________________________________________________
      namespace LArRawData {
void DataCRM::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArRawData::DataCRM.
      TClass *R__cl = ::LArRawData::DataCRM::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ChView0", &ChView0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ChView1", &ChView1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NChView0", &NChView0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NChView1", &NChView1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "CRMId", &CRMId);
      TObject::ShowMembers(R__insp);
}

} // namespace LArRawData
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArRawDatacLcLDataCRM(void *p) {
      return  p ? new(p) ::LArRawData::DataCRM : new ::LArRawData::DataCRM;
   }
   static void *newArray_LArRawDatacLcLDataCRM(Long_t nElements, void *p) {
      return p ? new(p) ::LArRawData::DataCRM[nElements] : new ::LArRawData::DataCRM[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArRawDatacLcLDataCRM(void *p) {
      delete ((::LArRawData::DataCRM*)p);
   }
   static void deleteArray_LArRawDatacLcLDataCRM(void *p) {
      delete [] ((::LArRawData::DataCRM*)p);
   }
   static void destruct_LArRawDatacLcLDataCRM(void *p) {
      typedef ::LArRawData::DataCRM current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArRawData::DataCRM

      namespace LArRawData {
//______________________________________________________________________________
void DataCRP::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArRawData::DataCRP.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArRawData::DataCRP::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArRawData::DataCRP::Class(),this);
   }
}

} // namespace LArRawData
//______________________________________________________________________________
      namespace LArRawData {
void DataCRP::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArRawData::DataCRP.
      TClass *R__cl = ::LArRawData::DataCRP::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumCRM", &NumCRM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dCRM", &dCRM);
      TObject::ShowMembers(R__insp);
}

} // namespace LArRawData
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArRawDatacLcLDataCRP(void *p) {
      return  p ? new(p) ::LArRawData::DataCRP : new ::LArRawData::DataCRP;
   }
   static void *newArray_LArRawDatacLcLDataCRP(Long_t nElements, void *p) {
      return p ? new(p) ::LArRawData::DataCRP[nElements] : new ::LArRawData::DataCRP[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArRawDatacLcLDataCRP(void *p) {
      delete ((::LArRawData::DataCRP*)p);
   }
   static void deleteArray_LArRawDatacLcLDataCRP(void *p) {
      delete [] ((::LArRawData::DataCRP*)p);
   }
   static void destruct_LArRawDatacLcLDataCRP(void *p) {
      typedef ::LArRawData::DataCRP current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArRawData::DataCRP

      namespace LArRawData {
//______________________________________________________________________________
void DataLRO::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArRawData::DataLRO.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArRawData::DataLRO::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArRawData::DataLRO::Class(),this);
   }
}

} // namespace LArRawData
//______________________________________________________________________________
      namespace LArRawData {
void DataLRO::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArRawData::DataLRO.
      TClass *R__cl = ::LArRawData::DataLRO::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hList", &hList);
      R__insp.InspectMember(hList, "hList.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumPMTs", &NumPMTs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sampleTime", &sampleTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*dLRO", &dLRO);
      TObject::ShowMembers(R__insp);
}

} // namespace LArRawData
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArRawDatacLcLDataLRO(void *p) {
      return  p ? new(p) ::LArRawData::DataLRO : new ::LArRawData::DataLRO;
   }
   static void *newArray_LArRawDatacLcLDataLRO(Long_t nElements, void *p) {
      return p ? new(p) ::LArRawData::DataLRO[nElements] : new ::LArRawData::DataLRO[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArRawDatacLcLDataLRO(void *p) {
      delete ((::LArRawData::DataLRO*)p);
   }
   static void deleteArray_LArRawDatacLcLDataLRO(void *p) {
      delete [] ((::LArRawData::DataLRO*)p);
   }
   static void destruct_LArRawDatacLcLDataLRO(void *p) {
      typedef ::LArRawData::DataLRO current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArRawData::DataLRO

      namespace LArReco {
//______________________________________________________________________________
void RecoObjLink::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArReco::RecoObjLink.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArReco::RecoObjLink::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArReco::RecoObjLink::Class(),this);
   }
}

} // namespace LArReco
//______________________________________________________________________________
      namespace LArReco {
void RecoObjLink::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArReco::RecoObjLink.
      TClass *R__cl = ::LArReco::RecoObjLink::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ObjType", &ObjType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ObjIdx", &ObjIdx);
      TObject::ShowMembers(R__insp);
}

} // namespace LArReco
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArRecocLcLRecoObjLink(void *p) {
      return  p ? new(p) ::LArReco::RecoObjLink : new ::LArReco::RecoObjLink;
   }
   static void *newArray_LArRecocLcLRecoObjLink(Long_t nElements, void *p) {
      return p ? new(p) ::LArReco::RecoObjLink[nElements] : new ::LArReco::RecoObjLink[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArRecocLcLRecoObjLink(void *p) {
      delete ((::LArReco::RecoObjLink*)p);
   }
   static void deleteArray_LArRecocLcLRecoObjLink(void *p) {
      delete [] ((::LArReco::RecoObjLink*)p);
   }
   static void destruct_LArRecocLcLRecoObjLink(void *p) {
      typedef ::LArReco::RecoObjLink current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArReco::RecoObjLink

      namespace LArReco {
//______________________________________________________________________________
void RecoObject::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArReco::RecoObject.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArReco::RecoObject::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArReco::RecoObject::Class(),this);
   }
}

} // namespace LArReco
//______________________________________________________________________________
      namespace LArReco {
void RecoObject::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArReco::RecoObject.
      TClass *R__cl = ::LArReco::RecoObject::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThisObj", &fThisObj);
      R__insp.InspectMember(fThisObj, "fThisObj.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fViewType", &fViewType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLinkUpNode", (void*)&fLinkUpNode);
      R__insp.InspectMember("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >", (void*)&fLinkUpNode, "fLinkUpNode.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLinkDownNode", (void*)&fLinkDownNode);
      R__insp.InspectMember("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >", (void*)&fLinkDownNode, "fLinkDownNode.", false);
      TObject::ShowMembers(R__insp);
}

} // namespace LArReco
namespace ROOT {
   // Wrapper around operator delete
   static void delete_LArRecocLcLRecoObject(void *p) {
      delete ((::LArReco::RecoObject*)p);
   }
   static void deleteArray_LArRecocLcLRecoObject(void *p) {
      delete [] ((::LArReco::RecoObject*)p);
   }
   static void destruct_LArRecocLcLRecoObject(void *p) {
      typedef ::LArReco::RecoObject current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArReco::RecoObject

      namespace LArReco {
//______________________________________________________________________________
void QHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArReco::QHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArReco::QHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArReco::QHit::Class(),this);
   }
}

} // namespace LArReco
//______________________________________________________________________________
      namespace LArReco {
void QHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArReco::QHit.
      TClass *R__cl = ::LArReco::QHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "crmId", &crmId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iView", &iView);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chId", &chId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isValid", &isValid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tbStart", &tbStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tbEnd", &tbEnd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tbMax", &tbMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ampl", &Ampl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Qtot", &Qtot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HitMCQ[6]", HitMCQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ht", &Ht);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hx", &Hx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Hd", &Hd);
      //This works around a msvc bug and should be harmless on other platforms
      typedef LArReco::RecoObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace LArReco
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArRecocLcLQHit(void *p) {
      return  p ? new(p) ::LArReco::QHit : new ::LArReco::QHit;
   }
   static void *newArray_LArRecocLcLQHit(Long_t nElements, void *p) {
      return p ? new(p) ::LArReco::QHit[nElements] : new ::LArReco::QHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArRecocLcLQHit(void *p) {
      delete ((::LArReco::QHit*)p);
   }
   static void deleteArray_LArRecocLcLQHit(void *p) {
      delete [] ((::LArReco::QHit*)p);
   }
   static void destruct_LArRecocLcLQHit(void *p) {
      typedef ::LArReco::QHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArReco::QHit

      namespace LArReco {
//______________________________________________________________________________
void Cluster2d::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArReco::Cluster2d.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArReco::Cluster2d::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArReco::Cluster2d::Class(),this);
   }
}

} // namespace LArReco
//______________________________________________________________________________
      namespace LArReco {
void Cluster2d::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArReco::Cluster2d.
      TClass *R__cl = ::LArReco::Cluster2d::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStart", &fStart);
      R__insp.InspectMember(fStart, "fStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEnd", &fEnd);
      R__insp.InspectMember(fEnd, "fEnd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTotQ", &fTotQ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSlope", &fSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fT0", &fT0);
      //This works around a msvc bug and should be harmless on other platforms
      typedef LArReco::RecoObject baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace LArReco
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArRecocLcLCluster2d(void *p) {
      return  p ? new(p) ::LArReco::Cluster2d : new ::LArReco::Cluster2d;
   }
   static void *newArray_LArRecocLcLCluster2d(Long_t nElements, void *p) {
      return p ? new(p) ::LArReco::Cluster2d[nElements] : new ::LArReco::Cluster2d[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArRecocLcLCluster2d(void *p) {
      delete ((::LArReco::Cluster2d*)p);
   }
   static void deleteArray_LArRecocLcLCluster2d(void *p) {
      delete [] ((::LArReco::Cluster2d*)p);
   }
   static void destruct_LArRecocLcLCluster2d(void *p) {
      typedef ::LArReco::Cluster2d current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArReco::Cluster2d

      namespace LArReco {
//______________________________________________________________________________
void Track2d::Streamer(TBuffer &R__b)
{
   // Stream an object of class LArReco::Track2d.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(LArReco::Track2d::Class(),this);
   } else {
      R__b.WriteClassBuffer(LArReco::Track2d::Class(),this);
   }
}

} // namespace LArReco
//______________________________________________________________________________
      namespace LArReco {
void Track2d::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class LArReco::Track2d.
      TClass *R__cl = ::LArReco::Track2d::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCrm", &fCrm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPid", &fPid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMom", &fMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi2", &fChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLength", &fLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTanThInit", &fTanThInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTanThInitErr", &fTanThInitErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTanThFinal", &fTanThFinal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTanThFinalErr", &fTanThFinalErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPosInitErr", &fDPosInitErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDPosFinalErr", &fDPosFinalErr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorrCoeffInit", &fCorrCoeffInit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorrCoeffFinal", &fCorrCoeffFinal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPath", (void*)&fPath);
      R__insp.InspectMember("vector<TVector2>", (void*)&fPath, "fPath.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fQdX", (void*)&fQdX);
      R__insp.InspectMember("vector<Double_t>", (void*)&fQdX, "fQdX.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDeltaRays", (void*)&fDeltaRays);
      R__insp.InspectMember("vector<LArReco::RecoObjLink>", (void*)&fDeltaRays, "fDeltaRays.", false);
      //This works around a msvc bug and should be harmless on other platforms
      typedef LArReco::Cluster2d baseClass1;
      baseClass1::ShowMembers(R__insp);
}

} // namespace LArReco
namespace ROOT {
   // Wrappers around operator new
   static void *new_LArRecocLcLTrack2d(void *p) {
      return  p ? new(p) ::LArReco::Track2d : new ::LArReco::Track2d;
   }
   static void *newArray_LArRecocLcLTrack2d(Long_t nElements, void *p) {
      return p ? new(p) ::LArReco::Track2d[nElements] : new ::LArReco::Track2d[nElements];
   }
   // Wrapper around operator delete
   static void delete_LArRecocLcLTrack2d(void *p) {
      delete ((::LArReco::Track2d*)p);
   }
   static void deleteArray_LArRecocLcLTrack2d(void *p) {
      delete [] ((::LArReco::Track2d*)p);
   }
   static void destruct_LArRecocLcLTrack2d(void *p) {
      typedef ::LArReco::Track2d current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::LArReco::Track2d

namespace ROOT {
   void maplEstringcOvectorlEfloatgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEstringcOvectorlEfloatgRsPgR_Dictionary();
   static void *new_maplEstringcOvectorlEfloatgRsPgR(void *p = 0);
   static void *newArray_maplEstringcOvectorlEfloatgRsPgR(Long_t size, void *p);
   static void delete_maplEstringcOvectorlEfloatgRsPgR(void *p);
   static void deleteArray_maplEstringcOvectorlEfloatgRsPgR(void *p);
   static void destruct_maplEstringcOvectorlEfloatgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<string,vector<float> >*)
   {
      map<string,vector<float> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<string,vector<float> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<string,vector<float> >", -2, "prec_stl/map", 63,
                  typeid(map<string,vector<float> >), DefineBehavior(ptr, ptr),
                  0, &maplEstringcOvectorlEfloatgRsPgR_Dictionary, isa_proxy, 4,
                  sizeof(map<string,vector<float> >) );
      instance.SetNew(&new_maplEstringcOvectorlEfloatgRsPgR);
      instance.SetNewArray(&newArray_maplEstringcOvectorlEfloatgRsPgR);
      instance.SetDelete(&delete_maplEstringcOvectorlEfloatgRsPgR);
      instance.SetDeleteArray(&deleteArray_maplEstringcOvectorlEfloatgRsPgR);
      instance.SetDestructor(&destruct_maplEstringcOvectorlEfloatgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<string,vector<float> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<string,vector<float> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEstringcOvectorlEfloatgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<string,vector<float> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEstringcOvectorlEfloatgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<float> > : new map<string,vector<float> >;
   }
   static void *newArray_maplEstringcOvectorlEfloatgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<string,vector<float> >[nElements] : new map<string,vector<float> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEstringcOvectorlEfloatgRsPgR(void *p) {
      delete ((map<string,vector<float> >*)p);
   }
   static void deleteArray_maplEstringcOvectorlEfloatgRsPgR(void *p) {
      delete [] ((map<string,vector<float> >*)p);
   }
   static void destruct_maplEstringcOvectorlEfloatgRsPgR(void *p) {
      typedef map<string,vector<float> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<string,vector<float> >

namespace ROOT {
   void vectorlELArMCTruthcLcLChanTrueQmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlELArMCTruthcLcLChanTrueQmUgR_Dictionary();
   static void *new_vectorlELArMCTruthcLcLChanTrueQmUgR(void *p = 0);
   static void *newArray_vectorlELArMCTruthcLcLChanTrueQmUgR(Long_t size, void *p);
   static void delete_vectorlELArMCTruthcLcLChanTrueQmUgR(void *p);
   static void deleteArray_vectorlELArMCTruthcLcLChanTrueQmUgR(void *p);
   static void destruct_vectorlELArMCTruthcLcLChanTrueQmUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<LArMCTruth::ChanTrueQ*>*)
   {
      vector<LArMCTruth::ChanTrueQ*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<LArMCTruth::ChanTrueQ*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<LArMCTruth::ChanTrueQ*>", -2, "prec_stl/vector", 49,
                  typeid(vector<LArMCTruth::ChanTrueQ*>), DefineBehavior(ptr, ptr),
                  0, &vectorlELArMCTruthcLcLChanTrueQmUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<LArMCTruth::ChanTrueQ*>) );
      instance.SetNew(&new_vectorlELArMCTruthcLcLChanTrueQmUgR);
      instance.SetNewArray(&newArray_vectorlELArMCTruthcLcLChanTrueQmUgR);
      instance.SetDelete(&delete_vectorlELArMCTruthcLcLChanTrueQmUgR);
      instance.SetDeleteArray(&deleteArray_vectorlELArMCTruthcLcLChanTrueQmUgR);
      instance.SetDestructor(&destruct_vectorlELArMCTruthcLcLChanTrueQmUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<LArMCTruth::ChanTrueQ*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<LArMCTruth::ChanTrueQ*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlELArMCTruthcLcLChanTrueQmUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<LArMCTruth::ChanTrueQ*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlELArMCTruthcLcLChanTrueQmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<LArMCTruth::ChanTrueQ*> : new vector<LArMCTruth::ChanTrueQ*>;
   }
   static void *newArray_vectorlELArMCTruthcLcLChanTrueQmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<LArMCTruth::ChanTrueQ*>[nElements] : new vector<LArMCTruth::ChanTrueQ*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlELArMCTruthcLcLChanTrueQmUgR(void *p) {
      delete ((vector<LArMCTruth::ChanTrueQ*>*)p);
   }
   static void deleteArray_vectorlELArMCTruthcLcLChanTrueQmUgR(void *p) {
      delete [] ((vector<LArMCTruth::ChanTrueQ*>*)p);
   }
   static void destruct_vectorlELArMCTruthcLcLChanTrueQmUgR(void *p) {
      typedef vector<LArMCTruth::ChanTrueQ*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<LArMCTruth::ChanTrueQ*>

namespace ROOT {
   void vectorlELArRecocLcLRecoObjLinkgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlELArRecocLcLRecoObjLinkgR_Dictionary();
   static void *new_vectorlELArRecocLcLRecoObjLinkgR(void *p = 0);
   static void *newArray_vectorlELArRecocLcLRecoObjLinkgR(Long_t size, void *p);
   static void delete_vectorlELArRecocLcLRecoObjLinkgR(void *p);
   static void deleteArray_vectorlELArRecocLcLRecoObjLinkgR(void *p);
   static void destruct_vectorlELArRecocLcLRecoObjLinkgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<LArReco::RecoObjLink>*)
   {
      vector<LArReco::RecoObjLink> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<LArReco::RecoObjLink>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<LArReco::RecoObjLink>", -2, "prec_stl/vector", 49,
                  typeid(vector<LArReco::RecoObjLink>), DefineBehavior(ptr, ptr),
                  0, &vectorlELArRecocLcLRecoObjLinkgR_Dictionary, isa_proxy, 4,
                  sizeof(vector<LArReco::RecoObjLink>) );
      instance.SetNew(&new_vectorlELArRecocLcLRecoObjLinkgR);
      instance.SetNewArray(&newArray_vectorlELArRecocLcLRecoObjLinkgR);
      instance.SetDelete(&delete_vectorlELArRecocLcLRecoObjLinkgR);
      instance.SetDeleteArray(&deleteArray_vectorlELArRecocLcLRecoObjLinkgR);
      instance.SetDestructor(&destruct_vectorlELArRecocLcLRecoObjLinkgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<LArReco::RecoObjLink> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<LArReco::RecoObjLink>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlELArRecocLcLRecoObjLinkgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<LArReco::RecoObjLink>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlELArRecocLcLRecoObjLinkgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<LArReco::RecoObjLink> : new vector<LArReco::RecoObjLink>;
   }
   static void *newArray_vectorlELArRecocLcLRecoObjLinkgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<LArReco::RecoObjLink>[nElements] : new vector<LArReco::RecoObjLink>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlELArRecocLcLRecoObjLinkgR(void *p) {
      delete ((vector<LArReco::RecoObjLink>*)p);
   }
   static void deleteArray_vectorlELArRecocLcLRecoObjLinkgR(void *p) {
      delete [] ((vector<LArReco::RecoObjLink>*)p);
   }
   static void destruct_vectorlELArRecocLcLRecoObjLinkgR(void *p) {
      typedef vector<LArReco::RecoObjLink> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<LArReco::RecoObjLink>

namespace ROOT {
   void vectorlETVector2gR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETVector2gR_Dictionary();
   static void *new_vectorlETVector2gR(void *p = 0);
   static void *newArray_vectorlETVector2gR(Long_t size, void *p);
   static void delete_vectorlETVector2gR(void *p);
   static void deleteArray_vectorlETVector2gR(void *p);
   static void destruct_vectorlETVector2gR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TVector2>*)
   {
      vector<TVector2> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TVector2>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TVector2>", -2, "prec_stl/vector", 49,
                  typeid(vector<TVector2>), DefineBehavior(ptr, ptr),
                  0, &vectorlETVector2gR_Dictionary, isa_proxy, 4,
                  sizeof(vector<TVector2>) );
      instance.SetNew(&new_vectorlETVector2gR);
      instance.SetNewArray(&newArray_vectorlETVector2gR);
      instance.SetDelete(&delete_vectorlETVector2gR);
      instance.SetDeleteArray(&deleteArray_vectorlETVector2gR);
      instance.SetDestructor(&destruct_vectorlETVector2gR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TVector2> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TVector2>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETVector2gR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TVector2>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETVector2gR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector2> : new vector<TVector2>;
   }
   static void *newArray_vectorlETVector2gR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TVector2>[nElements] : new vector<TVector2>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETVector2gR(void *p) {
      delete ((vector<TVector2>*)p);
   }
   static void deleteArray_vectorlETVector2gR(void *p) {
      delete [] ((vector<TVector2>*)p);
   }
   static void destruct_vectorlETVector2gR(void *p) {
      typedef vector<TVector2> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TVector2>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEfloatgR_Dictionary();
   static void *new_vectorlEfloatgR(void *p = 0);
   static void *newArray_vectorlEfloatgR(Long_t size, void *p);
   static void delete_vectorlEfloatgR(void *p);
   static void deleteArray_vectorlEfloatgR(void *p);
   static void destruct_vectorlEfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<float>*)
   {
      vector<float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<float>", -2, "vector.dll", 0,
                  typeid(vector<float>), DefineBehavior(ptr, ptr),
                  0, &vectorlEfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<float>) );
      instance.SetNew(&new_vectorlEfloatgR);
      instance.SetNewArray(&newArray_vectorlEfloatgR);
      instance.SetDelete(&delete_vectorlEfloatgR);
      instance.SetDeleteArray(&deleteArray_vectorlEfloatgR);
      instance.SetDestructor(&destruct_vectorlEfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float> : new vector<float>;
   }
   static void *newArray_vectorlEfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<float>[nElements] : new vector<float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEfloatgR(void *p) {
      delete ((vector<float>*)p);
   }
   static void deleteArray_vectorlEfloatgR(void *p) {
      delete [] ((vector<float>*)p);
   }
   static void destruct_vectorlEfloatgR(void *p) {
      typedef vector<float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<float>

namespace ROOT {
   void vectorlEunsignedsPshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEunsignedsPshortgR_Dictionary();
   static void *new_vectorlEunsignedsPshortgR(void *p = 0);
   static void *newArray_vectorlEunsignedsPshortgR(Long_t size, void *p);
   static void delete_vectorlEunsignedsPshortgR(void *p);
   static void deleteArray_vectorlEunsignedsPshortgR(void *p);
   static void destruct_vectorlEunsignedsPshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<unsigned short>*)
   {
      vector<unsigned short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<unsigned short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<unsigned short>", -2, "vector.dll", 0,
                  typeid(vector<unsigned short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEunsignedsPshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<unsigned short>) );
      instance.SetNew(&new_vectorlEunsignedsPshortgR);
      instance.SetNewArray(&newArray_vectorlEunsignedsPshortgR);
      instance.SetDelete(&delete_vectorlEunsignedsPshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEunsignedsPshortgR);
      instance.SetDestructor(&destruct_vectorlEunsignedsPshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<unsigned short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<unsigned short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEunsignedsPshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<unsigned short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEunsignedsPshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short> : new vector<unsigned short>;
   }
   static void *newArray_vectorlEunsignedsPshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<unsigned short>[nElements] : new vector<unsigned short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEunsignedsPshortgR(void *p) {
      delete ((vector<unsigned short>*)p);
   }
   static void deleteArray_vectorlEunsignedsPshortgR(void *p) {
      delete [] ((vector<unsigned short>*)p);
   }
   static void destruct_vectorlEunsignedsPshortgR(void *p) {
      typedef vector<unsigned short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<unsigned short>

/********************************************************
* src/DataModelDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableDataModelDict();

extern "C" void G__set_cpp_environmentDataModelDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("RunHeader.h");
  G__add_compiledheader("EventHeader.h");
  G__add_compiledheader("BeamInfo.h");
  G__add_compiledheader("GeomConfig.h");
  G__add_compiledheader("DataFragment.h");
  G__add_compiledheader("DataChan.h");
  G__add_compiledheader("DataCRM.h");
  G__add_compiledheader("DataCRP.h");
  G__add_compiledheader("VoxelInfo.h");
  G__add_compiledheader("VoxelInfoCRM.h");
  G__add_compiledheader("VoxelInfoCRP.h");
  G__add_compiledheader("RecoObject.h");
  G__add_compiledheader("QHit.h");
  G__add_compiledheader("Cluster2d.h");
  G__add_compiledheader("Track2d.h");
  G__add_compiledheader("RecoConfig.h");
  G__add_compiledheader("HitReco.h");
  G__add_compiledheader("DataLRO.h");
  G__add_compiledheader("ChanTrueQ.h");
  G__add_compiledheader("AnodeTrueQ.h");
  G__cpp_reset_tagtableDataModelDict();
}
#include <new>
extern "C" int G__cpp_dllrevDataModelDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* RunHeader */
static int G__DataModelDict_215_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RunHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RunHeader[n];
     } else {
       p = new((void*) gvp) RunHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RunHeader;
     } else {
       p = new((void*) gvp) RunHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_RunHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->DumpRunHeader();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letLonglong(result7, 110, (G__int64) ((const RunHeader*) G__getstructoffset())->GetRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const RunHeader*) G__getstructoffset())->GetRunTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeader*) G__getstructoffset())->GetDataType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeader*) G__getstructoffset())->GetGeometry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeader*) G__getstructoffset())->GetBeamType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeader*) G__getstructoffset())->GetPBeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetLifeTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetDiffusionL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetDiffusionT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const RunHeader*) G__getstructoffset())->GetEfieldMap();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetEfieldValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeader*) G__getstructoffset())->GetCompression());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetVGrid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetVLEMBottom());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetVLEMTop());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeader*) G__getstructoffset())->GetTransportCode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeader*) G__getstructoffset())->GetPhysicList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((RunHeader*) G__getstructoffset())->GetStartSeed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const RunHeader*) G__getstructoffset())->GetConfigFile();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeader*) G__getstructoffset())->GetReinteraction());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const RunHeader*) G__getstructoffset())->GetGENIEfn();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const RunHeader*) G__getstructoffset())->GetLMapLAR();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const RunHeader*) G__getstructoffset())->GetLMapGAR();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetLSTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetPMTsQEff());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const RunHeader*) G__getstructoffset())->GetCRBeam();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const RunHeader*) G__getstructoffset())->GetCRCRY();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetCRTO());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const RunHeader*) G__getstructoffset())->GetCRWIN());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeader*) G__getstructoffset())->GetCREVNT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const RunHeader*) G__getstructoffset())->GetCRRATE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetRunNumber((Long64_t) G__Longlong(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetRunTime((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetDataType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetGeometry((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetBeamType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetPBeam((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetLifeTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetDiffusionL((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetDiffusionT((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetEfieldMap(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetEfieldValue((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetCompression((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetVGrid((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetVLEMBottom((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetVLEMTop((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetTransportCode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetPhysicList((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetStartSeed((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetConfigFile(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetReinteraction((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetGENIEfn(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetLMapLAR(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetLMapGAR(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetLSTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetPMTsQEff((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetCRBeam(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetCRCRY(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetCRTO((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetCRWIN((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetCREVNT((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->SetCRRATE((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RunHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RunHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RunHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const RunHeader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RunHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RunHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_215_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RunHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_215_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RunHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RunHeader(*(RunHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_RunHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RunHeader G__TRunHeader;
static int G__DataModelDict_215_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RunHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RunHeader*) (soff+(sizeof(RunHeader)*i)))->~G__TRunHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RunHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RunHeader*) (soff))->~G__TRunHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_215_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RunHeader* dest = (RunHeader*) G__getstructoffset();
   *dest = *(RunHeader*) libp->para[0].ref;
   const RunHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* EventHeader */
static int G__DataModelDict_266_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventHeader[n];
     } else {
       p = new((void*) gvp) EventHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new EventHeader;
     } else {
       p = new((void*) gvp) EventHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_EventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->DumpEventHeader_True();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EventHeader*) G__getstructoffset())->GetEventNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TTimeStamp& obj = ((EventHeader*) G__getstructoffset())->GetEventTime();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((EventHeader*) G__getstructoffset())->GetDQFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueMomentum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTruePhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueProdX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueProdY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueProdZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueTotDepEne());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueTotDepEneQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueTotDepEEne());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueTotDepEEneQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueTotDepHEne());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueTotDepHEneQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueEneFromBeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueEneFromCRBack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueEneLost());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueTotDepEneCRT1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetTrueTotDepEneCRT2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecMomentum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecProdX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecProdY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecProdZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecTotDepEne());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecTotDepEneQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecTotDepEEne());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecTotDepEEneQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecTotDepHEne());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetRecTotDepHEneQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((EventHeader*) G__getstructoffset())->GetPrimaryArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetBCh1((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetBCh2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetEvTof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((EventHeader*) G__getstructoffset())->GetEvCherenkov((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EventHeader*) G__getstructoffset())->GetNumRecHit0((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EventHeader*) G__getstructoffset())->GetNumRecHit1((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EventHeader*) G__getstructoffset())->GetNumTrkCRP0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((EventHeader*) G__getstructoffset())->GetNumTrkCRP1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetEventNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetEventTime(*(TTimeStamp*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetEventTime((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetEventTime(*(timespec_t*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetDQFlag((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueP((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueMomentum((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueTheta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTruePhi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueProdX((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueProdY((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueProdZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueTotDepEne((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueTotDepEneQ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueTotDepEEne((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueTotDepEEneQ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueTotDepHEne((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueTotDepHEneQ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueEneFromBeam((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueEneFromCRBack((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueEneLost((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueTotDepEneCRT1((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetTrueTotDepEneCRT2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecP((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecMomentum((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecTheta((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecPhi((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecProdX((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecProdY((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecProdZ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecTotDepEne((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecTotDepEneQ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecTotDepEEne((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecTotDepEEneQ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecTotDepHEne((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetRecTotDepHEneQ((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetPrimary((TParticle*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetPrimaryArray((TObjArray*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetBCh1((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetBCh2((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetEvTof((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetEvCherenkov((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetNumRecHit0((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetNumRecHit1((int) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetNumTrkCRP0((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->SetNumTrkCRP1((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) EventHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) EventHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      EventHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const EventHeader*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((EventHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) EventHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_266_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) EventHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_266_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   EventHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new EventHeader(*(EventHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_EventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef EventHeader G__TEventHeader;
static int G__DataModelDict_266_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (EventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((EventHeader*) (soff+(sizeof(EventHeader)*i)))->~G__TEventHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (EventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((EventHeader*) (soff))->~G__TEventHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_266_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   EventHeader* dest = (EventHeader*) G__getstructoffset();
   *dest = *(EventHeader*) libp->para[0].ref;
   const EventHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* BeamInfo */
static int G__DataModelDict_267_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BeamInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BeamInfo[n];
     } else {
       p = new((void*) gvp) BeamInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new BeamInfo;
     } else {
       p = new((void*) gvp) BeamInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_BeamInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamInfo*) G__getstructoffset())->DumpBeamInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BeamInfo*) G__getstructoffset())->GetPBeam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((BeamInfo*) G__getstructoffset())->GetTargetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BeamInfo*) G__getstructoffset())->GetTof((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BeamInfo*) G__getstructoffset())->GetCerenkovThre((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BeamInfo*) G__getstructoffset())->GetSlit1((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((BeamInfo*) G__getstructoffset())->GetSlit2((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamInfo*) G__getstructoffset())->SetPBeam((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamInfo*) G__getstructoffset())->SetTargetType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamInfo*) G__getstructoffset())->SetTof((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamInfo*) G__getstructoffset())->SetCerenkovThre((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamInfo*) G__getstructoffset())->SetSlit1((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamInfo*) G__getstructoffset())->SetSlit2((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) BeamInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BeamInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) BeamInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      BeamInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const BeamInfo*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamInfo*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamInfo*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((BeamInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BeamInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BeamInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) BeamInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_267_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) BeamInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_267_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   BeamInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new BeamInfo(*(BeamInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_BeamInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef BeamInfo G__TBeamInfo;
static int G__DataModelDict_267_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (BeamInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((BeamInfo*) (soff+(sizeof(BeamInfo)*i)))->~G__TBeamInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (BeamInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((BeamInfo*) (soff))->~G__TBeamInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_267_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   BeamInfo* dest = (BeamInfo*) G__getstructoffset();
   *dest = *(BeamInfo*) libp->para[0].ref;
   const BeamInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* GeomConfig */
static int G__DataModelDict_268_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GeomConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GeomConfig[n];
     } else {
       p = new((void*) gvp) GeomConfig[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GeomConfig;
     } else {
       p = new((void*) gvp) GeomConfig;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_GeomConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const GeomConfig*) G__getstructoffset())->DumpGeomConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->CheckGeomConfig();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetDriftCoord((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetCrpCoord((int) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const GeomConfig*) G__getstructoffset())->GetCRMnum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetCRMcX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetCRMcY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetCRMcZ((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetCRMxdim((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetCRMydim((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetCRMpitchX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetCRMpitchY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetCRMpitchT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const GeomConfig*) G__getstructoffset())->GetCRMnchaX((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const GeomConfig*) G__getstructoffset())->GetCRMnchaY((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetCRMgain((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const GeomConfig*) G__getstructoffset())->GetCRMnsample((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetGC_SRxdimension());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetGC_SRydimension());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetGC_SRzdimension());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const GeomConfig*) G__getstructoffset())->GetGC_GeomType();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const GeomConfig*) G__getstructoffset())->GetGC_RDType();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const GeomConfig*) G__getstructoffset())->GetGC_ElecModel();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string* pobj;
         const string xobj = ((const GeomConfig*) G__getstructoffset())->GetGC_NoiseName();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const GeomConfig*) G__getstructoffset())->GetGC_quanta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetGC_Ped());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetGC_PedRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const GeomConfig*) G__getstructoffset())->GetGC_maxbit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetGC_samplingfreq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetGC_NoiseFreq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const GeomConfig*) G__getstructoffset())->GetGC_NoiseRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const GeomConfig*) G__getstructoffset())->GetGC_cohe());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMnum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMcX((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMcY((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMcZ((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMxdim((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMydim((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMpitchX((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMpitchY((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMpitchT((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMnchaX((int) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMnchaY((int) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMgain((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetCRMnsample((int) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_GeomType(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_RDType(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_ElecModel(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_NoiseName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_quanta((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_Ped((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_PedRMS((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_maxbit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_samplingfreq((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_NoiseFreq((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_NoiseRMS((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->SetGC_cohe((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GeomConfig::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GeomConfig::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GeomConfig::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GeomConfig::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const GeomConfig*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GeomConfig*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GeomConfig::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GeomConfig::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GeomConfig::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_268_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GeomConfig::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_268_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   GeomConfig* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new GeomConfig(*(GeomConfig*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_GeomConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GeomConfig G__TGeomConfig;
static int G__DataModelDict_268_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GeomConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GeomConfig*) (soff+(sizeof(GeomConfig)*i)))->~G__TGeomConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GeomConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GeomConfig*) (soff))->~G__TGeomConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_268_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GeomConfig* dest = (GeomConfig*) G__getstructoffset();
   *dest = *(GeomConfig*) libp->para[0].ref;
   const GeomConfig& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArRawData::DataChan */
static int G__DataModelDict_273_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataChan* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataChan[n];
     } else {
       p = new((void*) gvp) LArRawData::DataChan[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataChan;
     } else {
       p = new((void*) gvp) LArRawData::DataChan;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataChan* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArRawData::DataChan((Int_t) G__int(libp->para[0]), (LArRawData::Dtype) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) LArRawData::DataChan((Int_t) G__int(libp->para[0]), (LArRawData::Dtype) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataChan* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArRawData::DataChan(
(Int_t) G__int(libp->para[0]), (LArRawData::Dtype) G__int(libp->para[1])
, (LArRawData::Code) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) LArRawData::DataChan(
(Int_t) G__int(libp->para[0]), (LArRawData::Dtype) G__int(libp->para[1])
, (LArRawData::Code) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArRawData::DataChan*) G__getstructoffset())->AddDataFragment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArRawData::DataChan*) G__getstructoffset())->GetDataFragment((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const LArRawData::DataChan*) G__getstructoffset())->GetDataFragments());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataChan*) G__getstructoffset())->InitFragments((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataChan*) G__getstructoffset())->GetNFrags());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LArRawData::DataChan*) G__getstructoffset())->GetChanId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((LArRawData::DataChan*) G__getstructoffset())->GetPed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((LArRawData::DataChan*) G__getstructoffset())->GetPedRMS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LArRawData::DataChan*) G__getstructoffset())->GetChanStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LArRawData::DataChan*) G__getstructoffset())->GetDataType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataChan*) G__getstructoffset())->SetChanId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataChan*) G__getstructoffset())->SetPed((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataChan*) G__getstructoffset())->SetPedRMS((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataChan*) G__getstructoffset())->SetChanStatus((LArRawData::Code) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LArRawData::DataChan*) G__getstructoffset())->Reset((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LArRawData::DataChan*) G__getstructoffset())->Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArRawData::DataChan::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataChan::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArRawData::DataChan::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArRawData::DataChan::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataChan*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataChan::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataChan::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataChan::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_273_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataChan::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_273_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArRawData::DataChan* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArRawData::DataChan(*(LArRawData::DataChan*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArRawData::DataChan G__TLArRawDatacLcLDataChan;
static int G__DataModelDict_273_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArRawData::DataChan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArRawData::DataChan*) (soff+(sizeof(LArRawData::DataChan)*i)))->~G__TLArRawDatacLcLDataChan();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArRawData::DataChan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArRawData::DataChan*) (soff))->~G__TLArRawDatacLcLDataChan();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_273_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataChan* dest = (LArRawData::DataChan*) G__getstructoffset();
   *dest = *(LArRawData::DataChan*) libp->para[0].ref;
   const LArRawData::DataChan& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArRawData::DataCRM */
static int G__DataModelDict_274_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataCRM* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataCRM[n];
     } else {
       p = new((void*) gvp) LArRawData::DataCRM[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataCRM;
     } else {
       p = new((void*) gvp) LArRawData::DataCRM;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataCRM* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArRawData::DataCRM((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) LArRawData::DataCRM((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArRawData::DataCRM*) G__getstructoffset())->AddDataChannel((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArRawData::DataCRM*) G__getstructoffset())->AddDataChannel((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (LArRawData::Dtype) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArRawData::DataCRM*) G__getstructoffset())->AddDataChannel((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (LArRawData::Dtype) G__int(libp->para[2]), (LArRawData::Code) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const LArRawData::DataCRM*) G__getstructoffset())->GetChanView0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const LArRawData::DataCRM*) G__getstructoffset())->GetChanView1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArRawData::DataCRM*) G__getstructoffset())->GetChan((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataCRM*) G__getstructoffset())->GetNChanView0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataCRM*) G__getstructoffset())->GetNChanView1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LArRawData::DataCRM*) G__getstructoffset())->GetCRMId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataCRM*) G__getstructoffset())->SetCRMId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LArRawData::DataCRM*) G__getstructoffset())->Reset((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LArRawData::DataCRM*) G__getstructoffset())->Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArRawData::DataCRM::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataCRM::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArRawData::DataCRM::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArRawData::DataCRM::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataCRM*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataCRM::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataCRM::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataCRM::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_274_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataCRM::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_274_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArRawData::DataCRM* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArRawData::DataCRM(*(LArRawData::DataCRM*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArRawData::DataCRM G__TLArRawDatacLcLDataCRM;
static int G__DataModelDict_274_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArRawData::DataCRM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArRawData::DataCRM*) (soff+(sizeof(LArRawData::DataCRM)*i)))->~G__TLArRawDatacLcLDataCRM();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArRawData::DataCRM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArRawData::DataCRM*) (soff))->~G__TLArRawDatacLcLDataCRM();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_274_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataCRM* dest = (LArRawData::DataCRM*) G__getstructoffset();
   *dest = *(LArRawData::DataCRM*) libp->para[0].ref;
   const LArRawData::DataCRM& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArRawData::DataCRP */
static int G__DataModelDict_275_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataCRP* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataCRP[n];
     } else {
       p = new((void*) gvp) LArRawData::DataCRP[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataCRP;
     } else {
       p = new((void*) gvp) LArRawData::DataCRP;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArRawData::DataCRP*) G__getstructoffset())->AddCRM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArRawData::DataCRP*) G__getstructoffset())->AddCRM((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArRawData::DataCRP*) G__getstructoffset())->GetCRM((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const LArRawData::DataCRP*) G__getstructoffset())->GetCRMs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataCRP*) G__getstructoffset())->GetNumCRM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LArRawData::DataCRP*) G__getstructoffset())->Reset((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LArRawData::DataCRP*) G__getstructoffset())->Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArRawData::DataCRP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataCRP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArRawData::DataCRP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArRawData::DataCRP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataCRP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataCRP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataCRP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataCRP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_275_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataCRP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_275_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArRawData::DataCRP* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArRawData::DataCRP(*(LArRawData::DataCRP*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRP));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArRawData::DataCRP G__TLArRawDatacLcLDataCRP;
static int G__DataModelDict_275_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArRawData::DataCRP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArRawData::DataCRP*) (soff+(sizeof(LArRawData::DataCRP)*i)))->~G__TLArRawDatacLcLDataCRP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArRawData::DataCRP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArRawData::DataCRP*) (soff))->~G__TLArRawDatacLcLDataCRP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_275_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataCRP* dest = (LArRawData::DataCRP*) G__getstructoffset();
   *dest = *(LArRawData::DataCRP*) libp->para[0].ref;
   const LArRawData::DataCRP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArVoxel::VoxelInfo */
static int G__DataModelDict_512_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVoxel::VoxelInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArVoxel::VoxelInfo[n];
     } else {
       p = new((void*) gvp) LArVoxel::VoxelInfo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArVoxel::VoxelInfo;
     } else {
       p = new((void*) gvp) LArVoxel::VoxelInfo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVoxel::VoxelInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 13
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArVoxel::VoxelInfo(
(int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (float) G__double(libp->para[9])
, (float) G__double(libp->para[10]), (float) G__double(libp->para[11])
, (float) G__double(libp->para[12]));
   } else {
     p = new((void*) gvp) LArVoxel::VoxelInfo(
(int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (float) G__double(libp->para[9])
, (float) G__double(libp->para[10]), (float) G__double(libp->para[11])
, (float) G__double(libp->para[12]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArVoxel::VoxelInfo*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetPid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetEdep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetEdepQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetXVox());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetYVox());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetZVox());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetTVox());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetQCrp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetXCrp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetYCrp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetTCrp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetSigmaL());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArVoxel::VoxelInfo*) G__getstructoffset())->GetSigmaT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArVoxel::VoxelInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVoxel::VoxelInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArVoxel::VoxelInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArVoxel::VoxelInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArVoxel::VoxelInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVoxel::VoxelInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArVoxel::VoxelInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVoxel::VoxelInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_512_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArVoxel::VoxelInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_512_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArVoxel::VoxelInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArVoxel::VoxelInfo(*(LArVoxel::VoxelInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArVoxel::VoxelInfo G__TLArVoxelcLcLVoxelInfo;
static int G__DataModelDict_512_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArVoxel::VoxelInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArVoxel::VoxelInfo*) (soff+(sizeof(LArVoxel::VoxelInfo)*i)))->~G__TLArVoxelcLcLVoxelInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArVoxel::VoxelInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArVoxel::VoxelInfo*) (soff))->~G__TLArVoxelcLcLVoxelInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_512_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVoxel::VoxelInfo* dest = (LArVoxel::VoxelInfo*) G__getstructoffset();
   *dest = *(LArVoxel::VoxelInfo*) libp->para[0].ref;
   const LArVoxel::VoxelInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArVoxel::VoxelInfoCRM */
static int G__DataModelDict_513_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVoxel::VoxelInfoCRM* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArVoxel::VoxelInfoCRM[n];
     } else {
       p = new((void*) gvp) LArVoxel::VoxelInfoCRM[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArVoxel::VoxelInfoCRM;
     } else {
       p = new((void*) gvp) LArVoxel::VoxelInfoCRM;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVoxel::VoxelInfoCRM* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArVoxel::VoxelInfoCRM((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) LArVoxel::VoxelInfoCRM((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArVoxel::VoxelInfoCRM*) G__getstructoffset())->AddVoxel(
(int) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]), (float) G__double(libp->para[5])
, (float) G__double(libp->para[6]), (float) G__double(libp->para[7])
, (float) G__double(libp->para[8]), (float) G__double(libp->para[9])
, (float) G__double(libp->para[10]), (float) G__double(libp->para[11])
, (float) G__double(libp->para[12])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const LArVoxel::VoxelInfoCRM*) G__getstructoffset())->GetVoxels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((LArVoxel::VoxelInfoCRM*) G__getstructoffset())->GetCRMId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArVoxel::VoxelInfoCRM*) G__getstructoffset())->GetNVoxels());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArVoxel::VoxelInfoCRM*) G__getstructoffset())->SetCRMId((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LArVoxel::VoxelInfoCRM*) G__getstructoffset())->Reset((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LArVoxel::VoxelInfoCRM*) G__getstructoffset())->Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArVoxel::VoxelInfoCRM*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArVoxel::VoxelInfoCRM::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVoxel::VoxelInfoCRM::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArVoxel::VoxelInfoCRM::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArVoxel::VoxelInfoCRM::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArVoxel::VoxelInfoCRM*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVoxel::VoxelInfoCRM::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArVoxel::VoxelInfoCRM::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVoxel::VoxelInfoCRM::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_513_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArVoxel::VoxelInfoCRM::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_513_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArVoxel::VoxelInfoCRM* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArVoxel::VoxelInfoCRM(*(LArVoxel::VoxelInfoCRM*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArVoxel::VoxelInfoCRM G__TLArVoxelcLcLVoxelInfoCRM;
static int G__DataModelDict_513_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArVoxel::VoxelInfoCRM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArVoxel::VoxelInfoCRM*) (soff+(sizeof(LArVoxel::VoxelInfoCRM)*i)))->~G__TLArVoxelcLcLVoxelInfoCRM();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArVoxel::VoxelInfoCRM*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArVoxel::VoxelInfoCRM*) (soff))->~G__TLArVoxelcLcLVoxelInfoCRM();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_513_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVoxel::VoxelInfoCRM* dest = (LArVoxel::VoxelInfoCRM*) G__getstructoffset();
   *dest = *(LArVoxel::VoxelInfoCRM*) libp->para[0].ref;
   const LArVoxel::VoxelInfoCRM& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArVoxel::VoxelInfoCRP */
static int G__DataModelDict_514_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVoxel::VoxelInfoCRP* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArVoxel::VoxelInfoCRP[n];
     } else {
       p = new((void*) gvp) LArVoxel::VoxelInfoCRP[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArVoxel::VoxelInfoCRP;
     } else {
       p = new((void*) gvp) LArVoxel::VoxelInfoCRP;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArVoxel::VoxelInfoCRP*) G__getstructoffset())->AddCRM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((LArVoxel::VoxelInfoCRP*) G__getstructoffset())->AddCRM((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const LArVoxel::VoxelInfoCRP*) G__getstructoffset())->GetVoxelCRMs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LArVoxel::VoxelInfoCRP*) G__getstructoffset())->GetNumCRM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LArVoxel::VoxelInfoCRP*) G__getstructoffset())->Reset((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LArVoxel::VoxelInfoCRP*) G__getstructoffset())->Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArVoxel::VoxelInfoCRP*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArVoxel::VoxelInfoCRP::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVoxel::VoxelInfoCRP::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArVoxel::VoxelInfoCRP::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArVoxel::VoxelInfoCRP::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArVoxel::VoxelInfoCRP*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVoxel::VoxelInfoCRP::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArVoxel::VoxelInfoCRP::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArVoxel::VoxelInfoCRP::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_514_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArVoxel::VoxelInfoCRP::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_514_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArVoxel::VoxelInfoCRP* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArVoxel::VoxelInfoCRP(*(LArVoxel::VoxelInfoCRP*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArVoxel::VoxelInfoCRP G__TLArVoxelcLcLVoxelInfoCRP;
static int G__DataModelDict_514_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArVoxel::VoxelInfoCRP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArVoxel::VoxelInfoCRP*) (soff+(sizeof(LArVoxel::VoxelInfoCRP)*i)))->~G__TLArVoxelcLcLVoxelInfoCRP();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArVoxel::VoxelInfoCRP*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArVoxel::VoxelInfoCRP*) (soff))->~G__TLArVoxelcLcLVoxelInfoCRP();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_514_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArVoxel::VoxelInfoCRP* dest = (LArVoxel::VoxelInfoCRP*) G__getstructoffset();
   *dest = *(LArVoxel::VoxelInfoCRP*) libp->para[0].ref;
   const LArVoxel::VoxelInfoCRP& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArReco::RecoObjLink */
static int G__DataModelDict_518_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::RecoObjLink* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArReco::RecoObjLink[n];
     } else {
       p = new((void*) gvp) LArReco::RecoObjLink[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArReco::RecoObjLink;
     } else {
       p = new((void*) gvp) LArReco::RecoObjLink;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::RecoObjLink* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArReco::RecoObjLink((LArReco::RecoObj_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) LArReco::RecoObjLink((LArReco::RecoObj_t) G__int(libp->para[0]), (int) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const LArReco::RecoObjLink*) G__getstructoffset())->IsTransient());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::RecoObjLink*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArReco::RecoObjLink::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::RecoObjLink::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArReco::RecoObjLink::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArReco::RecoObjLink::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::RecoObjLink*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::RecoObjLink::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArReco::RecoObjLink::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::RecoObjLink::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_518_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArReco::RecoObjLink::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_518_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArReco::RecoObjLink* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArReco::RecoObjLink(*(LArReco::RecoObjLink*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArReco::RecoObjLink G__TLArRecocLcLRecoObjLink;
static int G__DataModelDict_518_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArReco::RecoObjLink*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArReco::RecoObjLink*) (soff+(sizeof(LArReco::RecoObjLink)*i)))->~G__TLArRecocLcLRecoObjLink();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArReco::RecoObjLink*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArReco::RecoObjLink*) (soff))->~G__TLArRecocLcLRecoObjLink();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_518_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::RecoObjLink* dest = (LArReco::RecoObjLink*) G__getstructoffset();
   *dest = *(LArReco::RecoObjLink*) libp->para[0].ref;
   const LArReco::RecoObjLink& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArReco::RecoObject */
static int G__DataModelDict_519_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const LArReco::RecoObject*) G__getstructoffset())->clone());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::RecoObject*) G__getstructoffset())->SetObjIndex((int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::RecoObject*) G__getstructoffset())->SetView((View_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArReco::RecoObject*) G__getstructoffset())->GetObjType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArReco::RecoObject*) G__getstructoffset())->GetView());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArReco::RecoObject*) G__getstructoffset())->GetObjIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const LArReco::RecoObjLink& obj = ((const LArReco::RecoObject*) G__getstructoffset())->GetRecoObjLink();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::RecoObject*) G__getstructoffset())->PrintNodeInfo();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::RecoObject*) G__getstructoffset())->ClearUplinks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::RecoObject*) G__getstructoffset())->ClearDownlinks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const LArReco::RecoObject*) G__getstructoffset())->GetNUplinks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const LArReco::RecoObject*) G__getstructoffset())->GetNDownlinks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::RecoObject*) G__getstructoffset())->LinkToUpperNode(*(LArReco::RecoObjLink*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::RecoObject*) G__getstructoffset())->LinkToLowerNode(*(LArReco::RecoObjLink*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<LArReco::RecoObjLink>& obj = ((const LArReco::RecoObject*) G__getstructoffset())->GetUpNodes();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<LArReco::RecoObjLink>& obj = ((const LArReco::RecoObject*) G__getstructoffset())->GetDownNodes();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArReco::RecoObject::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::RecoObject::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArReco::RecoObject::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArReco::RecoObject::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::RecoObject*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::RecoObject::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArReco::RecoObject::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::RecoObject::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_519_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArReco::RecoObject::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArReco::RecoObject G__TLArRecocLcLRecoObject;
static int G__DataModelDict_519_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArReco::RecoObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArReco::RecoObject*) (soff+(sizeof(LArReco::RecoObject)*i)))->~G__TLArRecocLcLRecoObject();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArReco::RecoObject*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArReco::RecoObject*) (soff))->~G__TLArRecocLcLRecoObject();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_519_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::RecoObject* dest = (LArReco::RecoObject*) G__getstructoffset();
   *dest = *(LArReco::RecoObject*) libp->para[0].ref;
   const LArReco::RecoObject& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> > */
static int G__DataModelDict_521_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reference obj = ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->at((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_reference obj = ((const vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->at((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator* pobj;
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator xobj = ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->begin();
         pobj = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator* pobj;
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator xobj = ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->end();
         pobj = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reverse_iterator* pobj;
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reverse_iterator xobj = ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->rbegin();
         pobj = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reverse_iterator* pobj;
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reverse_iterator xobj = ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->rend();
         pobj = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->resize((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->resize((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]), *((LArReco::RecoObjLink*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reference obj = ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->operator[]((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_reference obj = ((const vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->operator[]((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >[n];
     } else {
       p = new((void*) gvp) vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >;
     } else {
       p = new((void*) gvp) vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]), *(LArReco::RecoObjLink*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]), *(LArReco::RecoObjLink*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >(*(vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >(*(vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >(*((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_iterator*) G__int(libp->para[0])), *((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >(*((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_iterator*) G__int(libp->para[0])), *((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >& obj = ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->operator=(*(vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->reserve((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const LArReco::RecoObjLink& obj = ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const LArReco::RecoObjLink& obj = ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->push_back(*(LArReco::RecoObjLink*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->swap(*(vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator* pobj;
         vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator xobj = ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->insert(*((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator*) G__int(libp->para[0])), *(LArReco::RecoObjLink*) libp->para[1].ref);
         pobj = new vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->insert(*((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator*) G__int(libp->para[0])), *((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_iterator*) G__int(libp->para[1]))
, *((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->insert(*((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator*) G__int(libp->para[0])), (vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type) G__int(libp->para[1])
, *(LArReco::RecoObjLink*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->erase(*((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->erase(*((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator*) G__int(libp->para[0])), *((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_521_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> > G__TvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR;
static int G__DataModelDict_521_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) (soff+(sizeof(vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >)*i)))->~G__TvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*) (soff))->~G__TvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArReco::QHit */
static int G__DataModelDict_524_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::QHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArReco::QHit[n];
     } else {
       p = new((void*) gvp) LArReco::QHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArReco::QHit;
     } else {
       p = new((void*) gvp) LArReco::QHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::QHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArReco::QHit(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) LArReco::QHit(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::QHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 8
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArReco::QHit(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   } else {
     p = new((void*) gvp) LArReco::QHit(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (UInt_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->ShiftHitTb((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetCRM((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetView((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetCh((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetTbStart((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetTbEnd((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetTbMax((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetQ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetAmplitude((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetHitIndex((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetHitMCCharge((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetT((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetX((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->SetD((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArReco::QHit*) G__getstructoffset())->GetCRM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArReco::QHit*) G__getstructoffset())->GetView());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArReco::QHit*) G__getstructoffset())->GetCh());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LArReco::QHit*) G__getstructoffset())->GetTbStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LArReco::QHit*) G__getstructoffset())->GetTbEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LArReco::QHit*) G__getstructoffset())->GetTbMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::QHit*) G__getstructoffset())->GetAmplitude());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::QHit*) G__getstructoffset())->GetQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::QHit*) G__getstructoffset())->GetQTotMC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArReco::QHit*) G__getstructoffset())->GetHitIndex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArReco::QHit*) G__getstructoffset())->GetHitMCCharge((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArReco::QHit*) G__getstructoffset())->GetT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArReco::QHit*) G__getstructoffset())->GetX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArReco::QHit*) G__getstructoffset())->GetD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((LArReco::QHit*) G__getstructoffset())->IsHitValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((LArReco::QHit*) G__getstructoffset())->ValidateHitParam());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const LArReco::QHit*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArReco::QHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::QHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArReco::QHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArReco::QHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::QHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::QHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArReco::QHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::QHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_524_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArReco::QHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_524_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArReco::QHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArReco::QHit(*(LArReco::QHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArReco::QHit G__TLArRecocLcLQHit;
static int G__DataModelDict_524_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArReco::QHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArReco::QHit*) (soff+(sizeof(LArReco::QHit)*i)))->~G__TLArRecocLcLQHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArReco::QHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArReco::QHit*) (soff))->~G__TLArRecocLcLQHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_524_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::QHit* dest = (LArReco::QHit*) G__getstructoffset();
   *dest = *(LArReco::QHit*) libp->para[0].ref;
   const LArReco::QHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArReco::Cluster2d */
static int G__DataModelDict_525_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::Cluster2d* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArReco::Cluster2d[n];
     } else {
       p = new((void*) gvp) LArReco::Cluster2d[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArReco::Cluster2d;
     } else {
       p = new((void*) gvp) LArReco::Cluster2d;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::Cluster2d* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArReco::Cluster2d(*(vector<const LArReco::QHit*>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) LArReco::Cluster2d(*(vector<const LArReco::QHit*>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::Cluster2d* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArReco::Cluster2d(
*(TVector2*) libp->para[0].ref, *(TVector2*) libp->para[1].ref
, *(vector<const LArReco::QHit*>*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) LArReco::Cluster2d(
*(TVector2*) libp->para[0].ref, *(TVector2*) libp->para[1].ref
, *(vector<const LArReco::QHit*>*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Cluster2d*) G__getstructoffset())->GetQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Cluster2d*) G__getstructoffset())->GetSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Cluster2d*) G__getstructoffset())->GetT0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((const LArReco::Cluster2d*) G__getstructoffset())->GetStart();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((const LArReco::Cluster2d*) G__getstructoffset())->GetEnd();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Cluster2d*) G__getstructoffset())->SetT0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArReco::Cluster2d::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::Cluster2d::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArReco::Cluster2d::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArReco::Cluster2d::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Cluster2d*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::Cluster2d::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArReco::Cluster2d::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::Cluster2d::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_525_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArReco::Cluster2d::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_525_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArReco::Cluster2d* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArReco::Cluster2d(*(LArReco::Cluster2d*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArReco::Cluster2d G__TLArRecocLcLCluster2d;
static int G__DataModelDict_525_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArReco::Cluster2d*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArReco::Cluster2d*) (soff+(sizeof(LArReco::Cluster2d)*i)))->~G__TLArRecocLcLCluster2d();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArReco::Cluster2d*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArReco::Cluster2d*) (soff))->~G__TLArRecocLcLCluster2d();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_525_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::Cluster2d* dest = (LArReco::Cluster2d*) G__getstructoffset();
   *dest = *(LArReco::Cluster2d*) libp->para[0].ref;
   const LArReco::Cluster2d& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArReco::Track2d */
static int G__DataModelDict_530_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::Track2d* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArReco::Track2d[n];
     } else {
       p = new((void*) gvp) LArReco::Track2d[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArReco::Track2d;
     } else {
       p = new((void*) gvp) LArReco::Track2d;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::Track2d* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArReco::Track2d(*(vector<const LArReco::QHit*>*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) LArReco::Track2d(*(vector<const LArReco::QHit*>*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::Track2d* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArReco::Track2d(
*(vector<TVector2>*) libp->para[0].ref, *((vector<double>*) G__int(libp->para[1]))
, *(vector<const LArReco::QHit*>*) libp->para[2].ref);
   } else {
     p = new((void*) gvp) LArReco::Track2d(
*(vector<TVector2>*) libp->para[0].ref, *((vector<double>*) G__int(libp->para[1]))
, *(vector<const LArReco::QHit*>*) libp->para[2].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->SetPid((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->SetMomentum((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->SetCRM((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->SetSlopeInit((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->SetSlopeFinal((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->SetSlopeInit((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->SetSlopeFinal((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->SetChi2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->SetStartErrors((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->SetEndErrors((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->AddDeltaRays(*(vector<const LArReco::QHit*>*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArReco::Track2d*) G__getstructoffset())->GetCRM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArReco::Track2d*) G__getstructoffset())->GetPid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const LArReco::Track2d*) G__getstructoffset())->GetNpts());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetSlopeInit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetSlopeInitErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetSlopeFinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetSlopeFinalErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetDistInitErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetDistFinalErr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetCorrCoeffInit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetCorrCoeffFinal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const LArReco::Track2d*) G__getstructoffset())->GetLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TVector2>& obj = ((const LArReco::Track2d*) G__getstructoffset())->GetPath();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>& obj = ((const LArReco::Track2d*) G__getstructoffset())->GetDQ();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<LArReco::RecoObjLink>& obj = ((const LArReco::Track2d*) G__getstructoffset())->GetHits();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<LArReco::RecoObjLink>& obj = ((const LArReco::Track2d*) G__getstructoffset())->GetDRays();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const LArReco::Track2d& obj = ((LArReco::Track2d*) G__getstructoffset())->operator+=(*(LArReco::Track2d*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const LArReco::Track2d*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArReco::Track2d::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::Track2d::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArReco::Track2d::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArReco::Track2d::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArReco::Track2d*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::Track2d::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArReco::Track2d::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArReco::Track2d::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_530_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArReco::Track2d::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_530_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArReco::Track2d* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArReco::Track2d(*(LArReco::Track2d*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArReco::Track2d G__TLArRecocLcLTrack2d;
static int G__DataModelDict_530_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArReco::Track2d*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArReco::Track2d*) (soff+(sizeof(LArReco::Track2d)*i)))->~G__TLArRecocLcLTrack2d();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArReco::Track2d*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArReco::Track2d*) (soff))->~G__TLArRecocLcLTrack2d();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_530_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArReco::Track2d* dest = (LArReco::Track2d*) G__getstructoffset();
   *dest = *(LArReco::Track2d*) libp->para[0].ref;
   const LArReco::Track2d& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* vector<TVector2,allocator<TVector2> > */
static int G__DataModelDict_532_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TVector2,allocator<TVector2> >::reference obj = ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->at((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector2,allocator<TVector2> >::const_reference obj = ((const vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->at((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector2,allocator<TVector2> >::iterator* pobj;
         vector<TVector2,allocator<TVector2> >::iterator xobj = ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->begin();
         pobj = new vector<TVector2,allocator<TVector2> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector2,allocator<TVector2> >::iterator* pobj;
         vector<TVector2,allocator<TVector2> >::iterator xobj = ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->end();
         pobj = new vector<TVector2,allocator<TVector2> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector2,allocator<TVector2> >::reverse_iterator* pobj;
         vector<TVector2,allocator<TVector2> >::reverse_iterator xobj = ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->rbegin();
         pobj = new vector<TVector2,allocator<TVector2> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector2,allocator<TVector2> >::reverse_iterator* pobj;
         vector<TVector2,allocator<TVector2> >::reverse_iterator xobj = ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->rend();
         pobj = new vector<TVector2,allocator<TVector2> >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->resize((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->resize((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]), *((TVector2*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->capacity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TVector2,allocator<TVector2> >::reference obj = ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->operator[]((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector2,allocator<TVector2> >::const_reference obj = ((const vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->operator[]((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector2,allocator<TVector2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector2,allocator<TVector2> >[n];
     } else {
       p = new((void*) gvp) vector<TVector2,allocator<TVector2> >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector2,allocator<TVector2> >;
     } else {
       p = new((void*) gvp) vector<TVector2,allocator<TVector2> >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector2,allocator<TVector2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector2,allocator<TVector2> >((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]), *(TVector2*) libp->para[1].ref);
     } else {
       p = new((void*) gvp) vector<TVector2,allocator<TVector2> >((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]), *(TVector2*) libp->para[1].ref);
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new vector<TVector2,allocator<TVector2> >((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) vector<TVector2,allocator<TVector2> >((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector2,allocator<TVector2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TVector2,allocator<TVector2> >(*(vector<TVector2,allocator<TVector2> >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) vector<TVector2,allocator<TVector2> >(*(vector<TVector2,allocator<TVector2> >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   vector<TVector2,allocator<TVector2> >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new vector<TVector2,allocator<TVector2> >(*((vector<TVector2,allocator<TVector2> >::const_iterator*) G__int(libp->para[0])), *((vector<TVector2,allocator<TVector2> >::const_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) vector<TVector2,allocator<TVector2> >(*((vector<TVector2,allocator<TVector2> >::const_iterator*) G__int(libp->para[0])), *((vector<TVector2,allocator<TVector2> >::const_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<TVector2,allocator<TVector2> >& obj = ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->operator=(*(vector<TVector2,allocator<TVector2> >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->reserve((vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->front();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector2& obj = ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->back();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->push_back(*(TVector2*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->swap(*(vector<TVector2,allocator<TVector2> >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<TVector2,allocator<TVector2> >::iterator* pobj;
         vector<TVector2,allocator<TVector2> >::iterator xobj = ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->insert(*((vector<TVector2,allocator<TVector2> >::iterator*) G__int(libp->para[0])), *(TVector2*) libp->para[1].ref);
         pobj = new vector<TVector2,allocator<TVector2> >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->insert(*((vector<TVector2,allocator<TVector2> >::iterator*) G__int(libp->para[0])), *((vector<TVector2,allocator<TVector2> >::const_iterator*) G__int(libp->para[1]))
, *((vector<TVector2,allocator<TVector2> >::const_iterator*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->insert(*((vector<TVector2,allocator<TVector2> >::iterator*) G__int(libp->para[0])), (vector<TVector2,allocator<TVector2> >::size_type) G__int(libp->para[1])
, *(TVector2*) libp->para[2].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->pop_back();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->erase(*((vector<TVector2,allocator<TVector2> >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->erase(*((vector<TVector2,allocator<TVector2> >::iterator*) G__int(libp->para[0])), *((vector<TVector2,allocator<TVector2> >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_532_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((vector<TVector2,allocator<TVector2> >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef vector<TVector2,allocator<TVector2> > G__TvectorlETVector2cOallocatorlETVector2gRsPgR;
static int G__DataModelDict_532_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (vector<TVector2,allocator<TVector2> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((vector<TVector2,allocator<TVector2> >*) (soff+(sizeof(vector<TVector2,allocator<TVector2> >)*i)))->~G__TvectorlETVector2cOallocatorlETVector2gRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (vector<TVector2,allocator<TVector2> >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((vector<TVector2,allocator<TVector2> >*) (soff))->~G__TvectorlETVector2cOallocatorlETVector2gRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* RecoConfig */
static int G__DataModelDict_535_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecoConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecoConfig[n];
     } else {
       p = new((void*) gvp) RecoConfig[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new RecoConfig;
     } else {
       p = new((void*) gvp) RecoConfig;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecoConfig* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new RecoConfig(*((string*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) RecoConfig(*((string*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecoConfig*) G__getstructoffset())->SetRunTime((unsigned int) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecoConfig*) G__getstructoffset())->SetTaskName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecoConfig*) G__getstructoffset())->SetAlgoName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecoConfig*) G__getstructoffset())->SetInFileName(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((RecoConfig*) G__getstructoffset())->GetRunTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((RecoConfig*) G__getstructoffset())->GetTaskName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((RecoConfig*) G__getstructoffset())->GetAlgoName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const string& obj = ((RecoConfig*) G__getstructoffset())->GetInFileName();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecoConfig*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecoConfig*) G__getstructoffset())->AddValue(*((string*) G__int(libp->para[0])), *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         vector<float>* pobj;
         vector<float> xobj = ((RecoConfig*) G__getstructoffset())->GetValue(*((string*) G__int(libp->para[0])));
         pobj = new vector<float>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) RecoConfig::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecoConfig::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) RecoConfig::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      RecoConfig::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((RecoConfig*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecoConfig::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecoConfig::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) RecoConfig::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_535_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) RecoConfig::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_535_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   RecoConfig* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new RecoConfig(*(RecoConfig*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef RecoConfig G__TRecoConfig;
static int G__DataModelDict_535_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (RecoConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((RecoConfig*) (soff+(sizeof(RecoConfig)*i)))->~G__TRecoConfig();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (RecoConfig*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((RecoConfig*) (soff))->~G__TRecoConfig();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_535_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   RecoConfig* dest = (RecoConfig*) G__getstructoffset();
   *dest = *(RecoConfig*) libp->para[0].ref;
   const RecoConfig& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > > */
static int G__DataModelDict_538_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >[n];
     } else {
       p = new((void*) gvp) map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >;
     } else {
       p = new((void*) gvp) map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >(*((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >(*((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >(*((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[1])));
   } else {
     p = new((void*) gvp) map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >(*((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[1])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >(*(map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >(*(map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >& obj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->operator=(*(map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator* pobj;
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator xobj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->begin();
         pobj = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator* pobj;
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator xobj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->end();
         pobj = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator* pobj;
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator xobj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->rbegin();
         pobj = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator* pobj;
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator xobj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->rend();
         pobj = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->empty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->max_size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<float,allocator<float> >& obj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         pair<map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator,bool>* pobj;
         pair<map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator,bool> xobj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*(map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::value_type*) libp->para[0].ref);
         pobj = new pair<map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator,bool>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator* pobj;
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator xobj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *(map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::value_type*) libp->para[1].ref);
         pobj = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->insert(*((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[0])), *((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->erase(*((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->erase(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->erase(*((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[0])), *((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->swap(*(map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator* pobj;
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator xobj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->find(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->count(*(string*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator* pobj;
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator xobj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->lower_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_538_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator* pobj;
         map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator xobj = ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) G__getstructoffset())->upper_bound(*(string*) libp->para[0].ref);
         pobj = new map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > > G__TmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR;
static int G__DataModelDict_538_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) (soff+(sizeof(map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >)*i)))->~G__TmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*) (soff))->~G__TmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HitReco */
static int G__DataModelDict_543_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitReco* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HitReco[n];
     } else {
       p = new((void*) gvp) HitReco[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HitReco;
     } else {
       p = new((void*) gvp) HitReco;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_HitReco));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->DumpHitReco();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HitReco*) G__getstructoffset())->GetHITRecRunTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HitReco*) G__getstructoffset())->GetHITRecInFlname();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitReco*) G__getstructoffset())->GetHITRecFNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitReco*) G__getstructoffset())->GetHITRecINum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HitReco*) G__getstructoffset())->GetHITRecSNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HitReco*) G__getstructoffset())->GetHITRecF((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HitReco*) G__getstructoffset())->GetHITRecI((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((HitReco*) G__getstructoffset())->GetHITRecS((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->SetHITRecTime((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->SetHITRecInFlname(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->SetHITRecFNum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->SetHITRecINum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->SetHITRecSNum((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->SetHITRecF((int) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->SetHITRecI((int) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->SetHITRecS((int) G__int(libp->para[0]), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HitReco::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitReco::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HitReco::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HitReco::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HitReco*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HitReco*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitReco::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HitReco::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HitReco::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_543_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HitReco::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_543_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HitReco* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HitReco(*(HitReco*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_HitReco));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HitReco G__THitReco;
static int G__DataModelDict_543_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HitReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HitReco*) (soff+(sizeof(HitReco)*i)))->~G__THitReco();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HitReco*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HitReco*) (soff))->~G__THitReco();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_543_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HitReco* dest = (HitReco*) G__getstructoffset();
   *dest = *(HitReco*) libp->para[0].ref;
   const HitReco& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArRawData::DataLRO */
static int G__DataModelDict_572_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataLRO* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataLRO[n];
     } else {
       p = new((void*) gvp) LArRawData::DataLRO[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataLRO;
     } else {
       p = new((void*) gvp) LArRawData::DataLRO;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataLRO));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_572_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((LArRawData::DataLRO*) G__getstructoffset())->Reset((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((LArRawData::DataLRO*) G__getstructoffset())->Reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_572_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArRawData::DataLRO::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_572_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataLRO::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_572_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArRawData::DataLRO::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_572_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArRawData::DataLRO::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_572_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataLRO*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_572_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataLRO::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_572_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataLRO::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_572_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataLRO::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_572_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataLRO::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArRawData::DataLRO G__TLArRawDatacLcLDataLRO;
static int G__DataModelDict_572_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArRawData::DataLRO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArRawData::DataLRO*) (soff+(sizeof(LArRawData::DataLRO)*i)))->~G__TLArRawDatacLcLDataLRO();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArRawData::DataLRO*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArRawData::DataLRO*) (soff))->~G__TLArRawDatacLcLDataLRO();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArMCTruth::ChanTrueQ */
static int G__DataModelDict_574_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArMCTruth::ChanTrueQ* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArMCTruth::ChanTrueQ[n];
     } else {
       p = new((void*) gvp) LArMCTruth::ChanTrueQ[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArMCTruth::ChanTrueQ;
     } else {
       p = new((void*) gvp) LArMCTruth::ChanTrueQ;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArMCTruth::ChanTrueQ* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new LArMCTruth::ChanTrueQ((UInt_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) LArMCTruth::ChanTrueQ((UInt_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArMCTruth::ChanTrueQ*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArMCTruth::ChanTrueQ*) G__getstructoffset())->SetChan((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArMCTruth::ChanTrueQ*) G__getstructoffset())->SetData((UInt_t) G__int(libp->para[0]), *(vector<Float_t>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArMCTruth::ChanTrueQ*) G__getstructoffset())->AddData((UInt_t) G__int(libp->para[0]), *(vector<Float_t>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArMCTruth::ChanTrueQ*) G__getstructoffset())->AddDatum((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArMCTruth::ChanTrueQ*) G__getstructoffset())->GetQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LArMCTruth::ChanTrueQ*) G__getstructoffset())->GetChan());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LArMCTruth::ChanTrueQ*) G__getstructoffset())->GetTstart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LArMCTruth::ChanTrueQ*) G__getstructoffset())->GetTend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const LArMCTruth::ChanTrueQ*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Float_t>& obj = ((LArMCTruth::ChanTrueQ*) G__getstructoffset())->GetData();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArMCTruth::ChanTrueQ*) G__getstructoffset())->Reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArMCTruth::ChanTrueQ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArMCTruth::ChanTrueQ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArMCTruth::ChanTrueQ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArMCTruth::ChanTrueQ::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArMCTruth::ChanTrueQ*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArMCTruth::ChanTrueQ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArMCTruth::ChanTrueQ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArMCTruth::ChanTrueQ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_574_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArMCTruth::ChanTrueQ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_574_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArMCTruth::ChanTrueQ* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArMCTruth::ChanTrueQ(*(LArMCTruth::ChanTrueQ*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArMCTruth::ChanTrueQ G__TLArMCTruthcLcLChanTrueQ;
static int G__DataModelDict_574_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArMCTruth::ChanTrueQ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArMCTruth::ChanTrueQ*) (soff+(sizeof(LArMCTruth::ChanTrueQ)*i)))->~G__TLArMCTruthcLcLChanTrueQ();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArMCTruth::ChanTrueQ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArMCTruth::ChanTrueQ*) (soff))->~G__TLArMCTruthcLcLChanTrueQ();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_574_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArMCTruth::ChanTrueQ* dest = (LArMCTruth::ChanTrueQ*) G__getstructoffset();
   *dest = *(LArMCTruth::ChanTrueQ*) libp->para[0].ref;
   const LArMCTruth::ChanTrueQ& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArMCTruth::AnodeTrueQ */
static int G__DataModelDict_575_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArMCTruth::AnodeTrueQ* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArMCTruth::AnodeTrueQ[n];
     } else {
       p = new((void*) gvp) LArMCTruth::AnodeTrueQ[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArMCTruth::AnodeTrueQ;
     } else {
       p = new((void*) gvp) LArMCTruth::AnodeTrueQ;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArMCTruth::AnodeTrueQ*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const LArMCTruth::AnodeTrueQ*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const LArMCTruth::AnodeTrueQ& obj = ((LArMCTruth::AnodeTrueQ*) G__getstructoffset())->operator=(*(LArMCTruth::AnodeTrueQ*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArMCTruth::AnodeTrueQ*) G__getstructoffset())->GetQView0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const LArMCTruth::AnodeTrueQ*) G__getstructoffset())->GetQView1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const LArMCTruth::AnodeTrueQ*) G__getstructoffset())->GetNChView0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 107, (long) ((const LArMCTruth::AnodeTrueQ*) G__getstructoffset())->GetNChView1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const LArMCTruth::AnodeTrueQ*) G__getstructoffset())->IsValid());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArMCTruth::AnodeTrueQ*) G__getstructoffset())->AddChanData(*(LArMCTruth::ChanTrueQ*) libp->para[0].ref, (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<LArMCTruth::ChanTrueQ*>& obj = ((const LArMCTruth::AnodeTrueQ*) G__getstructoffset())->View0();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<LArMCTruth::ChanTrueQ*>& obj = ((const LArMCTruth::AnodeTrueQ*) G__getstructoffset())->View1();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArMCTruth::AnodeTrueQ::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArMCTruth::AnodeTrueQ::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArMCTruth::AnodeTrueQ::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArMCTruth::AnodeTrueQ::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArMCTruth::AnodeTrueQ*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArMCTruth::AnodeTrueQ::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArMCTruth::AnodeTrueQ::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArMCTruth::AnodeTrueQ::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_575_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArMCTruth::AnodeTrueQ::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_575_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArMCTruth::AnodeTrueQ* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArMCTruth::AnodeTrueQ(*(LArMCTruth::AnodeTrueQ*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArMCTruth::AnodeTrueQ G__TLArMCTruthcLcLAnodeTrueQ;
static int G__DataModelDict_575_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArMCTruth::AnodeTrueQ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArMCTruth::AnodeTrueQ*) (soff+(sizeof(LArMCTruth::AnodeTrueQ)*i)))->~G__TLArMCTruthcLcLAnodeTrueQ();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArMCTruth::AnodeTrueQ*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArMCTruth::AnodeTrueQ*) (soff))->~G__TLArMCTruthcLcLAnodeTrueQ();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArRawData::DataFragment<float> */
static int G__DataModelDict_580_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataFragment<float>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataFragment<float>[n];
     } else {
       p = new((void*) gvp) LArRawData::DataFragment<float>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataFragment<float>;
     } else {
       p = new((void*) gvp) LArRawData::DataFragment<float>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataFragment<float>*) G__getstructoffset())->InitFragment((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataFragment<float>*) G__getstructoffset())->AddDatum((UInt_t) G__int(libp->para[0]), (float) G__double(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataFragment<float>*) G__getstructoffset())->AddData((UInt_t) G__int(libp->para[0]), *((vector<float>*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((LArRawData::DataFragment<float>*) G__getstructoffset())->GetDatum((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataFragment<float>*) G__getstructoffset())->GetData(*(vector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataFragment<float>*) G__getstructoffset())->GetDataFloat(*(vector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataFragment<float>*) G__getstructoffset())->SetData((UInt_t) G__int(libp->para[0]), *(vector<float>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataFragment<float>*) G__getstructoffset())->GetFragStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataFragment<float>*) G__getstructoffset())->GetFragEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataFragment<float>*) G__getstructoffset())->GetFragSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArRawData::DataFragment<float>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataFragment<float>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArRawData::DataFragment<float>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArRawData::DataFragment<float>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataFragment<float>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataFragment<float>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataFragment<float>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataFragment<float>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_580_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataFragment<float>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_580_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArRawData::DataFragment<float>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArRawData::DataFragment<float>(*(LArRawData::DataFragment<float>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArRawData::DataFragment<float> G__TLArRawDatacLcLDataFragmentlEfloatgR;
static int G__DataModelDict_580_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArRawData::DataFragment<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArRawData::DataFragment<float>*) (soff+(sizeof(LArRawData::DataFragment<float>)*i)))->~G__TLArRawDatacLcLDataFragmentlEfloatgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArRawData::DataFragment<float>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArRawData::DataFragment<float>*) (soff))->~G__TLArRawDatacLcLDataFragmentlEfloatgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_580_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataFragment<float>* dest = (LArRawData::DataFragment<float>*) G__getstructoffset();
   *dest = *(LArRawData::DataFragment<float>*) libp->para[0].ref;
   const LArRawData::DataFragment<float>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* LArRawData::DataFragment<unsigned short> */
static int G__DataModelDict_581_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataFragment<unsigned short>* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataFragment<unsigned short>[n];
     } else {
       p = new((void*) gvp) LArRawData::DataFragment<unsigned short>[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new LArRawData::DataFragment<unsigned short>;
     } else {
       p = new((void*) gvp) LArRawData::DataFragment<unsigned short>;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->InitFragment((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->AddDatum((UInt_t) G__int(libp->para[0]), (unsigned short) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->AddData((UInt_t) G__int(libp->para[0]), *((vector<unsigned short>*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->GetDatum((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->GetData(*(vector<unsigned short>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->GetDataFloat(*(vector<float>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->SetData((UInt_t) G__int(libp->para[0]), *(vector<unsigned short>*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->GetFragStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->GetFragEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->GetFragSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) LArRawData::DataFragment<unsigned short>::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataFragment<unsigned short>::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) LArRawData::DataFragment<unsigned short>::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      LArRawData::DataFragment<unsigned short>::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((LArRawData::DataFragment<unsigned short>*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataFragment<unsigned short>::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataFragment<unsigned short>::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) LArRawData::DataFragment<unsigned short>::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__DataModelDict_581_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) LArRawData::DataFragment<unsigned short>::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__DataModelDict_581_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   LArRawData::DataFragment<unsigned short>* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new LArRawData::DataFragment<unsigned short>(*(LArRawData::DataFragment<unsigned short>*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef LArRawData::DataFragment<unsigned short> G__TLArRawDatacLcLDataFragmentlEunsignedsPshortgR;
static int G__DataModelDict_581_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (LArRawData::DataFragment<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((LArRawData::DataFragment<unsigned short>*) (soff+(sizeof(LArRawData::DataFragment<unsigned short>)*i)))->~G__TLArRawDatacLcLDataFragmentlEunsignedsPshortgR();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (LArRawData::DataFragment<unsigned short>*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((LArRawData::DataFragment<unsigned short>*) (soff))->~G__TLArRawDatacLcLDataFragmentlEunsignedsPshortgR();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__DataModelDict_581_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   LArRawData::DataFragment<unsigned short>* dest = (LArRawData::DataFragment<unsigned short>*) G__getstructoffset();
   *dest = *(LArRawData::DataFragment<unsigned short>*) libp->para[0].ref;
   const LArRawData::DataFragment<unsigned short>& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* RunHeader */

/* EventHeader */

/* BeamInfo */

/* GeomConfig */

/* LArRawData::DataChan */

/* LArRawData::DataCRM */

/* LArRawData::DataCRP */

/* LArVoxel::VoxelInfo */

/* LArVoxel::VoxelInfoCRM */

/* LArVoxel::VoxelInfoCRP */

/* LArReco::RecoObjLink */

/* LArReco::RecoObject */

/* vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> > */

/* LArReco::QHit */

/* LArReco::Cluster2d */

/* LArReco::Track2d */

/* vector<TVector2,allocator<TVector2> > */

/* RecoConfig */

/* map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > > */

/* HitReco */

/* LArRawData::DataLRO */

/* LArMCTruth::ChanTrueQ */

/* LArMCTruth::AnodeTrueQ */

/* LArRawData::DataFragment<float> */

/* LArRawData::DataFragment<unsigned short> */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncDataModelDict {
 public:
  G__Sizep2memfuncDataModelDict(): p(&G__Sizep2memfuncDataModelDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncDataModelDict::*p)();
};

size_t G__get_sizep2memfuncDataModelDict()
{
  G__Sizep2memfuncDataModelDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceDataModelDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan))) {
     LArRawData::DataChan *G__Lderived;
     G__Lderived=(LArRawData::DataChan*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM))) {
     LArRawData::DataCRM *G__Lderived;
     G__Lderived=(LArRawData::DataCRM*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRP))) {
     LArRawData::DataCRP *G__Lderived;
     G__Lderived=(LArRawData::DataCRP*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRP),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo))) {
     LArVoxel::VoxelInfo *G__Lderived;
     G__Lderived=(LArVoxel::VoxelInfo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM))) {
     LArVoxel::VoxelInfoCRM *G__Lderived;
     G__Lderived=(LArVoxel::VoxelInfoCRM*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP))) {
     LArVoxel::VoxelInfoCRP *G__Lderived;
     G__Lderived=(LArVoxel::VoxelInfoCRP*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink))) {
     LArReco::RecoObjLink *G__Lderived;
     G__Lderived=(LArReco::RecoObjLink*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObject))) {
     LArReco::RecoObject *G__Lderived;
     G__Lderived=(LArReco::RecoObject*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObject),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit))) {
     LArReco::QHit *G__Lderived;
     G__Lderived=(LArReco::QHit*)0x1000;
     {
       LArReco::RecoObject *G__Lpbase=(LArReco::RecoObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit),G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d))) {
     LArReco::Cluster2d *G__Lderived;
     G__Lderived=(LArReco::Cluster2d*)0x1000;
     {
       LArReco::RecoObject *G__Lpbase=(LArReco::RecoObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d),G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d))) {
     LArReco::Track2d *G__Lderived;
     G__Lderived=(LArReco::Track2d*)0x1000;
     {
       LArReco::Cluster2d *G__Lpbase=(LArReco::Cluster2d*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d),G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       LArReco::RecoObject *G__Lpbase=(LArReco::RecoObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d),G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig))) {
     RecoConfig *G__Lderived;
     G__Lderived=(RecoConfig*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataLRO))) {
     LArRawData::DataLRO *G__Lderived;
     G__Lderived=(LArRawData::DataLRO*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataLRO),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ))) {
     LArMCTruth::ChanTrueQ *G__Lderived;
     G__Lderived=(LArMCTruth::ChanTrueQ*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ))) {
     LArMCTruth::AnodeTrueQ *G__Lderived;
     G__Lderived=(LArMCTruth::AnodeTrueQ*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR))) {
     LArRawData::DataFragment<float> *G__Lderived;
     G__Lderived=(LArRawData::DataFragment<float>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR))) {
     LArRawData::DataFragment<unsigned short> *G__Lderived;
     G__Lderived=(LArRawData::DataFragment<unsigned short>*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR),G__get_linked_tagnum(&G__DataModelDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableDataModelDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Long64_t",110,-1,0,-1);
   G__setnewtype(-1,"Portable signed long integer 8 bytes",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DataModelDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__DataModelDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__DataModelDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__DataModelDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__DataModelDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("timespec_t",117,G__get_linked_tagnum(&G__DataModelDictLN_timespec),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LArReco::RecoObjLink>",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink),256,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink),1,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink),257,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<RecoObjLink>",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR),0,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObject));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<const LArReco::QHit*>",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVector2>",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataModelDictLN_TVector2),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pointer",85,G__get_linked_tagnum(&G__DataModelDictLN_TVector2),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_pointer",85,G__get_linked_tagnum(&G__DataModelDictLN_TVector2),256,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reference",117,G__get_linked_tagnum(&G__DataModelDictLN_TVector2),1,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reference",117,G__get_linked_tagnum(&G__DataModelDictLN_TVector2),257,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,std::vector<float> >",117,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,std::vector<float> >",117,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_type",117,G__get_linked_tagnum(&G__DataModelDictLN_string),0,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("mapped_type",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("value_type",117,G__get_linked_tagnum(&G__DataModelDictLN_pairlEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR),0,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("key_compare",117,G__get_linked_tagnum(&G__DataModelDictLN_lesslEstringgR),0,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("allocator_type",117,G__get_linked_tagnum(&G__DataModelDictLN_allocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR),0,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("size_type",107,-1,0,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("difference_type",108,-1,0,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_iterator",117,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator),256,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("const_reverse_iterator",117,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator),256,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<float,allocator<float> > >",117,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,vector<float,allocator<float> >,less<string> >",117,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<LArMCTruth::ChanTrueQ*>",117,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("LArRawData::DataFragment<Float_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR),0,G__get_linked_tagnum(&G__DataModelDictLN_LArRawData));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("LArRawData::DataFragment<UShort_t>",117,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR),0,G__get_linked_tagnum(&G__DataModelDictLN_LArRawData));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* RunHeader */
static void G__setup_memvarRunHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_RunHeader));
   { RunHeader *p; p=(RunHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,G__defined_typename("Long64_t"),-1,4,"RH_RunNumber=",0,"Run Number */");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"RH_RunTime=",0,"Run Time/ Generation Time */ ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_DataType=",0,"1 if Data, 2 if MC gun 3 if MC external file */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_Geometry=",0,"3 if 3x1x1, 6 if 6x6x6 */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_BeamType=",0,"should we use geantID? should we define enum with 1=pi+, 2=pi-....to be decided */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_PBeam=",0,"beam  energy */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_LifeTime=",0,"-999 if Data */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_EFieldValue=",0,"-999 if Map is used*/");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TString),-1,-1,4,"RH_EFieldMap=",0,"map name*/");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_DiffusionL=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_DiffusionT=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_IsCompressed=",0,"O uncompressed, 1 compressed */ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_VGrid=",0,"Charge readout configuration*/");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_VLEMBottom=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_VLEMTop=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TString),-1,-1,4,"RH_ConfigFile=",0,"Geomentry configuration files**/");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TString),-1,-1,4,"RH_GENIEfn=",0,"name of genie input file */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_IsReinteraction=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TString),-1,-1,4,"RH_LMapLAR=",0,"Light Map */");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TString),-1,-1,4,"RH_LMapGAR=",0,"Light Map */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_LSTime=",0,"sampling time*/");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_PMTsQEff=",0,"PMTs Quantum efficiency, same for all PMTs*/  ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_TransportCode=",0,"3 if Geant3, 4 if Geant4, -999 if Data */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_PhysicList=",0,"enum? -999 if Data*/");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_StartSeed=",0,"-999 if Data*/   ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TString),-1,-1,4,"RH_CRBeam=",0,"beam particle if Cosmic Background is generated */");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TString),-1,-1,4,"RH_CRCRY=",0,"CRY cosmic file */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_CRTO=",0,"start time */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_CRWIN=",0,"duration */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_CREVNT=",0,"number of events from cry file */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_CRRATE=",0,"rate */");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* EventHeader */
static void G__setup_memvarEventHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_EventHeader));
   { EventHeader *p; p=(EventHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"EH_EventNumber=",0,"event number */");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TTimeStamp),-1,-1,4,"EH_EventTime=",0,"time stamp   */");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"EH_DQFlag=",0,"event data quality flag */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueP=",0,"particle momentum    MC true value  */ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueMomentum[3]=",0,"MC true value px, py, pz*/ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueTheta=",0,"theta    MC true value */ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TruePhi=",0,"phi   MC true value */ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueProdX=",0,"x vertex production   MC true value */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueProdY=",0,"y vertex production   MC true value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueProdZ=",0,"z vertex production   MC true value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueTotDepEne=",0,"total deposited energy  MC true value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueTotDepEneQ=",0,"total deposited energy  (quenched) */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueTotDepEEne=",0,"total deposited em energy   MC true value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueTotDepEEneQ=",0,"total deposited em energy (quenched)  MC true value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueTotDepHEne=",0,"total deposited had energy  MC true value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueTotDepHEneQ=",0,"total deposited had energy (quenched)  MC true value  */ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueEneFromBeam=",0,"energy deposited by beam particle  MC true value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueEneFromCRBack=",0,"energy deposited by CR backgroud  MC true value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueEneLost=",0,"lost energy out of fiducial volume");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueTotDepEneCRT1=",0,"energy deposited in CRT1 */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_TrueTotDepEneCRT2=",0,"energy deposited in CRT2 */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecP=",0,"particle momentum   reconstrcuted  value  */ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecMomentum[3]=",0,"rec. value px, py, pz*/ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecTheta=",0,"theta   Rec value */ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecPhi=",0,"phi  Rec value */ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecProdX=",0,"x vertex production  reconstructed value */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecProdY=",0,"y vertex production   reconstructed value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecProdZ=",0,"z vertex production  reconstructed value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecTotDepEne=",0,"total deposited energy reconstructed value */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecTotDepEneQ=",0,"total deposited energy  reconstructed value(quenched) */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecTotDepEEne=",0,"total deposited em energy  reconstructed value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecTotDepEEneQ=",0,"total deposited em energy (quenched) reconstructed value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecTotDepHEne=",0,"total deposited had energy  reconstructed value  */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_RecTotDepHEneQ=",0,"total deposited had energy (quenched) reconstructed value  */ ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_BCh1[2]=",0,"x y coordinate form beam chamber 1 */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_BCh2[2]=",0,"x y coordinate form beam chamber 1 */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_EvTof=",0,"Time of flight value */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"EH_EvCherenkov[3]=",0,"Cherenkov */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"EH_nhitv0[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"EH_nhitv1[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"EH_crptrks0=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"EH_crptrks1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TObjArray),-1,-1,4,"EH_Primaries=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* BeamInfo */
static void G__setup_memvarBeamInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_BeamInfo));
   { BeamInfo *p; p=(BeamInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_PBeam=",0,"beam momentum */");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"RH_TargetType=",0,"target type enum to be defined */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_Tof[2]=",0,"contatori scintillazione */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_CerenkovThre[3]=",0,"cerenkov threshold pion, k proton*/");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_Slit1[2]=",0,"momentum spread */");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"RH_Slit2[2]=",0,"momentum spread */");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* GeomConfig */
static void G__setup_memvarGeomConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_GeomConfig));
   { GeomConfig *p; p=(GeomConfig*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"GC_CRMnum=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_CRMxpos[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_CRMypos[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_CRMzpos[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_CRMxdim[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_CRMydim[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_CRMpitchX[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_CRMpitchY[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_CRMpitchT=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"GC_CRMnchaX[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"GC_CRMnchaY[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_CRMgain[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"GC_CRMnsample[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_SRxdimension=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_SRydimension=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_SRzdimension=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_string),-1,-1,4,"GC_GeomType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_string),-1,-1,4,"GC_RDType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_string),-1,-1,4,"GC_ElecModel=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_string),-1,-1,4,"GC_NoiseName=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"GC_quanta=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_ped=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_ped_rms=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"GC_maxbit=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_samplingfreq=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_NoiseFreq=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"GC_NoiseRMS=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"GC_cohe=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArRawData::DataChan */
static void G__setup_memvarLArRawDatacLcLDataChan(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan));
   { LArRawData::DataChan *p; p=(LArRawData::DataChan*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ChanId=",0,"channel id");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"PedVal=",0,"pedestal value");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"PedRMS=",0,"pedestal rms");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NFrags=",0,"number of fragments");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLCode),-1,-1,4,"ChanStatus=",0,"channel status");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDtype),-1,-1,4,"DataType=",0,"data ttpe");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClonesArray),-1,-1,4,"DataFrags=",0,"data fragments");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArRawData::DataCRM */
static void G__setup_memvarLArRawDatacLcLDataCRM(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM));
   { LArRawData::DataCRM *p; p=(LArRawData::DataCRM*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClonesArray),-1,-1,4,"ChView0=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClonesArray),-1,-1,4,"ChView1=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NChView0=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NChView1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"CRMId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArRawData::DataCRP */
static void G__setup_memvarLArRawDatacLcLDataCRP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRP));
   { LArRawData::DataCRP *p; p=(LArRawData::DataCRP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NumCRM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClonesArray),-1,-1,4,"dCRM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArVoxel::VoxelInfo */
static void G__setup_memvarLArVoxelcLcLVoxelInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo));
   { LArVoxel::VoxelInfo *p; p=(LArVoxel::VoxelInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"Pid=",0,"particle id");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"Edep=",0,"energy deposited in voxel");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"EdepQ=",0,"quenched deposited energy");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"xVox=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"yVox=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"zVox=",0,"position of the voxel");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"tVox=",0,"time of the deposition");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"qCrp=",0,"charge arriving at crp");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"xCrp=",0,"position on crp");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"yCrp=",0,"position on crp");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"tCrp=",0,"time of arrival at crp");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"qSigmaL=",0,"longitudinal charge spread");
   G__memvar_setup((void*)0,102,0,0,-1,-1,-1,2,"qSigmaT=",0,"tranverse charge spread");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArVoxel::VoxelInfoCRM */
static void G__setup_memvarLArVoxelcLcLVoxelInfoCRM(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM));
   { LArVoxel::VoxelInfoCRM *p; p=(LArVoxel::VoxelInfoCRM*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"CRMId=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"nVoxels=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TObjArray),-1,-1,4,"Voxels=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArVoxel::VoxelInfoCRP */
static void G__setup_memvarLArVoxelcLcLVoxelInfoCRP(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP));
   { LArVoxel::VoxelInfoCRP *p; p=(LArVoxel::VoxelInfoCRP*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NumCRM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TObjArray),-1,-1,4,"vCRM=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArReco::RecoObjLink */
static void G__setup_memvarLArRecocLcLRecoObjLink(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink));
   { LArReco::RecoObjLink *p; p=(LArReco::RecoObjLink*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->ObjType)-(long)(p)),105,0,0,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObj_t),-1,-1,1,"ObjType=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->ObjIdx)-(long)(p)),105,0,0,-1,-1,-1,1,"ObjIdx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArReco::RecoObject */
static void G__setup_memvarLArRecocLcLRecoObject(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObject));
   { LArReco::RecoObject *p; p=(LArReco::RecoObject*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink),-1,-1,2,"fThisObj=",0,"link to this object");
   G__memvar_setup((void*)0,105,0,0,G__get_linked_tagnum(&G__DataModelDictLN_View_t),-1,-1,2,"fViewType=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR),-1,-1,2,"fLinkUpNode=",0,"link to upper nodes");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR),-1,-1,2,"fLinkDownNode=",0,"link to lower nodes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> > */
static void G__setup_memvarvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   { vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> > *p; p=(vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* LArReco::QHit */
static void G__setup_memvarLArRecocLcLQHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit));
   { LArReco::QHit *p; p=(LArReco::QHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->crmId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"crmId=",0,"CRM id");
   G__memvar_setup((void*)((long)(&p->iView)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"iView=",0,"view id");
   G__memvar_setup((void*)((long)(&p->chId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"chId=",0,"channel id");
   G__memvar_setup((void*)((long)(&p->isValid)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"isValid=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->tbStart)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"tbStart=",0,"time bin start of the hit");
   G__memvar_setup((void*)((long)(&p->tbEnd)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"tbEnd=",0,"time bin end of the hit");
   G__memvar_setup((void*)((long)(&p->tbMax)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"tbMax=",0,"time bin of the peak");
   G__memvar_setup((void*)((long)(&p->Ampl)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Ampl=",0,"amplitude ");
   G__memvar_setup((void*)((long)(&p->Qtot)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Qtot=",0,"total charge (fC)");
   G__memvar_setup((void*)((long)(&p->HitMCQ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"HitMCQ[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Ht)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Ht=",0,"hit time in us");
   G__memvar_setup((void*)((long)(&p->Hx)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Hx=",0,"hit position in cm");
   G__memvar_setup((void*)((long)(&p->Hd)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"Hd=",0,"hit distance from CRP in cm");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArReco::Cluster2d */
static void G__setup_memvarLArRecocLcLCluster2d(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d));
   { LArReco::Cluster2d *p; p=(LArReco::Cluster2d*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TVector2),-1,-1,2,"fStart=",0,"pos cm, drift distance cm");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TVector2),-1,-1,2,"fEnd=",0,"pos cm, drift distance cm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fTotQ=",0,"total Q in fC");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fSlope=",0,"us / cm");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fT0=",0,"time of arrival with respect to readout start in us");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArReco::Track2d */
static void G__setup_memvarLArRecocLcLTrack2d(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d));
   { LArReco::Track2d *p; p=(LArReco::Track2d*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCrm=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPid=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fMom=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fChi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLength=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTanThInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTanThInitErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTanThFinal=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTanThFinalErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDPosInitErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDPosFinalErr=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCorrCoeffInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCorrCoeffFinal=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR),G__defined_typename("vector<TVector2>"),-1,4,"fPath=",0,"pos and distance in cm");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fQdX=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR),G__defined_typename("vector<LArReco::RecoObjLink>"),-1,4,"fDeltaRays=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* vector<TVector2,allocator<TVector2> > */
static void G__setup_memvarvectorlETVector2cOallocatorlETVector2gRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   { vector<TVector2,allocator<TVector2> > *p; p=(vector<TVector2,allocator<TVector2> >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* RecoConfig */
static void G__setup_memvarRecoConfig(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig));
   { RecoConfig *p; p=(RecoConfig*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fRunTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_string),-1,-1,4,"fTaskName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_string),-1,-1,4,"fAlgoName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_string),-1,-1,4,"fInFlName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),G__defined_typename("map<std::string,std::vector<float> >"),-1,4,"fAlgoPara=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > > */
static void G__setup_memvarmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   { map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > > *p; p=(map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* HitReco */
static void G__setup_memvarHitReco(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_HitReco));
   { HitReco *p; p=(HitReco*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"HITRec_RunTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TString),-1,-1,4,"HITRec_InFlname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HITRec_Float=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HITRec_Int=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HITRec_String=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"HITRec_PFloat[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"HITRec_PInt[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_string),-1,-1,4,"HITRec_PString[50]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArRawData::DataLRO */
static void G__setup_memvarLArRawDatacLcLDataLRO(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataLRO));
   { LArRawData::DataLRO *p; p=(LArRawData::DataLRO*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->hList)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TList),-1,-1,1,"hList=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"NumPMTs=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"sampleTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClonesArray),-1,-1,4,"dLRO=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArMCTruth::ChanTrueQ */
static void G__setup_memvarLArMCTruthcLcLChanTrueQ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ));
   { LArMCTruth::ChanTrueQ *p; p=(LArMCTruth::ChanTrueQ*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fQtot=",0,"total Q");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fCh=",0,"channel data");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fStart=",0,"start of time sequence");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEnd=",0,"end of the time sequence");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<Float_t>"),-1,4,"fData=",0,"contnuous sequence of time data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArMCTruth::AnodeTrueQ */
static void G__setup_memvarLArMCTruthcLcLAnodeTrueQ(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ));
   { LArMCTruth::AnodeTrueQ *p; p=(LArMCTruth::AnodeTrueQ*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgR),G__defined_typename("vector<LArMCTruth::ChanTrueQ*>"),-1,4,"fAnodeQView0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgR),G__defined_typename("vector<LArMCTruth::ChanTrueQ*>"),-1,4,"fAnodeQView1=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fQView0=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fQView1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArRawData::DataFragment<float> */
static void G__setup_memvarLArRawDatacLcLDataFragmentlEfloatgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR));
   { LArRawData::DataFragment<float> *p; p=(LArRawData::DataFragment<float>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fStart=",0,"start of the data fragment sequence");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEnd=",0,"end of the data fragment sequence");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR),G__defined_typename("vector<float>"),-1,4,"fData=",0,"fragment data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* LArRawData::DataFragment<unsigned short> */
static void G__setup_memvarLArRawDatacLcLDataFragmentlEunsignedsPshortgR(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR));
   { LArRawData::DataFragment<unsigned short> *p; p=(LArRawData::DataFragment<unsigned short>*)0x1000; if (p) { }
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fStart=",0,"start of the data fragment sequence");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEnd=",0,"end of the data fragment sequence");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__DataModelDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR),G__defined_typename("vector<unsigned short>"),-1,4,"fData=",0,"fragment data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__DataModelDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarDataModelDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncRunHeader(void) {
   /* RunHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_RunHeader));
   G__memfunc_setup("RunHeader",894,G__DataModelDict_215_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_RunHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpRunHeader",1300,G__DataModelDict_215_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunNumber",1214,G__DataModelDict_215_0_3, 110, -1, G__defined_typename("Long64_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunTime",996,G__DataModelDict_215_0_4, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataType",1084,G__DataModelDict_215_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGeometry",1132,G__DataModelDict_215_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBeamType",1079,G__DataModelDict_215_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPBeam",741,G__DataModelDict_215_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLifeTime",1071,G__DataModelDict_215_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDiffusionL",1299,G__DataModelDict_215_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDiffusionT",1307,G__DataModelDict_215_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEfieldMap",1159,G__DataModelDict_215_0_12, 117, G__get_linked_tagnum(&G__DataModelDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEfieldValue",1382,G__DataModelDict_215_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCompression",1458,G__DataModelDict_215_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVGrid",764,G__DataModelDict_215_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVLEMBottom",1225,G__DataModelDict_215_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVLEMTop",903,G__DataModelDict_215_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTransportCode",1640,G__DataModelDict_215_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhysicList",1324,G__DataModelDict_215_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStartSeed",1199,G__DataModelDict_215_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetConfigFile",1270,G__DataModelDict_215_0_21, 117, G__get_linked_tagnum(&G__DataModelDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReinteraction",1655,G__DataModelDict_215_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGENIEfn",860,G__DataModelDict_215_0_23, 117, G__get_linked_tagnum(&G__DataModelDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLMapLAR",873,G__DataModelDict_215_0_24, 117, G__get_linked_tagnum(&G__DataModelDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLMapGAR",868,G__DataModelDict_215_0_25, 117, G__get_linked_tagnum(&G__DataModelDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLSTime",846,G__DataModelDict_215_0_26, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPMTsQEff",998,G__DataModelDict_215_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRBeam",810,G__DataModelDict_215_0_28, 117, G__get_linked_tagnum(&G__DataModelDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRCRY",675,G__DataModelDict_215_0_29, 117, G__get_linked_tagnum(&G__DataModelDictLN_TString), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRTO",600,G__DataModelDict_215_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRWIN",675,G__DataModelDict_215_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCREVNT",754,G__DataModelDict_215_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRRATE",737,G__DataModelDict_215_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunNumber",1226,G__DataModelDict_215_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "n - 'Long64_t' 0 - RunNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunTime",1008,G__DataModelDict_215_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - RunTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDataType",1096,G__DataModelDict_215_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - DataType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGeometry",1144,G__DataModelDict_215_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - Geometry", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBeamType",1091,G__DataModelDict_215_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - BeamType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPBeam",753,G__DataModelDict_215_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - PBeam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLifeTime",1083,G__DataModelDict_215_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - LifeTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDiffusionL",1311,G__DataModelDict_215_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - DiffL", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDiffusionT",1319,G__DataModelDict_215_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - DiffT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfieldMap",1171,G__DataModelDict_215_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - EFieldMap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEfieldValue",1394,G__DataModelDict_215_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - EFieldValue", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCompression",1470,G__DataModelDict_215_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - IsCompressed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVGrid",776,G__DataModelDict_215_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - VGrid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVLEMBottom",1237,G__DataModelDict_215_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - VLEMBottom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVLEMTop",915,G__DataModelDict_215_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - VLEMTop", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTransportCode",1652,G__DataModelDict_215_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - TransportCode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPhysicList",1336,G__DataModelDict_215_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - PhysicList", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartSeed",1211,G__DataModelDict_215_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - StartSeed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetConfigFile",1282,G__DataModelDict_215_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - ConfigFile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReinteraction",1667,G__DataModelDict_215_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - IsReint", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGENIEfn",872,G__DataModelDict_215_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - GENIEfn", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLMapLAR",885,G__DataModelDict_215_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - LMapLAR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLMapGAR",880,G__DataModelDict_215_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - LMapGAR", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLSTime",858,G__DataModelDict_215_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - LSTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPMTsQEff",1010,G__DataModelDict_215_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - QEff", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRBeam",822,G__DataModelDict_215_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - CRBeam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRCRY",687,G__DataModelDict_215_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - CRCRY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRTO",612,G__DataModelDict_215_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CRTO", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRWIN",687,G__DataModelDict_215_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CRWIN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCREVNT",766,G__DataModelDict_215_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CREVNT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRRATE",749,G__DataModelDict_215_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CRRATE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_215_0_65, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RunHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_215_0_66, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_215_0_67, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RunHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_215_0_68, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RunHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DataModelDict_215_0_69, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DataModelDict_215_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DataModelDict_215_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_215_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_215_0_73, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_215_0_74, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RunHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_215_0_75, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RunHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_215_0_76, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RunHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RunHeader", 894, G__DataModelDict_215_0_77, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_RunHeader), -1, 0, 1, 1, 1, 0, "u 'RunHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RunHeader", 1020, G__DataModelDict_215_0_78, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_215_0_79, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_RunHeader), -1, 1, 1, 1, 1, 0, "u 'RunHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncEventHeader(void) {
   /* EventHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_EventHeader));
   G__memfunc_setup("EventHeader",1099,G__DataModelDict_266_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_EventHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpEventHeader_True",2016,G__DataModelDict_266_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventNumber",1419,G__DataModelDict_266_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEventTime",1201,G__DataModelDict_266_0_4, 117, G__get_linked_tagnum(&G__DataModelDictLN_TTimeStamp), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDQFlag",815,G__DataModelDict_266_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueP",784,G__DataModelDict_266_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueMomentum",1554,G__DataModelDict_266_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTheta",1206,G__DataModelDict_266_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTruePhi",993,G__DataModelDict_266_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueProdX",1197,G__DataModelDict_266_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueProdY",1198,G__DataModelDict_266_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueProdZ",1199,G__DataModelDict_266_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTotDepEne",1576,G__DataModelDict_266_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTotDepEneQ",1657,G__DataModelDict_266_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTotDepEEne",1645,G__DataModelDict_266_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTotDepEEneQ",1726,G__DataModelDict_266_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTotDepHEne",1648,G__DataModelDict_266_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTotDepHEneQ",1729,G__DataModelDict_266_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueEneFromBeam",1761,G__DataModelDict_266_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueEneFromCRBack",1906,G__DataModelDict_266_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueEneLost",1402,G__DataModelDict_266_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTotDepEneCRT1",1858,G__DataModelDict_266_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTrueTotDepEneCRT2",1859,G__DataModelDict_266_0_23, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecP",650,G__DataModelDict_266_0_24, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecMomentum",1420,G__DataModelDict_266_0_25, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecTheta",1072,G__DataModelDict_266_0_26, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecPhi",859,G__DataModelDict_266_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecProdX",1063,G__DataModelDict_266_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecProdY",1064,G__DataModelDict_266_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecProdZ",1065,G__DataModelDict_266_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecTotDepEne",1442,G__DataModelDict_266_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecTotDepEneQ",1523,G__DataModelDict_266_0_32, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecTotDepEEne",1511,G__DataModelDict_266_0_33, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecTotDepEEneQ",1592,G__DataModelDict_266_0_34, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecTotDepHEne",1514,G__DataModelDict_266_0_35, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecTotDepHEneQ",1595,G__DataModelDict_266_0_36, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPrimaryArray",1539,G__DataModelDict_266_0_37, 85, G__get_linked_tagnum(&G__DataModelDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCh1",574,G__DataModelDict_266_0_38, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBCh2",575,G__DataModelDict_266_0_39, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvTof",772,G__DataModelDict_266_0_40, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvCherenkov",1408,G__DataModelDict_266_0_41, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumRecHit0",1215,G__DataModelDict_266_0_42, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumRecHit1",1216,G__DataModelDict_266_0_43, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumTrkCRP0",1174,G__DataModelDict_266_0_44, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumTrkCRP1",1175,G__DataModelDict_266_0_45, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventNumber",1431,G__DataModelDict_266_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - EventNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventTime",1213,G__DataModelDict_266_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TTimeStamp' - 1 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventTime",1213,G__DataModelDict_266_0_48, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - sec i - 'Int_t' 0 - nsec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEventTime",1213,G__DataModelDict_266_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'timespec' 'timespec_t' 11 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDQFlag",827,G__DataModelDict_266_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueP",796,G__DataModelDict_266_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueMomentum",1566,G__DataModelDict_266_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - tmom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueTheta",1218,G__DataModelDict_266_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTruePhi",1005,G__DataModelDict_266_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueProdX",1209,G__DataModelDict_266_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tProdX", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueProdY",1210,G__DataModelDict_266_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tProdY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueProdZ",1211,G__DataModelDict_266_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tProdZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueTotDepEne",1588,G__DataModelDict_266_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tTotDepEne", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueTotDepEneQ",1669,G__DataModelDict_266_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tTotDepEneQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueTotDepEEne",1657,G__DataModelDict_266_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tTotDepEEne", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueTotDepEEneQ",1738,G__DataModelDict_266_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tTotDepEEneQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueTotDepHEne",1660,G__DataModelDict_266_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tTotDepHEne", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueTotDepHEneQ",1741,G__DataModelDict_266_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tTotDepHEneQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueEneFromBeam",1773,G__DataModelDict_266_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tEneFromBeam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueEneFromCRBack",1918,G__DataModelDict_266_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tEneFromCRBack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueEneLost",1414,G__DataModelDict_266_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tval", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueTotDepEneCRT1",1870,G__DataModelDict_266_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tTotDepEneCRT1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTrueTotDepEneCRT2",1871,G__DataModelDict_266_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - tTotDepEneCRT2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecP",662,G__DataModelDict_266_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecMomentum",1432,G__DataModelDict_266_0_70, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - rmom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecTheta",1084,G__DataModelDict_266_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rTheta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecPhi",871,G__DataModelDict_266_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecProdX",1075,G__DataModelDict_266_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rProdX", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecProdY",1076,G__DataModelDict_266_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rProdY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecProdZ",1077,G__DataModelDict_266_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rProdZ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecTotDepEne",1454,G__DataModelDict_266_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rTotDepEne", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecTotDepEneQ",1535,G__DataModelDict_266_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rTotDepEneQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecTotDepEEne",1523,G__DataModelDict_266_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rTotDepEEne", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecTotDepEEneQ",1604,G__DataModelDict_266_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rTotDepEEneQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecTotDepHEne",1526,G__DataModelDict_266_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rTotDepHEne", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRecTotDepHEneQ",1607,G__DataModelDict_266_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - rTotDepHEneQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrimary",1040,G__DataModelDict_266_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TParticle' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrimaryArray",1551,G__DataModelDict_266_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObjArray' - 0 - arr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBCh1",586,G__DataModelDict_266_0_84, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - BCh1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBCh2",587,G__DataModelDict_266_0_85, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - BCh2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEvTof",784,G__DataModelDict_266_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - Ev_Tof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEvCherenkov",1420,G__DataModelDict_266_0_87, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - EvCherenkov", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumRecHit0",1227,G__DataModelDict_266_0_88, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - hnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumRecHit1",1228,G__DataModelDict_266_0_89, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - - 0 - hnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumTrkCRP0",1186,G__DataModelDict_266_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNumTrkCRP1",1187,G__DataModelDict_266_0_91, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_266_0_92, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&EventHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_266_0_93, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_266_0_94, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&EventHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_266_0_95, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&EventHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DataModelDict_266_0_96, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DataModelDict_266_0_97, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DataModelDict_266_0_98, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_266_0_99, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_266_0_100, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_266_0_101, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_266_0_102, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&EventHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_266_0_103, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&EventHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("EventHeader", 1099, G__DataModelDict_266_0_104, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_EventHeader), -1, 0, 1, 1, 1, 0, "u 'EventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~EventHeader", 1225, G__DataModelDict_266_0_105, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_266_0_106, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_EventHeader), -1, 1, 1, 1, 1, 0, "u 'EventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncBeamInfo(void) {
   /* BeamInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_BeamInfo));
   G__memfunc_setup("BeamInfo",769,G__DataModelDict_267_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_BeamInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpBeamInfo",1175,G__DataModelDict_267_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPBeam",741,G__DataModelDict_267_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTargetType",1321,G__DataModelDict_267_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTof",585,G__DataModelDict_267_0_5, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCerenkovThre",1520,G__DataModelDict_267_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlit1",749,G__DataModelDict_267_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlit2",750,G__DataModelDict_267_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPBeam",753,G__DataModelDict_267_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - PBeam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTargetType",1333,G__DataModelDict_267_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - TargetType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTof",597,G__DataModelDict_267_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - Tof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCerenkovThre",1532,G__DataModelDict_267_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - CerenkovThre", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlit1",761,G__DataModelDict_267_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - Slit1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlit2",762,G__DataModelDict_267_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - Slit2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_267_0_15, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&BeamInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_267_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BeamInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_267_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&BeamInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_267_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&BeamInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DataModelDict_267_0_19, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DataModelDict_267_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DataModelDict_267_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_267_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_267_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BeamInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_267_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BeamInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_267_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&BeamInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_267_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&BeamInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("BeamInfo", 769, G__DataModelDict_267_0_27, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_BeamInfo), -1, 0, 1, 1, 1, 0, "u 'BeamInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~BeamInfo", 895, G__DataModelDict_267_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_267_0_29, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_BeamInfo), -1, 1, 1, 1, 1, 0, "u 'BeamInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncGeomConfig(void) {
   /* GeomConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_GeomConfig));
   G__memfunc_setup("GeomConfig",990,G__DataModelDict_268_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_GeomConfig), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpGeomConfig",1396,G__DataModelDict_268_0_2, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckGeomConfig",1468,G__DataModelDict_268_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDriftCoord",1296,G__DataModelDict_268_0_4, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - tdc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCrpCoord",1084,G__DataModelDict_268_0_5, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 8, 
"i - - 0 - crm i - - 0 - iview "
"i - - 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMnum",850,G__DataModelDict_268_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMcX",701,G__DataModelDict_268_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMcY",702,G__DataModelDict_268_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMcZ",703,G__DataModelDict_268_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMxdim",948,G__DataModelDict_268_0_10, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMydim",949,G__DataModelDict_268_0_11, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMpitchX",1138,G__DataModelDict_268_0_12, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMpitchY",1139,G__DataModelDict_268_0_13, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMpitchT",1134,G__DataModelDict_268_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMnchaX",1012,G__DataModelDict_268_0_15, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMnchaY",1013,G__DataModelDict_268_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMgain",929,G__DataModelDict_268_0_17, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMnsample",1266,G__DataModelDict_268_0_18, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_SRxdimension",1772,G__DataModelDict_268_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_SRydimension",1773,G__DataModelDict_268_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_SRzdimension",1774,G__DataModelDict_268_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_GeomType",1331,G__DataModelDict_268_0_22, 117, G__get_linked_tagnum(&G__DataModelDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_RDType",1089,G__DataModelDict_268_0_23, 117, G__get_linked_tagnum(&G__DataModelDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_ElecModel",1395,G__DataModelDict_268_0_24, 117, G__get_linked_tagnum(&G__DataModelDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_NoiseName",1416,G__DataModelDict_268_0_25, 117, G__get_linked_tagnum(&G__DataModelDictLN_string), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_quanta",1171,G__DataModelDict_268_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_Ped",802,G__DataModelDict_268_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_PedRMS",1044,G__DataModelDict_268_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_maxbit",1166,G__DataModelDict_268_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_samplingfreq",1810,G__DataModelDict_268_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_NoiseFreq",1429,G__DataModelDict_268_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_NoiseRMS",1273,G__DataModelDict_268_0_32, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGC_cohe",936,G__DataModelDict_268_0_33, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMnum",862,G__DataModelDict_268_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - CRMnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMcX",713,G__DataModelDict_268_0_35, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - CRMxpos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMcY",714,G__DataModelDict_268_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - CRMypos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMcZ",715,G__DataModelDict_268_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - CRMzpos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMxdim",960,G__DataModelDict_268_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - CRMxdim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMydim",961,G__DataModelDict_268_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - CRMydim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMpitchX",1150,G__DataModelDict_268_0_40, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - CRMpitchX", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMpitchY",1151,G__DataModelDict_268_0_41, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - CRMpitchY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMpitchT",1146,G__DataModelDict_268_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - CRMpitchT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMnchaX",1024,G__DataModelDict_268_0_43, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - 'Int_t' 0 - CRMnchaX", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMnchaY",1025,G__DataModelDict_268_0_44, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - 'Int_t' 0 - CRMnchaY", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMgain",941,G__DataModelDict_268_0_45, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - CRMgain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMnsample",1278,G__DataModelDict_268_0_46, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - 'Int_t' 0 - CRMnsample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_GeomType",1343,G__DataModelDict_268_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_RDType",1101,G__DataModelDict_268_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_ElecModel",1407,G__DataModelDict_268_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_NoiseName",1428,G__DataModelDict_268_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_quanta",1183,G__DataModelDict_268_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - quanta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_Ped",814,G__DataModelDict_268_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ped", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_PedRMS",1056,G__DataModelDict_268_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - pedrms", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_maxbit",1178,G__DataModelDict_268_0_54, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - bit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_samplingfreq",1822,G__DataModelDict_268_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - sampling", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_NoiseFreq",1441,G__DataModelDict_268_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - nfreq", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_NoiseRMS",1285,G__DataModelDict_268_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - nrms", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGC_cohe",948,G__DataModelDict_268_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - cohe", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckCRMNum",1008,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - crm", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_268_0_60, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GeomConfig::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_268_0_61, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GeomConfig::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_268_0_62, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GeomConfig::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_268_0_63, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GeomConfig::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DataModelDict_268_0_64, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DataModelDict_268_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DataModelDict_268_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_268_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_268_0_68, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GeomConfig::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_268_0_69, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GeomConfig::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_268_0_70, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GeomConfig::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_268_0_71, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GeomConfig::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("GeomConfig", 990, G__DataModelDict_268_0_72, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_GeomConfig), -1, 0, 1, 1, 1, 0, "u 'GeomConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GeomConfig", 1116, G__DataModelDict_268_0_73, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_268_0_74, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_GeomConfig), -1, 1, 1, 1, 1, 0, "u 'GeomConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRawDatacLcLDataChan(void) {
   /* LArRawData::DataChan */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan));
   G__memfunc_setup("DataChan",756,G__DataModelDict_273_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataChan",756,G__DataModelDict_273_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - chanid i 'LArRawData::Dtype' - 0 - dtype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataChan",756,G__DataModelDict_273_0_3, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - chanid i 'LArRawData::Dtype' - 0 - dtype "
"i 'LArRawData::Code' - 0 - scode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDataFragment",1463,G__DataModelDict_273_0_4, 85, G__get_linked_tagnum(&G__DataModelDictLN_TObject), -1, 0, 0, 1, 1, 0, "", "necessary to downcast !", (void*) NULL, 0);
   G__memfunc_setup("GetDataFragment",1486,G__DataModelDict_273_0_5, 85, G__get_linked_tagnum(&G__DataModelDictLN_TObject), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - at", "necessary to downcast !", (void*) NULL, 0);
   G__memfunc_setup("GetDataFragments",1601,G__DataModelDict_273_0_6, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitFragments",1339,G__DataModelDict_273_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - fstart h - 'UInt_t' 0 - fsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNFrags",865,G__DataModelDict_273_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanId",839,G__DataModelDict_273_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPed",569,G__DataModelDict_273_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPedRMS",811,G__DataModelDict_273_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanStatus",1310,G__DataModelDict_273_0_12, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLCode), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataType",1084,G__DataModelDict_273_0_13, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDtype), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanId",851,G__DataModelDict_273_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPed",581,G__DataModelDict_273_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPedRMS",823,G__DataModelDict_273_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChanStatus",1322,G__DataModelDict_273_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i 'LArRawData::Code' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__DataModelDict_273_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_273_0_20, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArRawData::DataChan::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_273_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataChan::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_273_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArRawData::DataChan::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_273_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArRawData::DataChan::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_273_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_273_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataChan::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_273_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataChan::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_273_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataChan::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_273_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataChan::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataChan", 756, G__DataModelDict_273_0_32, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan), -1, 0, 1, 1, 1, 0, "u 'LArRawData::DataChan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataChan", 882, G__DataModelDict_273_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_273_0_34, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan), -1, 1, 1, 1, 1, 0, "u 'LArRawData::DataChan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRawDatacLcLDataCRM(void) {
   /* LArRawData::DataCRM */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM));
   G__memfunc_setup("DataCRM",604,G__DataModelDict_274_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DataCRM",604,G__DataModelDict_274_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDataChannel",1340,G__DataModelDict_274_0_3, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - iview", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDataChannel",1340,G__DataModelDict_274_0_4, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - iview i - 'Int_t' 0 - chanid "
"i 'LArRawData::Dtype' - 0 - dtype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDataChannel",1340,G__DataModelDict_274_0_5, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - iview i - 'Int_t' 0 - chanid "
"i 'LArRawData::Dtype' - 0 - dtype i 'LArRawData::Code' - 0 - scode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanView0",1125,G__DataModelDict_274_0_6, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChanView1",1126,G__DataModelDict_274_0_7, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChan",666,G__DataModelDict_274_0_8, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataChan), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - iview i - 'Int_t' 0 - at", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNChanView0",1203,G__DataModelDict_274_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNChanView1",1204,G__DataModelDict_274_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMId",687,G__DataModelDict_274_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMId",699,G__DataModelDict_274_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__DataModelDict_274_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_274_0_16, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArRawData::DataCRM::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_274_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataCRM::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_274_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArRawData::DataCRM::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_274_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArRawData::DataCRM::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_274_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_274_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataCRM::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_274_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataCRM::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_274_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataCRM::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_274_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataCRM::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataCRM", 604, G__DataModelDict_274_0_28, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM), -1, 0, 1, 1, 1, 0, "u 'LArRawData::DataCRM' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataCRM", 730, G__DataModelDict_274_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_274_0_30, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM), -1, 1, 1, 1, 1, 0, "u 'LArRawData::DataCRM' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRawDatacLcLDataCRP(void) {
   /* LArRawData::DataCRP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRP));
   G__memfunc_setup("DataCRP",607,G__DataModelDict_275_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRP), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCRM",491,G__DataModelDict_275_0_2, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCRM",491,G__DataModelDict_275_0_3, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - crm_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRM",514,G__DataModelDict_275_0_4, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRM), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - at", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMs",629,G__DataModelDict_275_0_5, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClonesArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumCRM",818,G__DataModelDict_275_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__DataModelDict_275_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_275_0_9, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArRawData::DataCRP::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_275_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataCRP::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_275_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArRawData::DataCRP::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_275_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArRawData::DataCRP::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_275_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_275_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataCRP::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_275_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataCRP::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_275_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataCRP::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_275_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataCRP::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataCRP", 607, G__DataModelDict_275_0_21, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRP), -1, 0, 1, 1, 1, 0, "u 'LArRawData::DataCRP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataCRP", 733, G__DataModelDict_275_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_275_0_23, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataCRP), -1, 1, 1, 1, 1, 0, "u 'LArRawData::DataCRP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArVoxelcLcLVoxelInfo(void) {
   /* LArVoxel::VoxelInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo));
   G__memfunc_setup("VoxelInfo",922,G__DataModelDict_512_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VoxelInfo",922,G__DataModelDict_512_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo), -1, 0, 13, 1, 1, 0, 
"i - - 0 - pid f - - 0 - edep "
"f - - 0 - edepq f - - 0 - xvox "
"f - - 0 - yvox f - - 0 - zvox "
"f - - 0 - tvox f - - 0 - qcrp "
"f - - 0 - xcrp f - - 0 - ycrp "
"f - - 0 - tarr f - - 0 - sigmaL "
"f - - 0 - sigmaT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,G__DataModelDict_512_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPid",573,G__DataModelDict_512_0_5, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdep",670,G__DataModelDict_512_0_6, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEdepQ",751,G__DataModelDict_512_0_7, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXVox",693,G__DataModelDict_512_0_8, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYVox",694,G__DataModelDict_512_0_9, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetZVox",695,G__DataModelDict_512_0_10, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTVox",689,G__DataModelDict_512_0_11, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQCrp",662,G__DataModelDict_512_0_12, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetXCrp",669,G__DataModelDict_512_0_13, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetYCrp",670,G__DataModelDict_512_0_14, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTCrp",665,G__DataModelDict_512_0_15, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaL",861,G__DataModelDict_512_0_16, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSigmaT",869,G__DataModelDict_512_0_17, 102, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_512_0_18, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArVoxel::VoxelInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_512_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArVoxel::VoxelInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_512_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArVoxel::VoxelInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_512_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArVoxel::VoxelInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_512_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_512_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArVoxel::VoxelInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_512_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArVoxel::VoxelInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_512_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArVoxel::VoxelInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_512_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArVoxel::VoxelInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("VoxelInfo", 922, G__DataModelDict_512_0_30, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo), -1, 0, 1, 1, 1, 0, "u 'LArVoxel::VoxelInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~VoxelInfo", 1048, G__DataModelDict_512_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_512_0_32, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo), -1, 1, 1, 1, 1, 0, "u 'LArVoxel::VoxelInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArVoxelcLcLVoxelInfoCRM(void) {
   /* LArVoxel::VoxelInfoCRM */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM));
   G__memfunc_setup("VoxelInfoCRM",1148,G__DataModelDict_513_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("VoxelInfoCRM",1148,G__DataModelDict_513_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM), -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddVoxel",791,G__DataModelDict_513_0_3, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo), -1, 0, 13, 1, 1, 0, 
"i - - 0 - pid f - - 0 - edep "
"f - - 0 - edepq f - - 0 - xvox "
"f - - 0 - yvox f - - 0 - zvox "
"f - - 0 - tvox f - - 0 - qcrp "
"f - - 0 - xcrp f - - 0 - ycrp "
"f - - 0 - tarr f - - 0 - sigmaL "
"f - - 0 - sigmaT", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVoxels",929,G__DataModelDict_513_0_4, 85, G__get_linked_tagnum(&G__DataModelDictLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRMId",687,G__DataModelDict_513_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNVoxels",1007,G__DataModelDict_513_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRMId",699,G__DataModelDict_513_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__DataModelDict_513_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__DataModelDict_513_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_513_0_11, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArVoxel::VoxelInfoCRM::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_513_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArVoxel::VoxelInfoCRM::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_513_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArVoxel::VoxelInfoCRM::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_513_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArVoxel::VoxelInfoCRM::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_513_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_513_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArVoxel::VoxelInfoCRM::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_513_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArVoxel::VoxelInfoCRM::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_513_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArVoxel::VoxelInfoCRM::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_513_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArVoxel::VoxelInfoCRM::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("VoxelInfoCRM", 1148, G__DataModelDict_513_0_23, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM), -1, 0, 1, 1, 1, 0, "u 'LArVoxel::VoxelInfoCRM' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~VoxelInfoCRM", 1274, G__DataModelDict_513_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_513_0_25, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM), -1, 1, 1, 1, 1, 0, "u 'LArVoxel::VoxelInfoCRM' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArVoxelcLcLVoxelInfoCRP(void) {
   /* LArVoxel::VoxelInfoCRP */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP));
   G__memfunc_setup("VoxelInfoCRP",1151,G__DataModelDict_514_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCRM",491,G__DataModelDict_514_0_2, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddCRM",491,G__DataModelDict_514_0_3, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - crm_id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVoxelCRMs",1155,G__DataModelDict_514_0_4, 85, G__get_linked_tagnum(&G__DataModelDictLN_TObjArray), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumCRM",818,G__DataModelDict_514_0_5, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__DataModelDict_514_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__DataModelDict_514_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_514_0_9, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArVoxel::VoxelInfoCRP::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_514_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArVoxel::VoxelInfoCRP::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_514_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArVoxel::VoxelInfoCRP::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_514_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArVoxel::VoxelInfoCRP::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_514_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_514_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArVoxel::VoxelInfoCRP::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_514_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArVoxel::VoxelInfoCRP::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_514_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArVoxel::VoxelInfoCRP::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_514_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArVoxel::VoxelInfoCRP::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("VoxelInfoCRP", 1151, G__DataModelDict_514_0_21, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP), -1, 0, 1, 1, 1, 0, "u 'LArVoxel::VoxelInfoCRP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~VoxelInfoCRP", 1277, G__DataModelDict_514_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_514_0_23, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP), -1, 1, 1, 1, 1, 0, "u 'LArVoxel::VoxelInfoCRP' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRecocLcLRecoObjLink(void) {
   /* LArReco::RecoObjLink */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink));
   G__memfunc_setup("RecoObjLink",1074,G__DataModelDict_518_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecoObjLink",1074,G__DataModelDict_518_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), -1, 0, 2, 1, 1, 0, 
"i 'LArReco::RecoObj_t' - 0 - objtype i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsTransient",1140,G__DataModelDict_518_0_3, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__DataModelDict_518_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_518_0_5, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArReco::RecoObjLink::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_518_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::RecoObjLink::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_518_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArReco::RecoObjLink::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_518_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArReco::RecoObjLink::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_518_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_518_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::RecoObjLink::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_518_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArReco::RecoObjLink::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_518_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::RecoObjLink::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_518_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArReco::RecoObjLink::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RecoObjLink", 1074, G__DataModelDict_518_0_17, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), -1, 0, 1, 1, 1, 0, "u 'LArReco::RecoObjLink' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RecoObjLink", 1200, G__DataModelDict_518_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_518_0_19, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), -1, 1, 1, 1, 1, 0, "u 'LArReco::RecoObjLink' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRecocLcLRecoObject(void) {
   /* LArReco::RecoObject */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObject));
   G__memfunc_setup("clone",529,G__DataModelDict_519_0_1, 85, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObject), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetObjIndex",1087,G__DataModelDict_519_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetView",711,G__DataModelDict_519_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i 'View_t' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjType",989,G__DataModelDict_519_0_4, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObj_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetView",699,G__DataModelDict_519_0_5, 105, G__get_linked_tagnum(&G__DataModelDictLN_View_t), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetObjIndex",1075,G__DataModelDict_519_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRecoObjLink",1362,G__DataModelDict_519_0_7, 117, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintNodeInfo",1311,G__DataModelDict_519_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearUplinks",1229,G__DataModelDict_519_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearDownlinks",1440,G__DataModelDict_519_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNUplinks",1108,G__DataModelDict_519_0_11, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNDownlinks",1319,G__DataModelDict_519_0_12, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LinkToUpperNode",1507,G__DataModelDict_519_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'LArReco::RecoObjLink' - 11 - ref", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("LinkToLowerNode",1504,G__DataModelDict_519_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'LArReco::RecoObjLink' - 11 - ref", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetUpNodes",990,G__DataModelDict_519_0_15, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR), G__defined_typename("vector<LArReco::RecoObjLink>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDownNodes",1201,G__DataModelDict_519_0_16, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR), G__defined_typename("vector<LArReco::RecoObjLink>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckUplinkPolicy",1729,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 2, 0, "u 'LArReco::RecoObjLink' - 11 - ref", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CheckDnlinkPolicy",1710,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 2, 0, "u 'LArReco::RecoObjLink' - 11 - ref", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("UplinkExists",1267,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 2, 0, "u 'LArReco::RecoObjLink' - 1 - ref", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DnlinkExists",1248,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 2, 0, "u 'LArReco::RecoObjLink' - 1 - ref", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__DataModelDict_519_0_21, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArReco::RecoObject::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_519_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::RecoObject::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_519_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArReco::RecoObject::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_519_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArReco::RecoObject::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_519_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_519_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::RecoObject::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_519_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArReco::RecoObject::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_519_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::RecoObject::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_519_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArReco::RecoObject::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~RecoObject", 1118, G__DataModelDict_519_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_519_0_34, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObject), -1, 1, 1, 1, 1, 0, "u 'LArReco::RecoObject' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR(void) {
   /* vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR));
   G__memfunc_setup("at",213,G__DataModelDict_521_0_1, 117, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), G__defined_typename("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataModelDict_521_0_2, 117, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), G__defined_typename("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataModelDict_521_0_3, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataModelDict_521_0_4, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataModelDict_521_0_5, 117, G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiteratorgR), G__defined_typename("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataModelDict_521_0_6, 117, G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiteratorgR), G__defined_typename("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataModelDict_521_0_7, 107, -1, G__defined_typename("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataModelDict_521_0_8, 107, -1, G__defined_typename("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataModelDict_521_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataModelDict_521_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type' 0 - sz u 'LArReco::RecoObjLink' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataModelDict_521_0_11, 107, -1, G__defined_typename("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataModelDict_521_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataModelDict_521_0_13, 117, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), G__defined_typename("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataModelDict_521_0_14, 117, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), G__defined_typename("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >",5616,G__DataModelDict_521_0_15, 105, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >",5616,G__DataModelDict_521_0_16, 105, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type' 0 - n u 'LArReco::RecoObjLink' - 11 'LArReco::RecoObjLink()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >",5616,G__DataModelDict_521_0_17, 105, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >",5616,G__DataModelDict_521_0_18, 105, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator' 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_iterator' 10 - first u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator' 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataModelDict_521_0_19, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataModelDict_521_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataModelDict_521_0_21, 117, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataModelDict_521_0_22, 117, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLRecoObjLink), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataModelDict_521_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'LArReco::RecoObjLink' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataModelDict_521_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataModelDict_521_0_25, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator' - 0 - position u 'LArReco::RecoObjLink' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataModelDict_521_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator' - 0 - position u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator' 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_iterator' 10 - first "
"u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator' 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataModelDict_521_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator' - 0 - position k - 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::size_type' 0 - n "
"u 'LArReco::RecoObjLink' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataModelDict_521_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataModelDict_521_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataModelDict_521_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator' - 0 - first u 'vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataModelDict_521_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >", 5742, G__DataModelDict_521_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRecocLcLQHit(void) {
   /* LArReco::QHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit));
   G__memfunc_setup("QHit",374,G__DataModelDict_524_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QHit",374,G__DataModelDict_524_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - crmid i - 'Int_t' 0 - iview "
"i - 'Int_t' 0 - chnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("QHit",374,G__DataModelDict_524_0_3, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit), -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - crmid i - 'Int_t' 0 - iview "
"i - 'Int_t' 0 - chnum h - 'UInt_t' 0 - tstart "
"h - 'UInt_t' 0 - tend h - 'UInt_t' 0 - tmax "
"d - 'Double_t' 0 - qmax d - 'Double_t' 0 - qtot", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShiftHitTb",985,G__DataModelDict_524_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - t0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRM",526,G__DataModelDict_524_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetView",711,G__DataModelDict_524_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCh",471,G__DataModelDict_524_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTbStart",1008,G__DataModelDict_524_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTbEnd",761,G__DataModelDict_524_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTbMax",776,G__DataModelDict_524_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQ",381,G__DataModelDict_524_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAmplitude",1233,G__DataModelDict_524_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitIndex",1097,G__DataModelDict_524_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitMCCharge",1323,G__DataModelDict_524_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - MCQ", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetT",384,G__DataModelDict_524_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__DataModelDict_524_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetD",368,G__DataModelDict_524_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRM",514,G__DataModelDict_524_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetView",699,G__DataModelDict_524_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCh",459,G__DataModelDict_524_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTbStart",996,G__DataModelDict_524_0_22, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTbEnd",749,G__DataModelDict_524_0_23, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTbMax",764,G__DataModelDict_524_0_24, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAmplitude",1221,G__DataModelDict_524_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQ",369,G__DataModelDict_524_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQTotMC",824,G__DataModelDict_524_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitIndex",1085,G__DataModelDict_524_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitMCCharge",1311,G__DataModelDict_524_0_29, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT",372,G__DataModelDict_524_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX",376,G__DataModelDict_524_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetD",356,G__DataModelDict_524_0_32, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsHitValid",977,G__DataModelDict_524_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ValidateHitParam",1600,G__DataModelDict_524_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__DataModelDict_524_0_35, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__DataModelDict_524_0_36, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckUplinkPolicy",1729,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'LArReco::RecoObjLink' - 1 - ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckDnlinkPolicy",1710,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "u 'LArReco::RecoObjLink' - 1 - ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_524_0_39, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArReco::QHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_524_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::QHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_524_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArReco::QHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_524_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArReco::QHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_524_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_524_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::QHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_524_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArReco::QHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_524_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::QHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_524_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArReco::QHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("QHit", 374, G__DataModelDict_524_0_51, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit), -1, 0, 1, 1, 1, 0, "u 'LArReco::QHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~QHit", 500, G__DataModelDict_524_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_524_0_53, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLQHit), -1, 1, 1, 1, 1, 0, "u 'LArReco::QHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRecocLcLCluster2d(void) {
   /* LArReco::Cluster2d */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d));
   G__memfunc_setup("Cluster2d",888,G__DataModelDict_525_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cluster2d",888,G__DataModelDict_525_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d), -1, 0, 1, 1, 1, 0, "u 'vector<const LArReco::QHit*,allocator<const LArReco::QHit*> >' 'vector<const LArReco::QHit*>' 1 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cluster2d",888,G__DataModelDict_525_0_3, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d), -1, 0, 3, 1, 1, 0, 
"u 'TVector2' - 1 - start u 'TVector2' - 1 - end "
"u 'vector<const LArReco::QHit*,allocator<const LArReco::QHit*> >' 'vector<const LArReco::QHit*>' 1 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetQ",369,G__DataModelDict_525_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "fC", (void*) NULL, 0);
   G__memfunc_setup("GetSlope",803,G__DataModelDict_525_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetT0",420,G__DataModelDict_525_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStart",814,G__DataModelDict_525_0_8, 117, G__get_linked_tagnum(&G__DataModelDictLN_TVector2), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEnd",567,G__DataModelDict_525_0_9, 117, G__get_linked_tagnum(&G__DataModelDictLN_TVector2), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetT0",432,G__DataModelDict_525_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddHit",558,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'LArReco::QHit' - 10 - hit", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'vector<const LArReco::QHit*,allocator<const LArReco::QHit*> >' 'vector<const LArReco::QHit*>' 1 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_525_0_13, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArReco::Cluster2d::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_525_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::Cluster2d::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_525_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArReco::Cluster2d::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_525_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArReco::Cluster2d::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_525_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_525_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::Cluster2d::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_525_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArReco::Cluster2d::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_525_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::Cluster2d::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_525_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArReco::Cluster2d::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Cluster2d", 888, G__DataModelDict_525_0_25, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d), -1, 0, 1, 1, 1, 0, "u 'LArReco::Cluster2d' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Cluster2d", 1014, G__DataModelDict_525_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_525_0_27, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLCluster2d), -1, 1, 1, 1, 1, 0, "u 'LArReco::Cluster2d' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRecocLcLTrack2d(void) {
   /* LArReco::Track2d */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d));
   G__memfunc_setup("Track2d",651,G__DataModelDict_530_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Track2d",651,G__DataModelDict_530_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d), -1, 0, 1, 1, 1, 0, "u 'vector<const LArReco::QHit*,allocator<const LArReco::QHit*> >' 'vector<const LArReco::QHit*>' 1 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Track2d",651,G__DataModelDict_530_0_3, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d), -1, 0, 3, 1, 1, 0, 
"u 'vector<TVector2,allocator<TVector2> >' 'vector<TVector2>' 1 - xz u 'vector<double,allocator<double> >' 'vector<double>' 0 - dqdx "
"u 'vector<const LArReco::QHit*,allocator<const LArReco::QHit*> >' 'vector<const LArReco::QHit*>' 1 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clone",529,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetPid",585,G__DataModelDict_530_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__DataModelDict_530_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCRM",526,G__DataModelDict_530_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlopeInit",1219,G__DataModelDict_530_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val d - 'Double_t' 0 - valerr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlopeFinal",1305,G__DataModelDict_530_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val d - 'Double_t' 0 - valerr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlopeInit",1219,G__DataModelDict_530_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSlopeFinal",1305,G__DataModelDict_530_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChi2",626,G__DataModelDict_530_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetStartErrors",1463,G__DataModelDict_530_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - errPos d - 'Double_t' 0 - errTan "
"d - 'Double_t' 0 - rho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEndErrors",1216,G__DataModelDict_530_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - errPos d - 'Double_t' 0 - errTan "
"d - 'Double_t' 0 - rho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDeltaRays",1170,G__DataModelDict_530_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<const LArReco::QHit*,allocator<const LArReco::QHit*> >' 'vector<const LArReco::QHit*>' 1 - drays", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCRM",514,G__DataModelDict_530_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPid",573,G__DataModelDict_530_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNpts",709,G__DataModelDict_530_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__DataModelDict_530_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChi2",614,G__DataModelDict_530_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlopeInit",1207,G__DataModelDict_530_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlopeInitErr",1504,G__DataModelDict_530_0_22, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlopeFinal",1293,G__DataModelDict_530_0_23, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSlopeFinalErr",1590,G__DataModelDict_530_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistInitErr",1393,G__DataModelDict_530_0_25, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDistFinalErr",1479,G__DataModelDict_530_0_26, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrCoeffInit",1581,G__DataModelDict_530_0_27, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCorrCoeffFinal",1667,G__DataModelDict_530_0_28, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLength",898,G__DataModelDict_530_0_29, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPath",685,G__DataModelDict_530_0_30, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR), G__defined_typename("vector<TVector2>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDQ",437,G__DataModelDict_530_0_31, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHits",696,G__DataModelDict_530_0_32, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR), G__defined_typename("vector<LArReco::RecoObjLink>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDRays",771,G__DataModelDict_530_0_33, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR), G__defined_typename("vector<LArReco::RecoObjLink>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__DataModelDict_530_0_34, 117, G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d), -1, 1, 1, 1, 1, 0, "u 'LArReco::Track2d' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__DataModelDict_530_0_35, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetDefaults",1124,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'vector<const LArReco::QHit*,allocator<const LArReco::QHit*> >' 'vector<const LArReco::QHit*>' 1 - hits", ", bool buildpath );", (void*) NULL, 0);
   G__memfunc_setup("MakePath",779,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'vector<const LArReco::QHit*,allocator<const LArReco::QHit*> >' 'vector<const LArReco::QHit*>' 1 - hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_530_0_39, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArReco::Track2d::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_530_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::Track2d::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_530_0_41, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArReco::Track2d::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_530_0_42, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArReco::Track2d::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_530_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_530_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::Track2d::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_530_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArReco::Track2d::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_530_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArReco::Track2d::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_530_0_50, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArReco::Track2d::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Track2d", 651, G__DataModelDict_530_0_51, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d), -1, 0, 1, 1, 1, 0, "u 'LArReco::Track2d' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Track2d", 777, G__DataModelDict_530_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_530_0_53, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArRecocLcLTrack2d), -1, 1, 1, 1, 1, 0, "u 'LArReco::Track2d' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncvectorlETVector2cOallocatorlETVector2gRsPgR(void) {
   /* vector<TVector2,allocator<TVector2> > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR));
   G__memfunc_setup("at",213,G__DataModelDict_532_0_1, 117, G__get_linked_tagnum(&G__DataModelDictLN_TVector2), G__defined_typename("vector<TVector2,allocator<TVector2> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TVector2,allocator<TVector2> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("at",213,G__DataModelDict_532_0_2, 117, G__get_linked_tagnum(&G__DataModelDictLN_TVector2), G__defined_typename("vector<TVector2,allocator<TVector2> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TVector2,allocator<TVector2> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataModelDict_532_0_3, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataModelDict_532_0_4, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataModelDict_532_0_5, 117, G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR), G__defined_typename("vector<TVector2,allocator<TVector2> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataModelDict_532_0_6, 117, G__get_linked_tagnum(&G__DataModelDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR), G__defined_typename("vector<TVector2,allocator<TVector2> >::reverse_iterator"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataModelDict_532_0_7, 107, -1, G__defined_typename("vector<TVector2,allocator<TVector2> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataModelDict_532_0_8, 107, -1, G__defined_typename("vector<TVector2,allocator<TVector2> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataModelDict_532_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TVector2,allocator<TVector2> >::size_type' 0 - sz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resize",658,G__DataModelDict_532_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'vector<TVector2,allocator<TVector2> >::size_type' 0 - sz u 'TVector2' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("capacity",846,G__DataModelDict_532_0_11, 107, -1, G__defined_typename("vector<TVector2,allocator<TVector2> >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataModelDict_532_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataModelDict_532_0_13, 117, G__get_linked_tagnum(&G__DataModelDictLN_TVector2), G__defined_typename("vector<TVector2,allocator<TVector2> >::reference"), 1, 1, 1, 1, 0, "k - 'vector<TVector2,allocator<TVector2> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataModelDict_532_0_14, 117, G__get_linked_tagnum(&G__DataModelDictLN_TVector2), G__defined_typename("vector<TVector2,allocator<TVector2> >::const_reference"), 1, 1, 1, 1, 8, "k - 'vector<TVector2,allocator<TVector2> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector2,allocator<TVector2> >",3462,G__DataModelDict_532_0_15, 105, G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector2,allocator<TVector2> >",3462,G__DataModelDict_532_0_16, 105, G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR), -1, 0, 2, 1, 1, 0, 
"k - 'vector<TVector2,allocator<TVector2> >::size_type' 0 - n u 'TVector2' - 11 'TVector2()' value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector2,allocator<TVector2> >",3462,G__DataModelDict_532_0_17, 105, G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR), -1, 0, 1, 1, 1, 0, "u 'vector<TVector2,allocator<TVector2> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("vector<TVector2,allocator<TVector2> >",3462,G__DataModelDict_532_0_18, 105, G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'vector<TVector2,allocator<TVector2> >::iterator' 'vector<TVector2,allocator<TVector2> >::const_iterator' 10 - first u 'vector<TVector2,allocator<TVector2> >::iterator' 'vector<TVector2,allocator<TVector2> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataModelDict_532_0_19, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR), -1, 1, 1, 1, 1, 0, "u 'vector<TVector2,allocator<TVector2> >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reserve",764,G__DataModelDict_532_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "k - 'vector<TVector2,allocator<TVector2> >::size_type' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("front",553,G__DataModelDict_532_0_21, 117, G__get_linked_tagnum(&G__DataModelDictLN_TVector2), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("back",401,G__DataModelDict_532_0_22, 117, G__get_linked_tagnum(&G__DataModelDictLN_TVector2), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("push_back",944,G__DataModelDict_532_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TVector2' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataModelDict_532_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TVector2,allocator<TVector2> >' - 1 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataModelDict_532_0_25, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'vector<TVector2,allocator<TVector2> >::iterator' - 0 - position u 'TVector2' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataModelDict_532_0_26, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TVector2,allocator<TVector2> >::iterator' - 0 - position u 'vector<TVector2,allocator<TVector2> >::iterator' 'vector<TVector2,allocator<TVector2> >::const_iterator' 10 - first "
"u 'vector<TVector2,allocator<TVector2> >::iterator' 'vector<TVector2,allocator<TVector2> >::const_iterator' 10 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataModelDict_532_0_27, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'vector<TVector2,allocator<TVector2> >::iterator' - 0 - position k - 'vector<TVector2,allocator<TVector2> >::size_type' 0 - n "
"u 'TVector2' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pop_back",831,G__DataModelDict_532_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataModelDict_532_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'vector<TVector2,allocator<TVector2> >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataModelDict_532_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'vector<TVector2,allocator<TVector2> >::iterator' - 0 - first u 'vector<TVector2,allocator<TVector2> >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataModelDict_532_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~vector<TVector2,allocator<TVector2> >", 3588, G__DataModelDict_532_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncRecoConfig(void) {
   /* RecoConfig */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig));
   G__memfunc_setup("RecoConfig",991,G__DataModelDict_535_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RecoConfig",991,G__DataModelDict_535_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - taskname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRunTime",1008,G__DataModelDict_535_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTaskName",1088,G__DataModelDict_535_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAlgoName",1072,G__DataModelDict_535_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInFileName",1252,G__DataModelDict_535_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRunTime",996,G__DataModelDict_535_0_7, 104, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTaskName",1076,G__DataModelDict_535_0_8, 117, G__get_linked_tagnum(&G__DataModelDictLN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAlgoName",1060,G__DataModelDict_535_0_9, 117, G__get_linked_tagnum(&G__DataModelDictLN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInFileName",1240,G__DataModelDict_535_0_10, 117, G__get_linked_tagnum(&G__DataModelDictLN_string), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__DataModelDict_535_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddValue",774,G__DataModelDict_535_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - key u 'vector<float,allocator<float> >' 'vector<float>' 1 - value", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetValue",797,G__DataModelDict_535_0_13, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<float>"), 0, 1, 1, 1, 0, "u 'string' - 0 - key", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_535_0_14, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&RecoConfig::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_535_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecoConfig::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_535_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&RecoConfig::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_535_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&RecoConfig::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_535_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_535_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecoConfig::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_535_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecoConfig::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_535_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&RecoConfig::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_535_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&RecoConfig::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("RecoConfig", 991, G__DataModelDict_535_0_26, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig), -1, 0, 1, 1, 1, 0, "u 'RecoConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~RecoConfig", 1117, G__DataModelDict_535_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_535_0_28, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_RecoConfig), -1, 1, 1, 1, 1, 0, "u 'RecoConfig' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR(void) {
   /* map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > > */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR));
   G__memfunc_setup("map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >",11494,G__DataModelDict_538_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >",11494,G__DataModelDict_538_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator' - 0 - first u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >",11494,G__DataModelDict_538_0_3, 105, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - first u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >",11494,G__DataModelDict_538_0_4, 105, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 0, 1, 1, 1, 0, "u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataModelDict_538_0_5, 117, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR), -1, 1, 1, 1, 1, 0, "u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__DataModelDict_538_0_6, 117, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__DataModelDict_538_0_7, 117, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rbegin",631,G__DataModelDict_538_0_8, 117, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("rend",425,G__DataModelDict_538_0_9, 117, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("empty",559,G__DataModelDict_538_0_10, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__DataModelDict_538_0_11, 107, -1, G__defined_typename("map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("max_size",864,G__DataModelDict_538_0_12, 107, -1, G__defined_typename("map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::size_type"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__DataModelDict_538_0_13, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), -1, 1, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataModelDict_538_0_14, 117, G__get_linked_tagnum(&G__DataModelDictLN_pairlEmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR), -1, 0, 1, 1, 1, 0, "u 'pair<string,vector<float,allocator<float> > >' 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataModelDict_538_0_15, 117, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator' - 0 - position u 'pair<string,vector<float,allocator<float> > >' 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::value_type' 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataModelDict_538_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator' - 0 - first u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("insert",661,G__DataModelDict_538_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - first u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataModelDict_538_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator' - 0 - position", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataModelDict_538_0_19, 107, -1, G__defined_typename("map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::size_type"), 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("erase",528,G__DataModelDict_538_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator' - 0 - first u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator' - 0 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("swap",443,G__DataModelDict_538_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__DataModelDict_538_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__DataModelDict_538_0_23, 117, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,G__DataModelDict_538_0_24, 107, -1, G__defined_typename("map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::size_type"), 0, 1, 1, 1, 8, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__DataModelDict_538_0_25, 117, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__DataModelDict_538_0_26, 117, G__get_linked_tagnum(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator), -1, 0, 1, 1, 1, 0, "u 'string' - 11 - x", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >", 11620, G__DataModelDict_538_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHitReco(void) {
   /* HitReco */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_HitReco));
   G__memfunc_setup("HitReco",686,G__DataModelDict_543_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_HitReco), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DumpHitReco",1092,G__DataModelDict_543_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHITRecRunTime",1507,G__DataModelDict_543_0_3, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHITRecInFlname",1577,G__DataModelDict_543_0_4, 117, G__get_linked_tagnum(&G__DataModelDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHITRecFNum",1173,G__DataModelDict_543_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHITRecINum",1176,G__DataModelDict_543_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHITRecSNum",1186,G__DataModelDict_543_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHITRecF",869,G__DataModelDict_543_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHITRecI",872,G__DataModelDict_543_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHITRecS",882,G__DataModelDict_543_0_10, 117, G__get_linked_tagnum(&G__DataModelDictLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHITRecTime",1210,G__DataModelDict_543_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - RunTime", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHITRecInFlname",1589,G__DataModelDict_543_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - finname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHITRecFNum",1185,G__DataModelDict_543_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - HITFNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHITRecINum",1188,G__DataModelDict_543_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - HITINum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHITRecSNum",1198,G__DataModelDict_543_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - HITSNum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHITRecF",881,G__DataModelDict_543_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i f - 'Float_t' 0 - HitF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHITRecI",884,G__DataModelDict_543_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i i - 'Int_t' 0 - HitI", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHITRecS",894,G__DataModelDict_543_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - - 0 - i u 'string' - 0 - HitS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckHitFNum",1145,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - fnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckHitINum",1148,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - inum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CheckHitSNum",1158,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - - 0 - snum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_543_0_22, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HitReco::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_543_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitReco::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_543_0_24, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HitReco::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_543_0_25, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HitReco::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__DataModelDict_543_0_26, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__DataModelDict_543_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__DataModelDict_543_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_543_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_543_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitReco::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_543_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HitReco::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_543_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HitReco::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_543_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HitReco::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HitReco", 686, G__DataModelDict_543_0_34, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_HitReco), -1, 0, 1, 1, 1, 0, "u 'HitReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HitReco", 812, G__DataModelDict_543_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_543_0_36, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_HitReco), -1, 1, 1, 1, 1, 0, "u 'HitReco' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRawDatacLcLDataLRO(void) {
   /* LArRawData::DataLRO */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataLRO));
   G__memfunc_setup("DataLRO",615,G__DataModelDict_572_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataLRO), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reset",515,G__DataModelDict_572_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_572_0_4, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArRawData::DataLRO::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_572_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataLRO::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_572_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArRawData::DataLRO::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_572_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArRawData::DataLRO::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_572_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_572_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataLRO::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_572_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataLRO::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_572_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataLRO::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_572_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataLRO::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~DataLRO", 741, G__DataModelDict_572_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArMCTruthcLcLChanTrueQ(void) {
   /* LArMCTruth::ChanTrueQ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ));
   G__memfunc_setup("ChanTrueQ",875,G__DataModelDict_574_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ChanTrueQ",875,G__DataModelDict_574_0_2, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__DataModelDict_574_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetChan",678,G__DataModelDict_574_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__DataModelDict_574_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - tstart u 'vector<float,allocator<float> >' 'vector<Float_t>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddData",643,G__DataModelDict_574_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - at u 'vector<float,allocator<float> >' 'vector<Float_t>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDatum",772,G__DataModelDict_574_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - at f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQ",369,G__DataModelDict_574_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChan",666,G__DataModelDict_574_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTstart",930,G__DataModelDict_574_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTend",683,G__DataModelDict_574_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__DataModelDict_574_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__DataModelDict_574_0_13, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR), G__defined_typename("vector<Float_t>"), 1, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Reset",515,G__DataModelDict_574_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SumCharge",895,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_574_0_16, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArMCTruth::ChanTrueQ::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_574_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArMCTruth::ChanTrueQ::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_574_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArMCTruth::ChanTrueQ::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_574_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArMCTruth::ChanTrueQ::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_574_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_574_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArMCTruth::ChanTrueQ::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_574_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArMCTruth::ChanTrueQ::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_574_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArMCTruth::ChanTrueQ::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_574_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArMCTruth::ChanTrueQ::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("ChanTrueQ", 875, G__DataModelDict_574_0_28, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ), -1, 0, 1, 1, 1, 0, "u 'LArMCTruth::ChanTrueQ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ChanTrueQ", 1001, G__DataModelDict_574_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_574_0_30, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ), -1, 1, 1, 1, 1, 0, "u 'LArMCTruth::ChanTrueQ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArMCTruthcLcLAnodeTrueQ(void) {
   /* LArMCTruth::AnodeTrueQ */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ));
   G__memfunc_setup("AnodeTrueQ",984,G__DataModelDict_575_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__DataModelDict_575_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__DataModelDict_575_0_3, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__DataModelDict_575_0_4, 117, G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ), -1, 1, 1, 1, 1, 0, "u 'LArMCTruth::AnodeTrueQ' - 11 - rhs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQView0",828,G__DataModelDict_575_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetQView1",829,G__DataModelDict_575_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNChView0",996,G__DataModelDict_575_0_7, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNChView1",997,G__DataModelDict_575_0_8, 107, -1, G__defined_typename("size_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsValid",684,G__DataModelDict_575_0_9, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddChanData",1021,G__DataModelDict_575_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'LArMCTruth::ChanTrueQ' - 1 - ChQ i - - 0 - iView", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("View0",459,G__DataModelDict_575_0_11, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgR), G__defined_typename("vector<LArMCTruth::ChanTrueQ*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("View1",460,G__DataModelDict_575_0_12, 117, G__get_linked_tagnum(&G__DataModelDictLN_vectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgR), G__defined_typename("vector<LArMCTruth::ChanTrueQ*>"), 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_575_0_13, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArMCTruth::AnodeTrueQ::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_575_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArMCTruth::AnodeTrueQ::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_575_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArMCTruth::AnodeTrueQ::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_575_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArMCTruth::AnodeTrueQ::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_575_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_575_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArMCTruth::AnodeTrueQ::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_575_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArMCTruth::AnodeTrueQ::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_575_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArMCTruth::AnodeTrueQ::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_575_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArMCTruth::AnodeTrueQ::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("AnodeTrueQ", 984, G__DataModelDict_575_0_25, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ), -1, 0, 1, 1, 1, 0, "u 'LArMCTruth::AnodeTrueQ' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~AnodeTrueQ", 1110, G__DataModelDict_575_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRawDatacLcLDataFragmentlEfloatgR(void) {
   /* LArRawData::DataFragment<float> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR));
   G__memfunc_setup("DataFragment<float>",1854,G__DataModelDict_580_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitFragment",1224,G__DataModelDict_580_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - fstart h - 'UInt_t' 0 - fsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDatum",772,G__DataModelDict_580_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - at f - - 0 - val "
"g - 'Bool_t' 0 - overwrite", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddData",643,G__DataModelDict_580_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - at u 'vector<float,allocator<float> >' 'vector<float>' 0 - data "
"g - 'Bool_t' 0 - overwrite", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDatum",795,G__DataModelDict_580_0_5, 102, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - at", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__DataModelDict_580_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataFloat",1168,G__DataModelDict_580_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__DataModelDict_580_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - fstart u 'vector<float,allocator<float> >' 'vector<float>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFragStart",1198,G__DataModelDict_580_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFragEnd",951,G__DataModelDict_580_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFragSize",1083,G__DataModelDict_580_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_580_0_13, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArRawData::DataFragment<float>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_580_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataFragment<float>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_580_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArRawData::DataFragment<float>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_580_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArRawData::DataFragment<float>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_580_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_580_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataFragment<float>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_580_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataFragment<float>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_580_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataFragment<float>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_580_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataFragment<float>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataFragment<float>", 1854, G__DataModelDict_580_0_25, (int) ('i'), G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR), -1, 0, 1, 1, 1, 0, "u 'LArRawData::DataFragment<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataFragment<float>", 1980, G__DataModelDict_580_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_580_0_27, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR), -1, 1, 1, 1, 1, 0, "u 'LArRawData::DataFragment<float>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncLArRawDatacLcLDataFragmentlEunsignedsPshortgR(void) {
   /* LArRawData::DataFragment<unsigned short> */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR));
   G__memfunc_setup("DataFragment<unsigned short>",2773,G__DataModelDict_581_0_1, 105, G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitFragment",1224,G__DataModelDict_581_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - fstart h - 'UInt_t' 0 - fsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddDatum",772,G__DataModelDict_581_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - at r - - 0 - val "
"g - 'Bool_t' 0 - overwrite", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddData",643,G__DataModelDict_581_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - at u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 0 - data "
"g - 'Bool_t' 0 - overwrite", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDatum",795,G__DataModelDict_581_0_5, 114, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - at", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__DataModelDict_581_0_6, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDataFloat",1168,G__DataModelDict_581_0_7, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "u 'vector<float,allocator<float> >' 'vector<float>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__DataModelDict_581_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - fstart u 'vector<unsigned short,allocator<unsigned short> >' 'vector<unsigned short>' 1 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFragStart",1198,G__DataModelDict_581_0_10, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFragEnd",951,G__DataModelDict_581_0_11, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFragSize",1083,G__DataModelDict_581_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__DataModelDict_581_0_13, 85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&LArRawData::DataFragment<unsigned short>::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__DataModelDict_581_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataFragment<unsigned short>::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__DataModelDict_581_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&LArRawData::DataFragment<unsigned short>::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__DataModelDict_581_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&LArRawData::DataFragment<unsigned short>::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__DataModelDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__DataModelDict_581_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__DataModelDict_581_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataFragment<unsigned short>::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__DataModelDict_581_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataFragment<unsigned short>::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__DataModelDict_581_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&LArRawData::DataFragment<unsigned short>::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__DataModelDict_581_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&LArRawData::DataFragment<unsigned short>::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("DataFragment<unsigned short>", 2773, G__DataModelDict_581_0_25, (int) ('i'), 
G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR), -1, 0, 1, 1, 1, 0, "u 'LArRawData::DataFragment<unsigned short>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DataFragment<unsigned short>", 2899, G__DataModelDict_581_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__DataModelDict_581_0_27, (int) ('u'), G__get_linked_tagnum(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR), -1, 1, 1, 1, 1, 0, "u 'LArRawData::DataFragment<unsigned short>' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncDataModelDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalDataModelDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcDataModelDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__DataModelDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR = { "vector<unsigned short,allocator<unsigned short> >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR = { "vector<float,allocator<float> >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__DataModelDictLN_RunHeader = { "RunHeader" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_timespec = { "timespec" , 115 , -1 };
G__linked_taginfo G__DataModelDictLN_TTimeStamp = { "TTimeStamp" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TVector2 = { "TVector2" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_TParticle = { "TParticle" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_EventHeader = { "EventHeader" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_BeamInfo = { "BeamInfo" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_GeomConfig = { "GeomConfig" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRawData = { "LArRawData" , 110 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRawDatacLcLCode = { "LArRawData::Code" , 101 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRawDatacLcLDtype = { "LArRawData::Dtype" , 101 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRawDatacLcLDataChan = { "LArRawData::DataChan" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRawDatacLcLDataCRM = { "LArRawData::DataCRM" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRawDatacLcLDataCRP = { "LArRawData::DataCRP" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_lesslEstringgR = { "less<string>" , 115 , -1 };
G__linked_taginfo G__DataModelDictLN_LArVoxel = { "LArVoxel" , 110 , -1 };
G__linked_taginfo G__DataModelDictLN_LArVoxelcLcLVoxelInfo = { "LArVoxel::VoxelInfo" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM = { "LArVoxel::VoxelInfoCRM" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP = { "LArVoxel::VoxelInfoCRP" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_View_t = { "View_t" , 101 , -1 };
G__linked_taginfo G__DataModelDictLN_LArReco = { "LArReco" , 110 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRecocLcLRecoObj_t = { "LArReco::RecoObj_t" , 101 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRecocLcLRecoObjLink = { "LArReco::RecoObjLink" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRecocLcLRecoObject = { "LArReco::RecoObject" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR = { "vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiterator = { "vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_reverse_iteratorlEvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRecocLcLQHit = { "LArReco::QHit" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRecocLcLCluster2d = { "LArReco::Cluster2d" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgR = { "vector<const LArReco::QHit*,allocator<const LArReco::QHit*> >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_reverse_iteratorlEvectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<const LArReco::QHit*,allocator<const LArReco::QHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRecocLcLTrack2d = { "LArReco::Track2d" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR = { "vector<TVector2,allocator<TVector2> >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgRcLcLiterator = { "vector<TVector2,allocator<TVector2> >::iterator" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVector2,allocator<TVector2> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_RecoConfig = { "RecoConfig" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_allocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR = { "allocator<pair<const string,vector<float,allocator<float> > > >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR = { "map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_pairlEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR = { "pair<string,vector<float,allocator<float> > >" , 115 , -1 };
G__linked_taginfo G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator = { "map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::reverse_iterator" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_pairlEmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR = { "pair<map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >::iterator,bool>" , 115 , -1 };
G__linked_taginfo G__DataModelDictLN_HitReco = { "HitReco" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRawDatacLcLDataLRO = { "LArRawData::DataLRO" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArMCTruth = { "LArMCTruth" , 110 , -1 };
G__linked_taginfo G__DataModelDictLN_LArMCTruthcLcLChanTrueQ = { "LArMCTruth::ChanTrueQ" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ = { "LArMCTruth::AnodeTrueQ" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_vectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgR = { "vector<LArMCTruth::ChanTrueQ*,allocator<LArMCTruth::ChanTrueQ*> >" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_reverse_iteratorlEvectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<LArMCTruth::ChanTrueQ*,allocator<LArMCTruth::ChanTrueQ*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR = { "LArRawData::DataFragment<float>" , 99 , -1 };
G__linked_taginfo G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR = { "LArRawData::DataFragment<unsigned short>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableDataModelDict() {
  G__DataModelDictLN_TClass.tagnum = -1 ;
  G__DataModelDictLN_TBuffer.tagnum = -1 ;
  G__DataModelDictLN_TMemberInspector.tagnum = -1 ;
  G__DataModelDictLN_TObject.tagnum = -1 ;
  G__DataModelDictLN_TString.tagnum = -1 ;
  G__DataModelDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR.tagnum = -1 ;
  G__DataModelDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR.tagnum = -1 ;
  G__DataModelDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__DataModelDictLN_string.tagnum = -1 ;
  G__DataModelDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__DataModelDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataModelDictLN_TList.tagnum = -1 ;
  G__DataModelDictLN_TObjArray.tagnum = -1 ;
  G__DataModelDictLN_TClonesArray.tagnum = -1 ;
  G__DataModelDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__DataModelDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataModelDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__DataModelDictLN_RunHeader.tagnum = -1 ;
  G__DataModelDictLN_timespec.tagnum = -1 ;
  G__DataModelDictLN_TTimeStamp.tagnum = -1 ;
  G__DataModelDictLN_TVector2.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__DataModelDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__DataModelDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_TParticle.tagnum = -1 ;
  G__DataModelDictLN_EventHeader.tagnum = -1 ;
  G__DataModelDictLN_BeamInfo.tagnum = -1 ;
  G__DataModelDictLN_GeomConfig.tagnum = -1 ;
  G__DataModelDictLN_LArRawData.tagnum = -1 ;
  G__DataModelDictLN_LArRawDatacLcLCode.tagnum = -1 ;
  G__DataModelDictLN_LArRawDatacLcLDtype.tagnum = -1 ;
  G__DataModelDictLN_LArRawDatacLcLDataChan.tagnum = -1 ;
  G__DataModelDictLN_LArRawDatacLcLDataCRM.tagnum = -1 ;
  G__DataModelDictLN_LArRawDatacLcLDataCRP.tagnum = -1 ;
  G__DataModelDictLN_lesslEstringgR.tagnum = -1 ;
  G__DataModelDictLN_LArVoxel.tagnum = -1 ;
  G__DataModelDictLN_LArVoxelcLcLVoxelInfo.tagnum = -1 ;
  G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM.tagnum = -1 ;
  G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP.tagnum = -1 ;
  G__DataModelDictLN_View_t.tagnum = -1 ;
  G__DataModelDictLN_LArReco.tagnum = -1 ;
  G__DataModelDictLN_LArRecocLcLRecoObj_t.tagnum = -1 ;
  G__DataModelDictLN_LArRecocLcLRecoObjLink.tagnum = -1 ;
  G__DataModelDictLN_LArRecocLcLRecoObject.tagnum = -1 ;
  G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR.tagnum = -1 ;
  G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataModelDictLN_reverse_iteratorlEvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataModelDictLN_LArRecocLcLQHit.tagnum = -1 ;
  G__DataModelDictLN_LArRecocLcLCluster2d.tagnum = -1 ;
  G__DataModelDictLN_vectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgR.tagnum = -1 ;
  G__DataModelDictLN_reverse_iteratorlEvectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataModelDictLN_LArRecocLcLTrack2d.tagnum = -1 ;
  G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR.tagnum = -1 ;
  G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgRcLcLiterator.tagnum = -1 ;
  G__DataModelDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataModelDictLN_RecoConfig.tagnum = -1 ;
  G__DataModelDictLN_allocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__DataModelDictLN_pairlEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR.tagnum = -1 ;
  G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator.tagnum = -1 ;
  G__DataModelDictLN_pairlEmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR.tagnum = -1 ;
  G__DataModelDictLN_HitReco.tagnum = -1 ;
  G__DataModelDictLN_LArRawDatacLcLDataLRO.tagnum = -1 ;
  G__DataModelDictLN_LArMCTruth.tagnum = -1 ;
  G__DataModelDictLN_LArMCTruthcLcLChanTrueQ.tagnum = -1 ;
  G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ.tagnum = -1 ;
  G__DataModelDictLN_vectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgR.tagnum = -1 ;
  G__DataModelDictLN_reverse_iteratorlEvectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR.tagnum = -1 ;
  G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableDataModelDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TString);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlEunsignedsPshortcOallocatorlEunsignedsPshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlEfloatcOallocatorlEfloatgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_string);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TList);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_RunHeader),sizeof(RunHeader),-1,263424,(char*)NULL,G__setup_memvarRunHeader,G__setup_memfuncRunHeader);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_timespec);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TTimeStamp);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TVector2);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_TParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_EventHeader),sizeof(EventHeader),-1,263424,(char*)NULL,G__setup_memvarEventHeader,G__setup_memfuncEventHeader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_BeamInfo),sizeof(BeamInfo),-1,263424,(char*)NULL,G__setup_memvarBeamInfo,G__setup_memfuncBeamInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_GeomConfig),sizeof(GeomConfig),-1,263424,(char*)NULL,G__setup_memvarGeomConfig,G__setup_memfuncGeomConfig);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRawData);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRawDatacLcLCode);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRawDatacLcLDtype);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRawDatacLcLDataChan),sizeof(LArRawData::DataChan),-1,324864,(char*)NULL,G__setup_memvarLArRawDatacLcLDataChan,G__setup_memfuncLArRawDatacLcLDataChan);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRawDatacLcLDataCRM),sizeof(LArRawData::DataCRM),-1,324864,(char*)NULL,G__setup_memvarLArRawDatacLcLDataCRM,G__setup_memfuncLArRawDatacLcLDataCRM);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRawDatacLcLDataCRP),sizeof(LArRawData::DataCRP),-1,292096,(char*)NULL,G__setup_memvarLArRawDatacLcLDataCRP,G__setup_memfuncLArRawDatacLcLDataCRP);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_lesslEstringgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArVoxel);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArVoxelcLcLVoxelInfo),sizeof(LArVoxel::VoxelInfo),-1,324864,(char*)NULL,G__setup_memvarLArVoxelcLcLVoxelInfo,G__setup_memfuncLArVoxelcLcLVoxelInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRM),sizeof(LArVoxel::VoxelInfoCRM),-1,324864,(char*)NULL,G__setup_memvarLArVoxelcLcLVoxelInfoCRM,G__setup_memfuncLArVoxelcLcLVoxelInfoCRM);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArVoxelcLcLVoxelInfoCRP),sizeof(LArVoxel::VoxelInfoCRP),-1,292096,(char*)NULL,G__setup_memvarLArVoxelcLcLVoxelInfoCRP,G__setup_memfuncLArVoxelcLcLVoxelInfoCRP);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_View_t);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArReco);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRecocLcLRecoObj_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRecocLcLRecoObjLink),sizeof(LArReco::RecoObjLink),-1,324864,(char*)NULL,G__setup_memvarLArRecocLcLRecoObjLink,G__setup_memfuncLArRecocLcLRecoObjLink);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRecocLcLRecoObject),sizeof(LArReco::RecoObject),-1,291841,(char*)NULL,G__setup_memvarLArRecocLcLRecoObject,G__setup_memfuncLArRecocLcLRecoObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR),sizeof(vector<LArReco::RecoObjLink,allocator<LArReco::RecoObjLink> >),-1,298752,(char*)NULL,G__setup_memvarvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR,G__setup_memfuncvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_reverse_iteratorlEvectorlELArRecocLcLRecoObjLinkcOallocatorlELArRecocLcLRecoObjLinkgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRecocLcLQHit),sizeof(LArReco::QHit),-1,324864,(char*)NULL,G__setup_memvarLArRecocLcLQHit,G__setup_memfuncLArRecocLcLQHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRecocLcLCluster2d),sizeof(LArReco::Cluster2d),-1,324864,(char*)NULL,G__setup_memvarLArRecocLcLCluster2d,G__setup_memfuncLArRecocLcLCluster2d);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_reverse_iteratorlEvectorlEconstsPLArRecocLcLQHitmUcOallocatorlEconstsPLArRecocLcLQHitmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRecocLcLTrack2d),sizeof(LArReco::Track2d),-1,324864,(char*)NULL,G__setup_memvarLArRecocLcLTrack2d,G__setup_memfuncLArRecocLcLTrack2d);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgR),sizeof(vector<TVector2,allocator<TVector2> >),-1,298752,(char*)NULL,G__setup_memvarvectorlETVector2cOallocatorlETVector2gRsPgR,G__setup_memfuncvectorlETVector2cOallocatorlETVector2gRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlETVector2cOallocatorlETVector2gRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_reverse_iteratorlEvectorlETVector2cOallocatorlETVector2gRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_RecoConfig),sizeof(RecoConfig),-1,324864,(char*)NULL,G__setup_memvarRecoConfig,G__setup_memfuncRecoConfig);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_allocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR),sizeof(map<string,vector<float,allocator<float> >,less<string>,allocator<pair<const string,vector<float,allocator<float> > > > >),-1,298752,(char*)NULL,G__setup_memvarmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR,G__setup_memfuncmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_pairlEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_maplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLreverse_iterator);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_pairlEmaplEstringcOvectorlEfloatcOallocatorlEfloatgRsPgRcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOvectorlEfloatcOallocatorlEfloatgRsPgRsPgRsPgRsPgRcLcLiteratorcOboolgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_HitReco),sizeof(HitReco),-1,263424,(char*)NULL,G__setup_memvarHitReco,G__setup_memfuncHitReco);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRawDatacLcLDataLRO),sizeof(LArRawData::DataLRO),-1,292096,(char*)NULL,G__setup_memvarLArRawDatacLcLDataLRO,G__setup_memfuncLArRawDatacLcLDataLRO);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArMCTruth);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArMCTruthcLcLChanTrueQ),sizeof(LArMCTruth::ChanTrueQ),-1,324864,(char*)NULL,G__setup_memvarLArMCTruthcLcLChanTrueQ,G__setup_memfuncLArMCTruthcLcLChanTrueQ);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArMCTruthcLcLAnodeTrueQ),sizeof(LArMCTruth::AnodeTrueQ),-1,294144,(char*)NULL,G__setup_memvarLArMCTruthcLcLAnodeTrueQ,G__setup_memfuncLArMCTruthcLcLAnodeTrueQ);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_vectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__DataModelDictLN_reverse_iteratorlEvectorlELArMCTruthcLcLChanTrueQmUcOallocatorlELArMCTruthcLcLChanTrueQmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEfloatgR),sizeof(LArRawData::DataFragment<float>),-1,292096,(char*)NULL,G__setup_memvarLArRawDatacLcLDataFragmentlEfloatgR,G__setup_memfuncLArRawDatacLcLDataFragmentlEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__DataModelDictLN_LArRawDatacLcLDataFragmentlEunsignedsPshortgR),sizeof(LArRawData::DataFragment<unsigned short>),-1,292096,(char*)NULL,G__setup_memvarLArRawDatacLcLDataFragmentlEunsignedsPshortgR,G__setup_memfuncLArRawDatacLcLDataFragmentlEunsignedsPshortgR);
}
extern "C" void G__cpp_setupDataModelDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupDataModelDict()");
  G__set_cpp_environmentDataModelDict();
  G__cpp_setup_tagtableDataModelDict();

  G__cpp_setup_inheritanceDataModelDict();

  G__cpp_setup_typetableDataModelDict();

  G__cpp_setup_memvarDataModelDict();

  G__cpp_setup_memfuncDataModelDict();
  G__cpp_setup_globalDataModelDict();
  G__cpp_setup_funcDataModelDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncDataModelDict();
  return;
}
class G__cpp_setup_initDataModelDict {
  public:
    G__cpp_setup_initDataModelDict() { G__add_setup_func("DataModelDict",(G__incsetup)(&G__cpp_setupDataModelDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initDataModelDict() { G__remove_setup_func("DataModelDict"); }
};
G__cpp_setup_initDataModelDict G__cpp_setup_initializerDataModelDict;

